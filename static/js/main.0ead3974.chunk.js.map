{"version":3,"sources":["components/Copyright/Copyright.js","components/Login/Login.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/Dashboard/Dashboard.js","components/ApiClient/MediaCatalogNetlifyClient.js","components/MediaCard/PlaylistSelectionDialog.js","components/MediaSourceList/MiniPoster.js","components/MediaCard/NewMovieCard.js","components/MediaCardList/MediaCardListComponent.js","components/MediaDirectory/MediaDirectory.js","components/RemoteUrlUpload/RemoteUrlUpload.js","components/Playlist/playlistDetails.js","components/Playlist/playlistGrid.js","components/Playlist/playlist.js","components/Playlist/playlistComponent.js","components/RemoteUrlUpload/CreateNewRequest/ChooseFilesToUpload.js","components/RemoteUrlUpload/CreateNewRequest/FinalStep.js","components/RemoteUrlUpload/CreateNewRequest.js","components/CreateMovie/Card.js","components/CreateMovie/CreateMovieByImdb.js","components/MediaSourceExplorer/MediaSourceExplorerComponent.js","components/MediaSourceList/SourceTypeComponent.js","components/ApiClient/TmdbClient.js","components/MediaSourceList/SearchMovieDialog.js","components/MediaSourceList/SimilarMovieAssign.js","components/MediaSourceList/MovieFetchComponent.js","components/MediaSourceList/MediaSourceListComponent.js","components/Routes.js","components/Preferences/Preferences.js","components/SideNavBar/SideNavBar.js","components/NotFound/NotFound.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","setToken","classes","responseGoogle","res","Container","component","maxWidth","CssBaseline","className","Avatar","clientId","onSuccess","onFailure","cookiePolicy","Box","mt","Title","props","gutterBottom","children","createData","time","amount","undefined","Chart","useTheme","preventDefault","event","depositContext","flex","Deposits","Fragment","onClick","id","date","name","shipTo","paymentMethod","rows","seeMore","Orders","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","apiClient","_instance","axios","baseURL","interceptors","request","use","config","idToken","JSON","parse","localStorage","token","tokenId","headers","Authorization","AuthenticatedClient","PlaylistSelectionDialog","open","mediaId","selectedPlaylist","onClose","useState","playlists","setPlaylists","useEffect","a","get","allPlaylist","data","React","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","resource","push","put","splice","delete","Dialog","aria-labelledby","DialogTitle","DialogContent","style","dividers","FormControl","FormGroup","FormControlLabel","control","Checkbox","onChange","label","card","boxShadow","borderRadius","transform","bottom","fontFamily","fontSize","fontWeight","maxHeight","borderTopLeftRadius","borderTopRightRadius","background","tag","marginBottom","author","borderBottomLeftRadius","borderBottomRightRadius","common","white","contentoverride","titleclass","MiniPoster","posterPath","backpath","year","isTv","mode","tagline","action","mediaItemId","playlistIds","Card","CardMedia","src","CardHeader","subheader","titleTypographyProps","noWrap","subheaderTypographyProps","NewMovieCard","movie","showPlaylistSelectionDialog","setShowPlaylistSelectionDialog","anchorEl","setAnchorEl","IconButton","currentTarget","Boolean","MenuItem","playlistEl","x","playlistId","backdropPath","itemType","MediaCardListComponent","items","isLoading","movieColumns","Grid","item","xs","sm","md","lg","CircularProgress","disableShrink","length","direction","justify","searchbar","myComponent","state","error","isLoaded","Headers","append","fetch","response","json","tempdata","console","log","this","setState","message","columns","options","filterType","download","print","Component","PlaylistDetails","setData","loading","setLoading","result","PlaylistGridComponent","customBodyRender","tableMeta","rowIndex","viewColumns","searchable","confirmFilters","selectableRows","customFilterDialogFooter","currentFilterList","applyNewFilters","Button","PlaylistPage","useParams","handleSelectionChange","p","q","r","s","selectedData","i","index","onSelectionChange","zipFileUrl","defaultZipFileUrl","fetchUrl","encodeURIComponent","responseAsJson","search","filter","pagination","onRowSelectionChange","FinalStep","selectedFiles","files","path","payload","fileUrl","method","body","stringify","ok","Error","status","button","actionsContainer","resetContainer","backdropIMG","numeral","require","details","backgroundSize","backgroundRepeat","backgroundImage","minHeight","posterContainer","textAlign","poster","metadata","additionalDetails","MovCard","test","posterIMG","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","nestedDataToString","backdrop","rating","vote","format","styleofbg","CardContent","original_title","overview","release","runtime","nestedData","nestedArray","forEach","join","handleChange","e","target","findMovieIdByImdbId","v","imdbMovieApiUrl","responseJson","movie_results","fetchMovieID","imdbId","movieID","url","fetchApi","TextField","placeholder","fullWidth","defaultValue","then","homepage","poster_path","production_companies","release_date","vote_average","backdrop_path","wrapper","buttonSuccess","green","buttonError","red","fabProgress","top","left","buttonProgress","iconButton","input","SourceTypeComponent","getRenderValue","apiKey","tmdbClient","findMovie","movieId","findImdbId","tmdbId","apiUrl","resposne","external_ids","imdb_id","dialogPaper","SearchMovieDialog","handleSelect","show","query","searchQuery","setSearchQuery","searchTv","setSearchTv","results","setResults","selectedId","setSelectedId","handleClose","setValue","Tabs","newValue","indicatorColor","textColor","Tab","icon","autoFocus","debounce","List","ListItem","selected","ListItemAvatar","ListItemText","primary","first_air_date","substr","DialogActions","disabled","SimilarMovieAssign","checkedItems","assignSelection","mediaSourceId","labelId","ListItemIcon","edge","tabIndex","disableRipple","inputProps","renderedTitle","cover","controls","paddingLeft","playIcon","posterMedia","LightTooltip","withStyles","tooltip","Tooltip","MovieFetchComponent","handleMediaAssignment","avatarUrl","setAvatarUrl","setBackdropPath","setPosterPath","setPosterUrl","setTitle","setYear","setOverview","hasResult","setHasResult","setResult","showDialog","setShowDialog","similarMediaResults","setSimilarMediaResults","similarMediaItemShowDialog","setSimilarMediaItemShowDialog","deleteIcon","innerDeleteHandler","assigncurrentmedia","isthisitemtv","post","similarMediaResponse","handleSelectSearchDialog","outputofdialog","miniPoster","chip","Chip","onDelete","clickable","assignedItems","payloadToSend","interactive","enterDelay","placement","arrow","dayjs","relativeTime","extend","Routes","sidebarName","fixedHeightPaper","clsx","Paper","DashboardIcon","ShoppingCartIcon","hide","setSearch","MovieIcon","RemoteUrlUpload","CloudUploadIcon","useForm","register","handleSubmit","errors","activeStep","setActiveStep","setZipFileUrl","setSelectedFiles","handleFileSelection","steps","getStepContent","step","type","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","square","elevation","AddIcon","SubscriptionsIcon","CreateMovieByImdb","uniqueid","now","toString","Math","random","toUpperCase","rootUrl","setRootUrl","firstuniqueid","initialData","attributes","onNodeClickCallback","ctx","isTraversed","nextData","clone","leafnode","findNodeFromName","hasErrors","utocall","resolvedUrl","anotherdata","link","parentNode","keyName","foundele","nodeSize","y","foreignObjectProps","InputProps","endAdornment","InputAdornment","aria-label","onNodeClick","translate","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","Fab","renderForeignObjectNode","AccountTreeIcon","page","setPage","pageSize","setRows","rowCount","setRowCount","pendingSelection","setPendingSelection","fxhandleMediaAssignment","updatedRows","matchingResult","find","field","headerName","sortable","renderCell","valueFormatter","fromNow","onlyPending","total","ToggleButtonGroup","exclusive","ev","val","ToggleButton","autoHeight","paginationMode","onPageChange","params","checkboxSelection","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","withRouter","activeRoute","routeName","location","pathname","prop","key","to","navurl","textDecoration","NotFound","App","handle","window","setInterval","getToken","internalSetToken","clearInterval","tokenString","getItem","userToken","tokenObj","expires_at","setItem","onlyValidToken","useToken","setOpen","AppBar","Toolbar","Drawer","Divider","exact","render","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ead3974.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Media Catalog UI\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}  ","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Avatar, CssBaseline, Box, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport {Copyright} from '../Copyright/Copyright';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n  const classes = useStyles();\n  const responseGoogle = (res) => {    \n    setToken(res);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <GoogleLogin\n          clientId=\"345350504609-1moo0gfi27h0jj2qaim5ed1iohgprs99.apps.googleusercontent.com\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>    \n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <div>Charts...</div>\n    // <React.Fragment>\n    //   <Title>Today</Title>\n    //   <ResponsiveContainer>\n    //     <LineChart\n    //       data={data}\n    //       margin={{\n    //         top: 16,\n    //         right: 16,\n    //         bottom: 0,\n    //         left: 24,\n    //       }}\n    //     >\n    //       <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n    //       <YAxis stroke={theme.palette.text.secondary}>\n    //         <Label\n    //           angle={270}\n    //           position=\"left\"\n    //           style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n    //         >\n    //           Sales ($)\n    //         </Label>\n    //       </YAxis>\n    //       <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n    //     </LineChart>\n    //   </ResponsiveContainer>\n    // </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../SideNavBar/SideNavBar';\nimport Chart from '../Chart';\nimport Deposits from '../Deposits';\nimport Orders from '../Orders';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    \n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          \n      \n    \n  );\n}","import axios from 'axios';\n\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://mediacatalog.netlify.app/.netlify/functions/server/'\n    });\n    _instance.interceptors.request.use(config => {        \n        const idToken = JSON.parse(localStorage.token).tokenId;\n        config.headers.Authorization = 'Bearer ' + idToken;\n        return config;\n    });\n    return _instance;\n}\n\nexport const apiClient = AuthenticatedClient();","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, Checkbox, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport const PlaylistSelectionDialog = ({ open, mediaId, selectedPlaylist, onClose }) => {\n    const theme = useTheme();\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        if (open) {\n            (async () => {\n                const allPlaylist = await apiClient.get('playlists');\n                setPlaylists(allPlaylist.data);\n            })();\n        }\n    }, [open]);\n    const [checked, setChecked] = React.useState(selectedPlaylist);\n\n    const handleToggle = (value) => async () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        const resource = `items/${mediaId}/playlists/${value}`;\n        if (currentIndex === -1) {\n            newChecked.push(value);\n            setChecked(newChecked);\n            await apiClient.put(resource);\n        } else {\n            newChecked.splice(currentIndex, 1);\n            setChecked(newChecked);\n            await apiClient.delete(resource);\n        }\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            maxWidth='sm'\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Playlist...</DialogTitle>\n            <DialogContent style={{ width: 240 }} dividers>\n                <FormControl>\n                    <FormGroup>\n                        {playlists.map((value) => {\n                            return (\n                                <FormControlLabel\n                                    key={value.id}\n                                    control={<Checkbox checked={checked.indexOf(value.id) !== -1}\n                                        onChange={handleToggle(value.id)}\n                                        color='primary'\n                                        name={value.id} />}\n                                    label={value.title}\n                                />\n                            );\n                        })}\n                    </FormGroup>\n                </FormControl>\n            </DialogContent>\n        </Dialog>\n    );\n}","import { Avatar, Box, Card, CardHeader, CardMedia, IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // width: 360,\n        // height: 275,\n        position: 'relative',\n        boxShadow: '0 8px 24px 0 rgba(0,0,0,0.12)',\n        // overflow: 'visible',\n        borderRadius: '1.5rem',\n        transition: '0.4s',\n        '&:hover': {\n            transform: 'scale(1.02)',\n            '& $shadow': {\n                bottom: '-1.5rem',\n            },\n            '& $shadow2': {\n                bottom: '-2.5rem',\n            },\n        },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     zIndex: 0,\n        //     display: 'block',\n        //     width: '100%',\n        //     bottom: -1,\n        //     height: '100%',\n        //     borderRadius: '1.5rem',\n        //     backgroundColor: 'rgba(0,0,0,0.08)',\n        // },\n    },\n    title: {\n        fontFamily: \"'Sen', sans-serif\",\n        fontSize: '1rem',\n        fontWeight: 800,\n        color: '#fff',\n    },\n    main: {\n        maxHeight: 385,\n        overflow: 'hidden',\n        borderTopLeftRadius: '1.5rem',\n        borderTopRightRadius: '1.5rem',\n        zIndex: 1,\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            display: 'block',\n            width: '100%',\n            height: '100%',\n            background: 'linear-gradient(to top, #014a7d, rgba(0,0,0,0))',\n        },\n    },\n    content: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        zIndex: 1,\n        padding: '1.5rem 1.5rem 1rem',\n    }, tag: {\n        display: 'inline-block',\n        fontFamily: \"'Sen', sans-serif\",\n        backgroundColor: '#ff5dac',\n        borderRadius: '0.5rem',\n        padding: '2px 0.5rem',\n        color: '#fff',\n        marginBottom: '0.5rem',\n    }, avatar: {\n        width: 36,\n        height: 36,\n    }, author: {\n        // zIndex: 1,\n        position: 'relative',\n        borderBottomLeftRadius: '1.5rem',\n        borderBottomRightRadius: '1.5rem',\n        backgroundColor: theme.palette.common.white\n    },\n    contentoverride: {\n        overflow: 'hidden'\n    },\n    titleclass: {\n        fontSize: '0.8rem',\n        fontWeight: 500\n    }\n}));\nexport const MiniPoster = ({ posterPath, backpath, title, year, isTv, tagline, mode, mediaItemId, playlistIds, action }) => {\n    const classes = useStyles();\n    const calculatedBackdrop = () => {\n        if (mode === 'portrait') {\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n        }\n\n        if (backpath)\n            return `https://image.tmdb.org/t/p/w780/${backpath}`;\n        else\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n    }\n    const calculatedPosterPath = () => {\n        return `https://image.tmdb.org/t/p/w92${posterPath}`\n    }\n\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <Box className={classes.main} position={'relative'}>\n                    <CardMedia src={calculatedBackdrop()} component=\"img\" />\n                    <div className={classes.content}>\n                        <div className={classes.tag}>{isTv ? 'TV' : 'Movie'}</div>\n                        <Typography variant={'h2'} className={classes.title}>\n                            {title} ({year})\n                    </Typography>\n                    </div>\n                </Box>\n                <CardHeader className={classes.author} classes={{\n                    content: classes.contentoverride\n                }} avatar={<Avatar src={calculatedPosterPath()} />}\n                    title={title}\n                    subheader={year}\n                    titleTypographyProps={{ noWrap: true, gutterBottom: false }}\n                    subheaderTypographyProps={{ noWrap: true }}\n                    action={action}\n                />\n            </Card>            \n        </div>\n    )\n}\n\nconst Mymenulist = () => {\n    const [show, setShow] = useState(false);\n    return (\n        <div>\n            <IconButton onClick={setShow(true)}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu open={show} onClose={() => setShow(false)}>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Playlist\n            </MenuItem>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Info\n            </MenuItem>\n            </Menu>\n        </div>\n\n    )\n}","import { useState } from \"react\";\nimport { MiniPoster } from \"../MediaSourceList/MiniPoster\";\n\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { PlaylistSelectionDialog } from '../MediaCard/PlaylistSelectionDialog';\n\n\nexport const NewMovieCard = ({ movie }) => {\n\n    const [showPlaylistSelectionDialog, setShowPlaylistSelectionDialog] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePlaylistMenuItemClick = () => {\n        setAnchorEl(null);\n        setShowPlaylistSelectionDialog(true)\n    }\n    const action = <div>\n        <IconButton onClick={handleClick}>\n            <MoreVertIcon />\n        </IconButton>\n        <Menu anchorEl={anchorEl} onClose={() => setAnchorEl(null)} open={Boolean(anchorEl)} >\n            <MenuItem onClick={handlePlaylistMenuItemClick}>\n                Save to Playlist\n        </MenuItem>\n        </Menu>\n    </div>\n\n    const playlistEl = <PlaylistSelectionDialog open={showPlaylistSelectionDialog} selectedPlaylist={movie.playlistIds.map(x=>x.playlistId)}\n        mediaId={movie.id}\n        onClose={() => { setShowPlaylistSelectionDialog(false) }}\n    />\n\n    return <div>\n        <MiniPoster backpath={movie.backdropPath}\n            isTv={movie.itemType === 'tv'}\n            posterPath={movie.posterPath}\n            title={movie.title}\n            year={movie.year}\n            tagline={movie.tagline}\n            mediaItemId={movie.id}\n            playlistIds={movie.playlistIds}\n            mode=\"portrait\"\n            action={action}\n        />\n        {playlistEl}\n    </div>\n}","import React from 'react';\nimport { Grid, LinearProgress, CircularProgress } from '@material-ui/core';\nimport MovieCard from \"../MediaCard/MediaCardComponent\";\nimport { NewMovieCard } from '../MediaCard/NewMovieCard';\n\n\nexport const MediaCardListComponent = ({ items, isLoading }) => {\n    \n    // const [movies, setMovies] = React.useState(items);\n\n    const deleteHandler = (mediaId) => {\n        const moviesAfterRemove = items.filter(x=>x.id!=mediaId);\n        // setMovies(moviesAfterRemove);        \n    };\n    const movieColumns = items ? items.map((movie) => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={movie.id}>\n            <NewMovieCard movie={movie}></NewMovieCard>\n            {/* <MovieCard movie={movie} handleItemRemove={deleteHandler} /> */}\n        </Grid>\n    )) : null;\n    if(isLoading){\n        return <CircularProgress disableShrink />\n    }\n    else if (movieColumns?.length) {\n        return (\n            <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={3}>\n                {movieColumns || \"hello\"}\n            </Grid>\n        );\n    } else {\n        return <div>No items found</div>\n    }\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { debounce } from '@material-ui/core';\nimport {MediaCardListComponent} from '../MediaCardList/MediaCardListComponent';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchbar: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function MediaDirectory() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const classes = useStyles();\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const searchQuery = search;\n      setLoading(true);\n      const result = await apiClient.get(`items?q=${searchQuery}`);\n      if (search === searchQuery) {\n        setData(result.data);\n        setLoading(false);\n      }\n    })();\n  }, [search]);\n\n  return (\n    <div>\n      <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n        onChange={debounce(handleOnChange, 250)} \n        defaultValue={search} className={classes.searchbar} />\n      <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n    </div>\n  );\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        const columns = [\"ts\", \"requestId\", \"fileName\", \"sequence\", \"status\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false\n        };\n\n        const { error, isLoaded, data} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Remote Url Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}\n\nexport default myComponent;","import React, { useState, useEffect } from 'react';\nimport { MediaCardListComponent } from '../MediaCardList/MediaCardListComponent'\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport const PlaylistDetails = ({ playlistId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const result = await apiClient.get(`playlists/${playlistId}/items?pageSize=100`);\n            setData(result.data.items);\n            setLoading(false);\n        })();\n    }, [playlistId]);\n\n    return (\n        <div>\n            <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n        </div>\n    );\n};","import React from 'react';\nimport { Typography, Button, Link } from '@material-ui/core';\nimport MUIDataTable from \"mui-datatables\";\n\n\nconst PlaylistGridComponent = ({ data }) => {    \n    const columns = [{\n        name: \"title\",\n        options: {\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <Link href={`/playlistdetails/${data[tableMeta.rowIndex].id}`} >\n                        {value}\n                    </Link>\n                );\n            }\n        }\n    }, {\n        name: \"ts\", label: \"Created\", options: {\n            customBodyRender: (value) => {\n                return (\n                    <div title={value}>{value}</div>\n                );\n            }\n        }\n    }];\n    const options = {\n        download: false,\n        print: false,\n        viewColumns: false,\n        searchable: false,\n        filterType: 'multiselect',\n        confirmFilters: true,\n        selectableRows: false,\n        customFilterDialogFooter: (currentFilterList, applyNewFilters) => {\n            return (\n                <div style={{ marginTop: '40px' }}>\n                    <Button variant=\"contained\" onClick={applyNewFilters}>Apply Filters</Button>\n                </div>\n            );\n        }\n    };\n\n    return <MUIDataTable\n        title={\n            <Typography variant=\"h6\">\n                Playlist\n          {/* {isLoading && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />} */}\n            </Typography>\n        }\n        data={data}\n        columns={columns}\n        options={options}\n    />;\n}\n\nexport default PlaylistGridComponent;","import React from 'react';\nimport PlaylistGrid from '../Playlist/playlistGrid';\n\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/playlists';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        \n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <PlaylistGrid data = {data}></PlaylistGrid>;\n        }\n    }\n}\n\nexport default myComponent;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PlaylistDetails } from './playlistDetails'\nimport Playlist from '../Playlist/playlist'\nexport const PlaylistPage = () => {\n    let { id } = useParams();\n    if (id) {\n        return (\n            <PlaylistDetails playlistId={id}></PlaylistDetails>\n        );\n    } else {\n        return (\n            <Playlist></Playlist>\n        );\n    }\n}","import React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nexport default class myComponent extends React.Component {\n    constructor(props) {\n        // debugger;\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            zipFileUrl: props.defaultZipFileUrl,\n            onSelectionChange: props.onSelectionChange\n        };\n\n    }\n\n    async componentDidMount() {\n        const fetchUrl = `https://mediacatalogdirectorylisting.herokuapp.com/api/zip/listFiles?zipFileUrl=${encodeURIComponent(this.state.zipFileUrl)}`;\n        const response = await fetch(fetchUrl);\n        try {\n            const responseAsJson = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: responseAsJson\n            });\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n\n    }\n\n    handleSelectionChange = (p, q, r, s) => {\n        const selectedData = q.map(i => this.state.data[i.index]);\n        this.state.onSelectionChange && this.state.onSelectionChange(selectedData);\n    }\n\n    render() {\n        const columns = [\"path\", \"uncompressedSize\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false,\n            search: false,\n            viewColumns: false,\n            filter: false,\n            pagination: false,\n            onRowSelectionChange: this.handleSelectionChange\n        };\n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: We have some errrors</div>;\n        } else if (!isLoaded) {\n            return <div>Fetching files inside zip file...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}","import React from 'react';\n\nexport default class FinalStep extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            selectedFiles: props.selectedFiles,\n            zipFileUrl: props.zipFileUrl\n        };\n    }\n\n    async componentDidMount() {        \n        const files = this.state.selectedFiles.map(i => i.path);\n        const payload = {\n            fileUrl: this.state.zipFileUrl,\n            files\n        };\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        headers.append(\"content-type\", \"application/json\");\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        try {\n            const response = await fetch(apiUrl, { headers: headers, method: 'POST', body: JSON.stringify(payload) });\n            if (response.ok) {\n                const tempdata = await response.json();\n\n                this.setState({\n                    isLoaded: true,\n                    data: tempdata\n                });\n            } else {\n                throw Error(`Unexpected response code receieved ${response.status}`);\n            }\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n    }\n    render() {\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Submitting Request...</div>;\n        } else {\n            return <span>Success!</span>;\n        }\n    }\n}","import { React, useState } from 'react';\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ChooseFilesToUpload from './CreateNewRequest/ChooseFilesToUpload';\nimport ChooseFilesToUploadFinalStep from './CreateNewRequest/FinalStep';\n\nimport { FormHelperText, TextField, InputLabel, Input, FormControl, Paper, Grid, Typography, Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\n\n// import FormInput from \"./../Controls/index\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Enter a zip file URL', 'Choose Files to Upload', 'Finish'];\n}\n\n\nexport default function App() {\n    const { control, register, handleSubmit, errors } = useForm();\n    const onSubmit = data => { alert('hello'); console.log(data); }\n\n    const classes = useStyles();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [zipFileUrl, setZipFileUrl] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleChange = (e) => {\n        setZipFileUrl(e.target.value);\n    };\n\n    const handleFileSelection = (e) => {\n        setSelectedFiles(e);\n    };\n\n    const steps = getSteps();\n\n    function getStepContent(step) {        \n        switch (step) {\n            case 0:\n                return <TextField name=\"fileUrl\" type=\"URL\" defaultValue={zipFileUrl} fullWidth onChange={handleChange} />;\n            case 1:\n                return <ChooseFilesToUpload defaultZipFileUrl={zipFileUrl} onSelectionChange={handleFileSelection} />;\n            case 2:\n                return <ChooseFilesToUploadFinalStep selectedFiles={selectedFiles} zipFileUrl = {zipFileUrl} />;\n            default:\n                return 'unknown step'\n        }\n    }\n\n    const handleNext = () => {        \n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                  </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )}\n            </div>\n            {/* <form onSubmit={handleSubmit(onSubmit)}>\n                <Paper style={{ padding: 16 }}>\n                    <Typography  >\n                        New Request Form\n                        </Typography>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField name=\"zipFileUrl\" error={!!errors.username} label=\"Zip File URL\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"URL\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField name=\"username\" error={!!errors.username} label=\"Username\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"email\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid container item xs={12} justify=\"flex-end\">\n                            <Button color=\"primary\" type=\"submit\" variant=\"contained\" fullWidth>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </form> */}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\n\n// import './Card.scss';\nimport { Card, CardContent, Typography, CardMedia, CardHeader, Avatar, IconButton, Grid, Divider } from '@material-ui/core';\nimport { makeStyles, rgbToHex, withStyles } from '@material-ui/core/styles';\n\nlet numeral = require('numeral');\nlet backdropIMG;\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: '20px',\n        display: 'flex',\n        background: 'rgba(0,0,0,.85)'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        flex: '1 0 auto',\n        color: 'white',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,.85) 15%,rgba(0,0,0,.2) 40%,#000 90%)',\n        minHeight: '500px'\n    },\n    posterContainer: {\n        textAlign: 'center'\n    },\n    poster: {        \n        width: '120px',\n        [theme.breakpoints.up('md')]:{\n            width: '200px'\n        }\n    },\n    tagline: {\n        display: 'block',\n        paddingBottom: '0.25em',\n        color: 'limeGreen',\n        fontSize: '1.3em'\n    },\n    metadata: {\n        display: 'block',\n        color: 'limeGreen',\n    },\n    additionalDetails: {\n        margin: \"35px 0 20px\"\n    }\n}));\n\nexport default function MovCard({ data, test }) {\n    const classes = useStyles();\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\n    let rating = '';\n\n    // conditional statements for no data\n    if (data.vote === 'undefined' || data.vote === 0) {\n        rating = noData\n    } else {\n        rating = data.vote\n    };\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n        totalRevenue = noData\n    } else {\n        totalRevenue = numeral(data.revenue).format('($0,0)');\n    };\n\n    if (data.poster == null) {\n        posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    const styleofbg = `url(${backdropIMG})`;\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <div className={classes.details} style={{ backgroundImage: styleofbg }}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                            {data.original_title}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" className={classes.tagline}>\n                            {data.tagline}\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            <Grid container>\n                                <Grid item xs={9}>\n                                    {data.overview}\n                                    <Grid container className={classes.additionalDetails}>\n                                        <Grid item md={3}>\n                                            Original Release: <span className={classes.metadata}>{data.release}</span>\n                                    Box Office: <span className={classes.metadata}>{totalRevenue}</span>\n                                        </Grid>\n                                        <Grid item md={3}>\n                                            Running Time: <span className={classes.metadata}>{data.runtime} mins</span>\n                                Rating: <span className={classes.metadata}>{rating}</span>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={3} className={classes.posterContainer}>\n                                    <img src={posterIMG} className={classes.poster}></img>\n                                    {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n                                </Grid>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n                </div>\n                {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n            </Card>\n        </div>\n    );\n\n\n    function nestedDataToString(nestedData) {\n        let nestedArray = [],\n            resultString;\n        if (nestedData !== undefined) {\n            nestedData.forEach(function (item) {\n                nestedArray.push(item.name);\n            });\n        }\n        resultString = nestedArray.join(', '); // array to string\n        return resultString;\n    };\n\n}\n","import React, { Component, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Card from './Card';\n\nclass myComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null,\n            imdbId: 'tt0468569'\n        };\n    }\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return <div id=\"createMovieContainer000001\">\n            <TextField name=\"imdbId\" label=\"IMDB Id\" placeholder=\"Enter IMDB Id\" fullWidth\n                onChange={this.fetchMovieID} defaultValue={this.state.imdbId} />            \n            <Card data={this.state} />\n        </div>\n    }\n\n\n    // the api request function\n    fetchApi(url) {\n\n        fetch(url).then((res) => res.json()).then((data) => {\n            // update state with API data\n            this.setState({\n                movieID: data.id,\n                original_title: data.original_title,\n                tagline: data.tagline,\n                overview: data.overview,\n                homepage: data.homepage,\n                poster: data.poster_path,\n                production: data.production_companies,\n                production_countries: data.production_countries,\n                genre: data.genres,\n                release: data.release_date,\n                vote: data.vote_average,\n                runtime: data.runtime,\n                revenue: data.revenue,\n                backdrop: data.backdrop_path\n            })\n        })\n    }\n\n    findMovieIdByImdbId = async (v) => {\n        const imdbMovieApiUrl = `https://api.themoviedb.org/3/find/${v}?&api_key=cfe422613b250f702980a3bbf9e90716&external_source=imdb_id`;\n        const response = await fetch(imdbMovieApiUrl);\n        const responseJson = await response.json();\n        return responseJson.movie_results && responseJson.movie_results[0] && responseJson.movie_results[0].id;\n    }\n\n    fetchMovieID = async (e) => {\n        const imdbId = e.target.value;\n        this.setState({ imdbId: imdbId });\n        const movieID = await this.findMovieIdByImdbId(imdbId);\n        if (movieID) {\n            let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n            this.fetchApi(url);\n        }\n    }\n\n    async componentDidMount() {        \n        const movieID = await this.findMovieIdByImdbId(this.state.imdbId);\n        let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n        this.fetchApi(url)\n    }\n}\n\nexport default myComponent;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fab, Tooltip, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ErrorIcon from '@material-ui/icons/Edit';\nimport Tree from 'react-d3-tree';\nimport axios from 'axios';\nimport clone from 'clone';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonError: {\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }, iconButton: {\n        padding: 10,\n    }, input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n\nexport const MediaSourceExplorerComponent = ({ items, isLoading }) => {\n    const classes = useStyles();\n    const uniqueid = () => { return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase(); }\n    const [rootUrl, setRootUrl] = useState('');\n\n    const handleRootUrlOnChange = (event) => {\n        const { value } = event.target;\n        setRootUrl(value);        \n    };\n    \n    const setTreeRootUrl = () => {\n        setData({\n            name: rootUrl,\n            attributes: {\n                url: rootUrl,\n                id: uniqueid()\n            }\n        })\n    };\n\n    const firstuniqueid = uniqueid();\n    const initialData = {\n        name: rootUrl,\n        attributes: {\n            url: rootUrl,\n            id: firstuniqueid\n        }\n    };\n\n\n    const [data, setData] = useState(initialData);\n\n    const renderForeignObjectNode = ({\n        nodeDatum,\n        toggleNode,\n        foreignObjectProps\n    }) => (\n        <foreignObject {...foreignObjectProps} >\n            <div className={classes.wrapper}>\n                <Tooltip title={<React.Fragment>\n                    Name: {nodeDatum.name}\n                    <br></br>\n                        Url: {nodeDatum.attributes.url}\n                </React.Fragment>}>\n                    <Fab\n                        color=\"primary\"\n                        className={nodeDatum.attributes.hasErrors && classes.buttonError}\n                        onClick={() => {\n                            if (!nodeDatum.attributes.isTraversed) {\n                                if (!nodeDatum.attributes.loading) {\n                                    nodeDatum.attributes.hasErrors = false;\n                                    nodeDatum.attributes.loading = true;\n                                    onNodeClickCallback(nodeDatum);\n                                }\n                            }\n                            toggleNode();\n                        }}\n                    >\n                        {nodeDatum.attributes.hasErrors && <ErrorIcon />}\n                    </Fab>\n                </Tooltip>\n                {nodeDatum.attributes.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n            </div>\n        </foreignObject>\n    );\n\n    const onNodeClickCallback = async (ctx) => {\n        if (ctx.attributes.isTraversed) return;\n        const nextData = clone(data);\n        const leafnode = findNodeFromName(nextData, ctx.attributes.id);\n        try {\n            leafnode.attributes.hasErrors = false;\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?q=${encodeURIComponent(ctx.attributes.url)}`;\n            const response = await axios.get(utocall);\n            const children = [];\n            for (const resolvedUrl of response.data) {\n                const anotherdata = {\n                    name: resolvedUrl.title, attributes: {\n                        url: resolvedUrl.link,\n                        id: uniqueid()\n                    }\n                }\n                children.push(anotherdata);\n            }\n            leafnode.attributes.isTraversed = true;\n            leafnode.children = children;\n        } catch (error) {\n            leafnode.attributes.hasErrors = true;\n            leafnode.attributes.isLoading = false;\n        }\n        setData(nextData);\n    };\n\n    function findNodeFromName(parentNode, keyName) {\n        if (parentNode.attributes.id === keyName) {\n            return parentNode;\n        } else if (parentNode.children?.length) {\n            for (const childelement of parentNode.children) {\n                const foundele = findNodeFromName(childelement, keyName);\n                if (foundele) return foundele;\n            }\n        }\n        return null;\n    }\n\n    const nodeSize = { x: 200, y: 200 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: -34, y: -34 };\n\n    return <div>\n\n        <div id=\"treeWrapper\" style={{ height: '40em' }}>\n            <TextField label=\"Root Url\" placeholder=\"Root Url\" fullWidth InputProps={{\n                endAdornment: (<InputAdornment>\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick={setTreeRootUrl}>\n                        <SearchIcon />\n                    </IconButton>\n                </InputAdornment>)\n            }}\n                onChange={handleRootUrlOnChange} />\n            <Tree data={data}\n                orientation='vertical'\n                onNodeClick={onNodeClickCallback}\n                nodeSize={nodeSize}\n                translate={{ x: 100, y: 100 }}\n                renderCustomNodeElement={(rd3tProps) =>\n                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                }\n            />\n        </div>\n    </div>\n}","import { Typography } from '@material-ui/core';\nexport default function SourceTypeComponent({ value }) {\n    const getRenderValue = () => {\n        switch (value) {\n            case 'hdhub':\n                return 'HH'                \n            case 'extramovies':\n                return 'EM'                \n            default:\n                return value                \n        }\n    }    \n    return <Typography variant=\"body2\" color=\"textSecondary\">{getRenderValue()}</Typography>\n}","import axios from 'axios';\nconst apiKey = 'cfe422613b250f702980a3bbf9e90716';\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://api.themoviedb.org/3'\n    });\n\n    return {\n        findMovie: (movieId) => {\n\n        },\n        findImdbId: async (tmdbId, isTv) => {\n            let apiUrl = `${isTv ? 'tv' : 'movie'}/${tmdbId}?api_key=${apiKey}&language=en-US&append_to_response=external_ids`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data.external_ids.imdb_id;\n        },\n        search: async (q, isTv) => {\n            let apiUrl = `search/${isTv ? 'tv' : 'movie'}?api_key=${apiKey}&language=en-US&&query=${encodeURIComponent(q)}`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data;\n        }\n    }\n}\nexport const tmdbClient = AuthenticatedClient();","import { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogActions, debounce, Tabs, Tab } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport TvIcon from '@material-ui/icons/Tv';\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\n\nexport const SearchMovieDialog = ({ handleSelect, show, query, isTv }) => {\n    // const [open, setOpen] = useState(show);\n    const [searchQuery, setSearchQuery] = useState(query);\n    const [searchTv, setSearchTv] = useState(isTv);\n    const [results, setResults] = useState([]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    const classes = useStyles();\n    //const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => {\n        handleSelect(null);\n    };\n\n    const handleItemSelectionClose = () => {\n        handleSelect({\n            id: selectedId,\n            isTv: searchTv\n        });\n    };\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setSearchQuery(value);\n    };\n\n    useEffect(() => {\n        if (!searchQuery || !show) return;\n        (async () => {\n            console.log(searchTv);\n            const { results } = await tmdbClient.search(searchQuery, searchTv);\n            setResults(results);\n        })();\n    }, [searchQuery, show, searchTv]);\n\n    const [value, setValue] = useState(isTv ? 1 : 0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setSearchTv(newValue === 1);\n        setSelectedId(0);\n    };\n\n    return (<div>\n        <Dialog open={show}\n            fullWidth={true}\n            classes={{ paper: classes.dialogPaper }}\n            onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {/* <DialogTitle id=\"form-dialog-title\">Search</DialogTitle> */}\n            <DialogTitle style={{ padding: 0 }}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\">\n                    <Tab icon={<MovieIcon />} label=\"MOVIES\" />\n                    <Tab icon={<TvIcon />} label=\"TV\" />\n                </Tabs>\n            </DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    defaultValue={searchQuery}\n                    fullWidth\n                    onChange={debounce(handleOnChange, 250)}\n                />\n\n                {/* <FormControlLabel control={<Checkbox defaultChecked={searchTv}\n                    onChange={handleSetTv} />} label=\"TV\" /> */}\n                {\n                    results && (<List component=\"nav\">\n                        {results.map((value) => {\n                            return (<ListItem\n                                key={value.id}\n                                button\n                                selected={selectedId === value.id}\n                                onClick={() => setSelectedId(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={value.poster_path && `https://image.tmdb.org/t/p/w92${value.poster_path}`}></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={`${value.title || value.name}`}\n                                    secondary={(value.release_date || value.first_air_date)?.substr(0, 4)} />\n                            </ListItem>)\n                        })}\n                    </List>)\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleItemSelectionClose} color=\"primary\" disabled={selectedId === 0}>\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n    </div>);\n}","import {\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemIcon, ListItemText\n} from \"@material-ui/core\"\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\nexport const SimilarMovieAssign = ({ show, mediaItemId, query, handleSelect, items }) => {\n    const classes = useStyles();\n    \n    \n    const [checked, setChecked] = useState([]);\n    const handleClose = () => {\n        handleSelect();\n    };\n\n    useEffect(()=>{\n        const checkedItems = items?.map(x => x.id) || [];\n        setChecked(checkedItems)\n    }, [items]);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const assignSelection = async () => {\n        for (const mediaSourceId of checked) {\n            await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        }\n        handleSelect(checked);\n    }\n\n    return (\n        <div>\n            <Dialog open={show}\n                fullWidth={true}\n                classes={{ paper: classes.dialogPaper }}\n                onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle>\n                    Related media items to {query}\n                </DialogTitle>\n                <DialogContent dividers>\n                    {\n                        items && (<List>\n                            {items.map((value) => {\n                                const labelId = `checkbox-list-label-${value.id}`;\n                                console.log('value is ', value);\n                                return (<ListItem key={value.id} button onClick={handleToggle(value.id)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={checked.indexOf(value.id) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={value.renderedTitle} />\n                                </ListItem>)\n                            })}\n                        </List>)\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={assignSelection} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import { Avatar, Box, Card, CardContent, CardHeader, CardMedia, Chip, Paper, Tooltip, Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { SearchMovieDialog } from './SearchMovieDialog'\nimport { MiniPoster } from './MiniPoster';\nimport { SimilarMovieAssign } from './SimilarMovieAssign';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: 320,\n        height: 162\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 0.65\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        // width: 151,\n        display: 'flex',\n        flex: 0.35\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    posterMedia: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 1)',\n        padding: 0,\n        borderRadius: '1.5rem'\n    },\n}))(Tooltip);\n\nexport const MovieFetchComponent = ({ value, isTv, mediaSourceId, mediaItemId, handleMediaAssignment\n}) => {\n    //const posterSize = 'w185';  //w92\n    const avatarSize = 'w92';  //w92\n    const posterSize = 'w185';  //w92\n    const backdropSize = 'w300';  //w92\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [backdropPath, setBackdropPath] = useState('');\n    const [posterPath, setPosterPath] = useState('');\n    const [posterUrl, setPosterUrl] = useState('');\n    const [title, setTitle] = useState(value);\n    const [year, setYear] = useState('');\n    const [overview, setOverview] = useState('');\n    const [hasResult, setHasResult] = useState(false);\n    const [result, setResult] = useState();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [showDialog, setShowDialog] = useState(false);\n\n    const [similarMediaResults, setSimilarMediaResults] = useState([]);\n\n\n    const [similarMediaItemShowDialog, setSimilarMediaItemShowDialog] = useState(false);\n\n    useEffect(() => {\n        if (!value) return;\n        (async () => {\n            const { results } = await tmdbClient.search(value, isTv);\n            if (results[0]) {\n                setHasResult(true);\n                setResult(results[0]);\n                setTitle(results[0].title || results[0].name);\n                setAvatarUrl(`https://image.tmdb.org/t/p/${avatarSize}${results[0].poster_path}`);\n                setPosterUrl(`https://image.tmdb.org/t/p/${posterSize}${results[0].poster_path}`);\n\n                //https://image.tmdb.org/t/p/original/hkBaDkMWbLaf8B1lsWsKX7Ew3Xq.jpg\n\n                setBackdropPath(results[0].backdrop_path);\n                setPosterPath(results[0].poster_path);\n\n\n\n                setYear(results[0].release_date?.substr(0, 4) || results[0].first_air_date?.substr(0, 4));\n                setOverview(results[0].overview);\n            }\n            setLoading(false);\n        })();\n    }, [value]);\n\n    const deleteIcon = hasResult ? <DoneIcon /> : null\n    const innerDeleteHandler = async () => {\n        const { id } = result;\n        await assigncurrentmedia(id, isTv);\n    }\n\n    const assigncurrentmedia = async (id, isthisitemtv) => {\n        let mediaItemId;\n        try {\n            const response = await apiClient.get(`/items/byExternalId/${id}?type=tmdb`);\n            mediaItemId = response.data.id;\n        } catch (error) {            \n            const response = await apiClient.post(`items/byExternalId/${id}?type=tmdb&tmdbHint=${isthisitemtv ? 'tv' : 'movie'}`);\n            mediaItemId = response.data.id;\n        }\n        await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        handleMediaAssignment && handleMediaAssignment([{ mediaItemId, mediaSourceId }]);\n\n        const similarMediaResponse = await apiClient.get(`mediasources?parsedTitle=${encodeURIComponent(value)}&onlyPendingMediaAssignment=true`);\n        if (similarMediaResponse.data.items && similarMediaResponse.data.items.length > 0) {\n            setSimilarMediaResults(similarMediaResponse.data.items);\n            setSimilarMediaItemShowDialog(true);\n        }\n    }\n\n    const showDialogHandler = () => {\n        setShowDialog(true);\n    }\n\n    const handleSelectSearchDialog = async (outputofdialog) => {\n        setShowDialog(false);\n        if (outputofdialog) {\n            await assigncurrentmedia(outputofdialog.id, outputofdialog.isTv);\n        }\n    }\n\n    const handleSelectAssignMovieDialog = (assignedItems) => {\n        setSimilarMediaItemShowDialog(false);\n        if (assignedItems) {\n            const payloadToSend = assignedItems.map(mediaSourceId => { return { mediaItemId, mediaSourceId } });\n            handleMediaAssignment && handleMediaAssignment(payloadToSend);\n        }\n    }\n\n    const miniPoster = <MiniPoster title={title} backpath={backdropPath} isTv={isTv} year={year} posterPath={posterPath} />\n    const chip = <Chip\n        size='medium'\n        avatar={<Avatar src={avatarUrl} />}\n        color=\"primary\" label={title || value}\n        variant=\"outlined\"\n        onClick={showDialogHandler}\n        onDelete={hasResult ? innerDeleteHandler : null}\n        deleteIcon={deleteIcon}\n        style={{ maxWidth: 240 }}\n        clickable></Chip>\n\n    if (mediaItemId) {\n        return <div>\n            <SimilarMovieAssign show={similarMediaItemShowDialog} mediaItemId={mediaItemId} query={value}\n                items={similarMediaResults}\n                handleSelect={handleSelectAssignMovieDialog} />\n            <span>{mediaItemId}</span>\n        </div>\n    } else if (loading) {\n        return <div>Loading...</div>;\n    }\n    else if (hasResult) {\n        return <div>\n            {/* <div onClick={() => setSimilarMediaItemShowDialog(true)} > Show</div> */}\n            <SearchMovieDialog show={showDialog} query={title} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            <LightTooltip interactive title={miniPoster} enterDelay={500} placement=\"right\" arrow>\n                {chip}\n            </LightTooltip></div>\n    } else {\n        return <div>\n            <SearchMovieDialog show={showDialog} query={title || value} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            {chip}\n        </div>\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColumns } from '@material-ui/data-grid';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { debounce, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SourceType from \"./SourceTypeComponent\";\nimport { MovieFetchComponent } from \"./MovieFetchComponent\";\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const MediaSourceListComponent = () => {\n    const [page, setPage] = useState(0);\n    const [pageSize] = useState(20);\n    const [rows, setRows] = useState([]);\n    const [rowCount, setRowCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [pendingSelection, setPendingSelection] = useState('Pending');\n    const classes = useStyles();\n\n    const fxhandleMediaAssignment = async (result) => {\n        const updatedRows = rows.map(x => {\n            const matchingResult = result.find(y => y.mediaSourceId === x.id);\n            if (matchingResult) {\n                x.mediaItemId = matchingResult.mediaItemId;\n            }\n            return x;\n        })\n        setRows(updatedRows);\n    };\n\n    const columns: GridColumns = [\n        { field: 'renderedTitle', headerName: 'Title', width: 340, sortable: false, flex: 1 },\n        {\n            field: 'parserInfo', headerName: 'Parser Title', sortable: false, width: 280, renderCell: ({ value, row }) => {\n                return <MovieFetchComponent\n                    value={value?.title || row.renderedTitle} isTv={value?.isTv}\n                    mediaSourceId={row.id}\n                    mediaItemId={row.mediaItemId}\n                    handleMediaAssignment={fxhandleMediaAssignment}\n                />\n            }\n        },\n        {\n            field: 'crawlerType', headerName: 'Source', sortable: false, width: 80, renderCell: ({ value }) => {\n                return <SourceType value={value}></SourceType>\n            }\n        },\n        { field: 'created', headerName: 'Created', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() },\n        { field: 'modified', headerName: 'Last Modified', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() }\n    ];\n\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setPage(0);\n        setSearch(value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const onlyPending = pendingSelection === 'Pending';\n            const response = await apiClient.get(`/mediasources?pageSize=${pageSize}&pageNumber=${page + 1}&q=${search}&onlyPendingMediaAssignment=${onlyPending}`);\n            setRowCount(response.data.total);\n            setRows(response.data.items);\n            setLoading(false);\n        })();\n    }, [page, search, pendingSelection, pageSize]);\n\n    const handlePageChange = (params) => {\n        const { page } = params;\n        setPage(page);\n    }\n\n    return <div>\n        <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n            onChange={debounce(handleOnChange, 250)}\n            defaultValue={search} className={classes.searchbar} />\n        <ToggleButtonGroup value={pendingSelection} exclusive onChange={(ev, val) => setPendingSelection(val)}>\n            <ToggleButton value=\"All\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"Pending\" >\n                Pending\n            </ToggleButton>\n        </ToggleButtonGroup>\n\n        <DataGrid\n            page={page}\n            autoHeight={true}\n            rows={rows}\n            columns={columns}\n            pageSize={pageSize}\n            paginationMode='server'\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowCount={rowCount}\n            checkboxSelection={false}\n            disableColumnMenu\n            disableColumnSelector\n            disableSelectionOnClick\n        />\n    </div>\n}","import Dashboard from './Dashboard/Dashboard';\nimport Preferences from './Preferences/Preferences';\nimport MediaDirectory from './MediaDirectory/MediaDirectory';\nimport RemoteUrlUpload from './RemoteUrlUpload/RemoteUrlUpload';\nimport { PlaylistPage } from './Playlist/playlistComponent';\nimport CreateNewRemoteUrlUpload from './RemoteUrlUpload/CreateNewRequest';\nimport CreateMovieByImdb from './CreateMovie/CreateMovieByImdb';\nimport { MediaSourceExplorerComponent } from './MediaSourceExplorer/MediaSourceExplorerComponent';\nimport { MediaSourceListComponent } from './MediaSourceList/MediaSourceListComponent';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nconst Routes = [\n    {\n        path: '/dashboard',\n        sidebarName: 'Dashboard',\n        component: Dashboard,\n        icon: DashboardIcon\n    },\n    {\n        path: '/preferences',\n        sidebarName: 'Preferences',\n        component: Preferences,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/movies',\n        sidebarName: 'Media Items',\n        component: MediaDirectory,\n        icon: MovieIcon\n    },\n    {\n        path: '/remoteuploads',\n        sidebarName: 'Remote Url Upload',\n        component: RemoteUrlUpload,\n        icon: CloudUploadIcon\n    },\n    {\n        path: '/createremoteuploads',\n        sidebarName: 'New Remote Url Upload',\n        component: CreateNewRemoteUrlUpload,\n        icon: AddIcon\n    },\n    {\n        path: '/playlist',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon\n    },\n    {\n        path: '/playlistdetails/:id',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon,\n        hide: true\n    },\n    {\n        path: '/movie/new',\n        sidebarName: 'New Movie by IMDB Id',\n        component: CreateMovieByImdb,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/explorer',\n        sidebarName: 'Media Source Explorer',\n        component: MediaSourceExplorerComponent,\n        icon: AccountTreeIcon\n    },\n    {\n        path: '/source',\n        sidebarName: 'Media Source',\n        component: MediaSourceListComponent,\n        icon: AccountTreeIcon\n    }\n];\n\nexport default Routes;","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { List, ListItemIcon, ListItemText, ListItem } from '@material-ui/core';\nimport Routes from '../Routes';\n\nconst SideNavBar = (props) => {\n  const activeRoute = (routeName) => {\n    return props.location?.pathname === routeName ? true : false;\n  }\n\n  return (<div>\n    <List>\n      {Routes.filter(x => !x.hide).map((prop, key) => {\n        return (\n          <ListItem component={Link} button\n            to={prop.navurl || prop.path}\n            style={{ textDecoration: 'none' }}\n            key={key}\n            selected={activeRoute(prop.path)}>\n            <ListItemIcon>\n              <prop.icon />\n            </ListItemIcon>\n            <ListItemText primary={prop.sidebarName} />\n          </ListItem >\n        );\n      })}\n    </List>\n  </div>);\n}\n\nexport default withRouter(SideNavBar);","import React from 'react';\n\nexport default function NotFound() {\n  return(\n    <h2>Not Found!!!</h2>\n  );\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\n\nimport NotFound from '../NotFound/NotFound';\n\nimport Routes from '../Routes';\n\nimport useToken from './useToken';\nimport {Copyright} from '../Copyright/Copyright';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Media Catalog Admin\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <BrowserRouter>\n          <Drawer variant=\"permanent\"\n            classes={{\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }} open={open}>\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <SideNavBar></SideNavBar>\n          </Drawer>\n\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <Redirect to=\"/dashboard\" />\n                    )\n                  }}\n                />\n                {Routes.map((prop, key) => {\n                  return (\n                    <Route path={prop.path} key={key}>\n                      <prop.component />\n                    </Route>\n                  );\n                })}\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport default function useToken() {\n    useEffect(() => {\n        const handle = window.setInterval(() => {\n            console.log('checking token status', handle);\n            if (token && getToken() == null) {\n                internalSetToken(null);\n            }\n        }, 1000);  //check refresh token every 1 second\n        return () => clearInterval(handle); //cleanup\n    }, []);\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken?.tokenObj?.expires_at && new Date(userToken.tokenObj.expires_at) > new Date()) {\n            return userToken;\n        }\n        return null;\n    };\n\n    const [token, internalSetToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        const onlyValidToken = getToken();\n        if (onlyValidToken) {\n            internalSetToken(onlyValidToken);\n        }\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}