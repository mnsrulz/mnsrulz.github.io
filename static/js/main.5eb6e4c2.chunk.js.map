{"version":3,"sources":["components/Copyright/Copyright.js","components/Login/Login.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/Dashboard/Dashboard.js","components/ApiClient/MediaCatalogNetlifyClient.js","components/MediaCard/PlaylistSelectionDialog.js","components/MediaSourceList/MiniPoster.js","components/MediaCard/CollapsableListView.js","components/MediaCard/SourceExplorer.js","components/MediaCard/ViewSourceDialog.js","components/MediaCard/NewMovieCard.js","components/MediaCardList/MediaCardListComponent.js","components/MediaDirectory/MediaDirectory.js","components/RemoteUrlUpload/RemoteUrlUpload.js","components/Playlist/playlistDetails.js","components/Playlist/playlist.js","components/Playlist/playlistComponent.js","components/RemoteUrlUpload/CreateNewRequest/ChooseFilesToUpload.js","components/RemoteUrlUpload/CreateNewRequest/FinalStep.js","components/RemoteUrlUpload/CreateNewRequest.js","components/CreateMovie/Card.js","components/CreateMovie/CreateMovieByImdb.js","components/MediaSourceExplorer/MediaSourceExplorerComponent.js","components/MediaSourceList/SourceTypeComponent.js","components/ApiClient/TmdbClient.js","components/MediaSourceList/SearchMovieDialog.js","components/MediaSourceList/SimilarMovieAssign.js","components/MediaSourceList/MovieFetchComponent.js","components/MediaSourceList/MediaSourceListComponent.js","components/Routes.js","components/Preferences/Preferences.js","components/SideNavBar/SideNavBar.js","components/NotFound/NotFound.js","components/App/ResponsiveDrawer.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","setToken","classes","responseGoogle","res","Container","component","maxWidth","CssBaseline","className","Avatar","clientId","onSuccess","onFailure","cookiePolicy","scope","Box","mt","Title","props","gutterBottom","children","createData","time","amount","undefined","Chart","useTheme","preventDefault","event","depositContext","flex","Deposits","Fragment","onClick","id","date","name","shipTo","paymentMethod","rows","seeMore","Orders","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","apiClient","_instance","axios","baseURL","interceptors","request","use","config","idToken","JSON","parse","localStorage","token","tokenId","headers","Authorization","AuthenticatedClient","PlaylistSelectionDialog","open","mediaId","selectedPlaylist","onClose","useState","playlists","setPlaylists","useEffect","a","get","allPlaylist","data","React","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","resource","push","put","splice","delete","Dialog","aria-labelledby","DialogTitle","DialogContent","style","dividers","FormControl","FormGroup","FormControlLabel","control","Checkbox","onChange","label","card","boxShadow","borderRadius","transform","bottom","fontFamily","fontSize","fontWeight","maxHeight","borderTopLeftRadius","borderTopRightRadius","background","tag","marginBottom","author","borderBottomLeftRadius","borderBottomRightRadius","common","white","contentoverride","titleclass","MiniPoster","posterPath","backpath","year","isTv","mode","tagline","action","mediaItemId","playlistIds","Card","CardMedia","src","CardHeader","subheader","titleTypographyProps","noWrap","subheaderTypographyProps","nested","paddingLeft","small","getContrastText","deepPurple","avatarWrapper","minWidth","CollapsableListView","setOpen","handleClick","loaded","loading","canExpand","SecondaryAction","CircularProgress","IconButton","ctx","_ctx","remoteUploadUrl","encodeURIComponent","link","fileName","parent","to","List","dense","disablePadding","ListItem","button","ListItemAvatar","URL","host","toUpperCase","getAvatarText","ListItemText","primary","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","item","prettyBytes","require","SourceExplorer","rootTitle","setData","cursor","setCursor","onToggle","node","toggled","active","Object","assign","utocall","response","resolvedUrl","isPlayable","contentType","decodeURIComponent","pathname","split","pop","anotherdata","parseInt","mediaSources","d2","itemData","webViewLink","renderedTitle","dialogPaper","minHeight","dialogContent","ViewSourceDialog","fullScreenDialog","useMediaQuery","down","fullScreen","fullWidth","DialogActions","Button","NewMovieCard","movie","showPlaylistSelectionDialog","setShowPlaylistSelectionDialog","showViewSourceDialog","setShowViewSourceDialog","anchorEl","setAnchorEl","currentTarget","Boolean","MenuItem","playlistEl","x","playlistId","showViewSourceEl","backdropPath","itemType","MediaCardListComponent","items","isLoading","movieColumns","Grid","xs","sm","md","lg","disableShrink","length","direction","justify","searchbar","myComponent","state","error","isLoaded","Headers","append","fetch","json","tempdata","console","log","this","setState","message","columns","options","filterType","download","print","Component","breadcrumb","PlaylistDetails","setLoading","setTitle","includes","playlistDetails","result","Breadcrumbs","dayjs","relativeTime","extend","navlink","textDecoration","Playlist","setIsLoading","setRows","Paper","aria-label","ts","fromNow","PlaylistPage","useParams","handleSelectionChange","p","q","r","s","selectedData","i","index","onSelectionChange","zipFileUrl","defaultZipFileUrl","fetchUrl","responseAsJson","search","viewColumns","filter","pagination","onRowSelectionChange","FinalStep","fileUrl","selectedFiles","parentUrl","mediaType","setIsLoaded","accessToken","files","path","payload","post","actionsContainer","resetContainer","backdropIMG","numeral","details","backgroundSize","backgroundRepeat","backgroundImage","posterContainer","textAlign","poster","metadata","additionalDetails","MovCard","test","posterIMG","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","nestedDataToString","backdrop","rating","vote","format","styleofbg","CardContent","original_title","overview","release","runtime","nestedData","nestedArray","forEach","join","handleChange","e","target","findMovieIdByImdbId","v","imdbMovieApiUrl","responseJson","movie_results","fetchMovieID","imdbId","movieID","url","fetchApi","TextField","placeholder","defaultValue","then","homepage","poster_path","production_companies","release_date","vote_average","backdrop_path","wrapper","buttonSuccess","green","buttonError","red","fabProgress","top","left","buttonProgress","iconButton","input","SourceTypeComponent","getRenderValue","apiKey","tmdbClient","findMovie","movieId","findImdbId","tmdbId","apiUrl","resposne","external_ids","imdb_id","SearchMovieDialog","handleSelect","show","query","searchQuery","setSearchQuery","searchTv","setSearchTv","results","setResults","selectedId","setSelectedId","handleClose","setValue","Tabs","newValue","indicatorColor","textColor","Tab","icon","autoFocus","debounce","selected","first_air_date","substr","disabled","SimilarMovieAssign","checkedItems","assignSelection","mediaSourceId","labelId","ListItemIcon","edge","tabIndex","disableRipple","inputProps","cover","controls","playIcon","posterMedia","LightTooltip","withStyles","tooltip","Tooltip","MovieFetchComponent","handleMediaAssignment","avatarUrl","setAvatarUrl","setBackdropPath","setPosterPath","setPosterUrl","setYear","setOverview","hasResult","setHasResult","setResult","showDialog","setShowDialog","similarMediaResults","setSimilarMediaResults","similarMediaItemShowDialog","setSimilarMediaItemShowDialog","deleteIcon","innerDeleteHandler","assigncurrentmedia","isthisitemtv","similarMediaResponse","handleSelectSearchDialog","outputofdialog","miniPoster","chip","Chip","onDelete","clickable","assignedItems","payloadToSend","interactive","enterDelay","placement","arrow","Routes","sidebarName","fixedHeightPaper","clsx","DashboardIcon","ShoppingCartIcon","hide","setSearch","MovieIcon","RemoteUrlUpload","CloudUploadIcon","useForm","register","handleSubmit","errors","URLSearchParams","useLocation","setMediaType","activeStep","setActiveStep","setFileUrl","setSelectedFiles","rawUpload","setRawUpload","fileNameExtension","mediaDetails","handleFileSelection","steps","getStepContent","step","type","ev","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","square","elevation","AddIcon","SubscriptionsIcon","CreateMovieByImdb","sourceid","pms","mediaSourceResponse","setRootUrl","setTreeRootUrl","uniqueid","now","toString","Math","random","rootUrl","attributes","firstuniqueid","initialData","onNodeClickCallback","isTraversed","nextData","clone","leafnode","findNodeFromName","hasErrors","parentNode","keyName","foundele","nodeSize","y","foreignObjectProps","InputProps","endAdornment","InputAdornment","onNodeClick","translate","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","Fab","renderForeignObjectNode","AccountTreeIcon","page","setPage","pageSize","rowCount","setRowCount","pendingSelection","setPendingSelection","fxhandleMediaAssignment","updatedRows","matchingResult","find","field","headerName","sortable","renderCell","valueFormatter","onlyPending","total","ToggleButtonGroup","exclusive","val","ToggleButton","autoHeight","paginationMode","onPageChange","params","checkboxSelection","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","withRouter","location","onListItemClick","prop","key","navurl","routeName","NotFound","ResponsiveDrawer","handleDrawerClose","hiddenDrawerVariant","Drawer","Divider","App","handle","window","setInterval","getToken","internalSetToken","clearInterval","tokenString","getItem","userToken","tokenObj","expires_at","setItem","stringify","onlyValidToken","useToken","AppBar","Toolbar","exact","render","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"gVAIO,SAASA,IACZ,OACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACK,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,2BAA3B,8BAEI,KACH,IAAIC,MAAOC,cACX,OCLb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SACxBC,EAAUpB,IACVqB,EAAiB,SAACC,GACtBH,EAASG,IAEX,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWP,EAAQjB,MAAxB,UACE,cAACyB,EAAA,EAAD,CAAQD,UAAWP,EAAQX,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC,cAAD,CACEoB,SAAS,2EACTC,UAAWT,EACXU,UAAWV,EACXW,aAAc,qBACdC,MAAM,2DAIV,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC5C,EAAD,S,6HC7CO,SAAS6C,EAAMC,GAC5B,OACE,cAAC7C,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,KAAKC,MAAM,UAAU4C,cAAY,EAApE,SACGD,EAAME,WCDb,SAASC,EAAWC,EAAMC,GACxB,MAAO,CAAED,OAAMC,UAIfF,EAAW,QAAS,GACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,KACpBA,EAAW,QAAS,MACpBA,EAAW,QAAS,MACpBA,EAAW,aAASG,GAGP,SAASC,IACRC,cAEd,OACE,4CCpBJ,SAASC,EAAeC,GACtBA,EAAMD,iBAGR,IAAM9C,EAAYC,YAAW,CAC3B+C,eAAgB,CACdC,KAAM,KAIK,SAASC,IACtB,IAAM9B,EAAUpB,IAChB,OACE,eAAC,IAAMmD,SAAP,WACE,cAACf,EAAD,8BACA,cAAC5C,EAAA,EAAD,CAAYgC,UAAU,IAAI/B,QAAQ,KAAlC,uBAGA,cAACD,EAAA,EAAD,CAAYE,MAAM,gBAAgBiC,UAAWP,EAAQ4B,eAArD,+BAGA,8BACE,cAACpD,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAAIuD,QAASN,EAAxC,+B,iDCjBR,SAASN,EAAWa,EAAIC,EAAMC,EAAMC,EAAQC,EAAef,GACzD,MAAO,CAAEW,KAAIC,OAAMC,OAAMC,SAAQC,gBAAef,UAGlD,IAAMgB,EAAO,CACXlB,EAAW,EAAG,eAAgB,gBAAiB,aAAc,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,iBAAkB,aAAc,2CAAmB,QACjFA,EAAW,EAAG,eAAgB,aAAc,aAAc,yCAAiB,QAC3EA,EAAW,EAAG,eAAgB,kBAAmB,WAAY,2CAAmB,QAChFA,EAAW,EAAG,eAAgB,oBAAqB,kBAAmB,2CAAmB,SAG3F,SAASM,EAAeC,GACtBA,EAAMD,iBAGR,IAAM9C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,QAAS,CACPvD,UAAWF,EAAMG,QAAQ,QAId,SAASuD,KACtB,IAAMxC,EAAUpB,IAChB,OACE,eAAC,IAAMmD,SAAP,WACE,cAACf,EAAD,4BACA,eAACyB,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,6BACA,cAACA,EAAA,EAAD,CAAWtE,MAAM,QAAjB,8BAGJ,cAACuE,EAAA,EAAD,UACGR,EAAKS,KAAI,SAACC,GAAD,OACR,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYG,EAAId,OAChB,cAACW,EAAA,EAAD,UAAYG,EAAIb,OAChB,cAACU,EAAA,EAAD,UAAYG,EAAIZ,SAChB,cAACS,EAAA,EAAD,UAAYG,EAAIX,gBAChB,cAACQ,EAAA,EAAD,CAAWtE,MAAM,QAAjB,SAA0ByE,EAAI1B,WALjB0B,EAAIf,YAUzB,qBAAK1B,UAAWP,EAAQuC,QAAxB,SACE,cAAC/D,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAAIuD,QAASN,EAAxC,kCCnCR,IAEM9C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmE,KAAM,CACJ/D,QAAS,QAEXgE,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVlE,QAAS,OACTE,WAAY,SACZiE,eAAgB,WAChBC,QAAS,SACNxE,EAAMyE,OAAOL,SAElBM,OAAQ,CACNC,OAAQ3E,EAAM2E,OAAOC,OAAS,EAC9BC,WAAY7E,EAAM8E,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBvE,MAAM,eAAD,OAzBW,IAyBX,OACL+D,WAAY7E,EAAM8E,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBrF,QAAS,QAEXsF,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZhF,MA3CgB,IA4ChB+D,WAAY7E,EAAM8E,YAAYC,OAAO,QAAS,CAC5CC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASI,kBAGzCS,iBAAiB,aACfC,UAAW,SACXnB,WAAY7E,EAAM8E,YAAYC,OAAO,QAAS,CAC5CC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASC,gBAEvCrE,MAAOd,EAAMG,QAAQ,IACpBH,EAAMiG,YAAYC,GAAG,MAAQ,CAC5BpF,MAAOd,EAAMG,QAAQ,KAGzBgG,aAAcnG,EAAMyE,OAAOL,QAC3BgC,QAAS,CACPT,SAAU,EACVU,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAYxG,EAAMG,QAAQ,GAC1BsG,cAAezG,EAAMG,QAAQ,IAE/BF,MAAO,CACLuE,QAASxE,EAAMG,QAAQ,GACvBC,QAAS,OACTkG,SAAU,OACVjG,cAAe,UAEjBqG,YAAa,CACXL,OAAQ,S,yRCzFL,IAAMM,GAZb,WACI,IAAIC,EAAYC,KAAM9B,OAAO,CACzB+B,QAAS,gEAOb,OALAF,EAAUG,aAAaC,QAAQC,KAAI,SAAAC,GAC/B,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,OAAOC,QAE/C,OADAN,EAAOO,QAAQC,cAAgB,UAAYP,EACpCD,KAEJN,EAGce,GCTZC,GAA0B,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,iBAAkBC,EAAc,EAAdA,QAAc,GACvErF,cACoBsF,mBAAS,KAF0C,mBAE9EC,EAF8E,KAEnEC,EAFmE,KAIrFC,qBAAU,WACFP,GACA,wBAAC,6BAAAQ,EAAA,sEAC6B1B,GAAU2B,IAAI,aAD3C,OACSC,EADT,OAEGJ,EAAaI,EAAYC,MAF5B,0CAAD,KAKL,CAACX,IAXiF,MAYvDY,IAAMR,SAASF,GAZwC,mBAY9EW,EAZ8E,KAYrEC,EAZqE,KAc/EC,EAAe,SAACC,GAAD,+BAAW,iCAAAR,EAAA,yDACtBS,EAAeJ,EAAQK,QAAQF,GAC/BG,EAFsB,aAELN,GACjBO,EAHsB,gBAGFnB,EAHE,sBAGmBe,IACzB,IAAlBC,EAJwB,wBAKxBE,EAAWE,KAAKL,GAChBF,EAAWK,GANa,SAOlBrC,GAAUwC,IAAIF,GAPI,sCASxBD,EAAWI,OAAON,EAAc,GAChCH,EAAWK,GAVa,UAWlBrC,GAAU0C,OAAOJ,GAXC,6CAehC,OACI,eAACK,GAAA,EAAD,CACIzB,KAAMA,EACNG,QAASA,EACTzG,SAAS,KACTgI,kBAAgB,0BAJpB,UAKI,cAACC,GAAA,EAAD,0BACA,cAACC,GAAA,EAAD,CAAeC,MAAO,CAAE5I,MAAO,KAAO6I,UAAQ,EAA9C,SACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACK3B,EAAUjE,KAAI,SAAC4E,GACZ,OACI,cAACiB,GAAA,EAAD,CAEIC,QAAS,cAACC,GAAA,EAAD,CAAUtB,SAAwC,IAA/BA,EAAQK,QAAQF,EAAM1F,IAC9C8G,SAAUrB,EAAaC,EAAM1F,IAC7B3D,MAAM,UACN6D,KAAMwF,EAAM1F,KAChB+G,MAAOrB,EAAMnD,OALRmD,EAAM1F,iB,sDC1CzCrD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmK,KAAM,CAGFtE,SAAU,WACVuE,UAAW,gCAEXC,aAAc,SACdxF,WAAY,OACZ,UAAW,CACPyF,UAAW,cACX,YAAa,CACTC,OAAQ,WAEZ,aAAc,CACVA,OAAQ,aAepB7E,MAAO,CACH8E,WAAY,oBACZC,SAAU,OACVC,WAAY,IACZlL,MAAO,QAEXoB,KAAM,CACF+J,UAAW,IACXrE,SAAU,SACVsE,oBAAqB,SACrBC,qBAAsB,SACtBlG,OAAQ,EACR,UAAW,CACPyB,QAAS,KACTP,SAAU,WACV0E,OAAQ,EACRnK,QAAS,QACTU,MAAO,OACPuF,OAAQ,OACRyE,WAAY,oDAGpB1E,QAAS,CACLP,SAAU,WACV0E,OAAQ,EACRzJ,MAAO,OACP6D,OAAQ,EACRH,QAAS,sBACVuG,IAAK,CACJ3K,QAAS,eACToK,WAAY,oBACZ/J,gBAAiB,UACjB4J,aAAc,SACd7F,QAAS,aACThF,MAAO,OACPwL,aAAc,UACfzK,OAAQ,CACPO,MAAO,GACPuF,OAAQ,IACT4E,OAAQ,CAEPpF,SAAU,WACVqF,uBAAwB,SACxBC,wBAAyB,SACzB1K,gBAAiBT,EAAMU,QAAQ0K,OAAOC,OAE1CC,gBAAiB,CACbhF,SAAU,UAEdiF,WAAY,CACRd,SAAU,SACVC,WAAY,SAGPc,GAAa,SAAC,GAAkG,IAAhGC,EAA+F,EAA/FA,WAAYC,EAAmF,EAAnFA,SAAUhG,EAAyE,EAAzEA,MAAOiG,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,KAAeC,GAA6C,EAAtDC,QAAsD,EAA7CD,MAAgCE,GAAa,EAAvCC,YAAuC,EAA1BC,YAA0B,EAAbF,QACrG7K,EAAUpB,KAgBhB,OACI,8BACI,eAACoM,GAAA,EAAD,CAAMzK,UAAWP,EAAQiJ,KAAzB,UACI,eAACnI,EAAA,EAAD,CAAKP,UAAWP,EAAQN,KAAMiF,SAAU,WAAxC,UACI,cAACsG,GAAA,EAAD,CAAWC,IAlBV,aAATP,EACM,kCAAN,OAAyCJ,GAGzCC,EACM,mCAAN,OAA0CA,GAE1C,yCAAyCD,GAWKnK,UAAU,QAChD,sBAAKG,UAAWP,EAAQkF,QAAxB,UACI,qBAAK3E,UAAWP,EAAQ6J,IAAxB,SAA8Ba,EAAO,KAAO,UAC5C,eAACtM,EAAA,EAAD,CAAYC,QAAS,KAAMkC,UAAWP,EAAQwE,MAA9C,UACKA,EADL,KACciG,EADd,aAKR,cAACU,GAAA,EAAD,CAAY5K,UAAWP,EAAQ+J,OAAQ/J,QAAS,CAC5CkF,QAASlF,EAAQoK,iBAClB/K,OAAQ,cAACmB,EAAA,EAAD,CAAQ0K,IAlBrB,iCAAN,OAAwCX,KAmB5B/F,MAAOA,EACP4G,UAAWX,EACXY,qBAAsB,CAAEC,QAAQ,EAAMpK,cAAc,GACpDqK,yBAA0B,CAAED,QAAQ,GACpCT,OAAQA,U,gHCjHtBjM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmE,KAAM,CACFrD,MAAO,OACPL,gBAAiBT,EAAMU,QAAQoK,WAAW7K,OAE9CyM,OAAQ,CACJC,YAAa3M,EAAMG,QAAQ,IAE/ByM,MAAO,CACH9L,MAAOd,EAAMG,QAAQ,GACrBkG,OAAQrG,EAAMG,QAAQ,GACtBX,MAAOQ,EAAMU,QAAQmM,gBAAgBC,KAAW,MAChDrM,gBAAiBqM,KAAW,KAC5BrC,SAAU,WAGdsC,cAAe,CACXC,SAAU,EACV3I,aAAcrE,EAAMG,QAAQ,QAIvB8M,GAAsB,SAAtBA,EAAuB,GAA4B,IAAD,EAAzBzE,EAAyB,EAAzBA,KAAMI,EAAmB,EAAnBA,aAElC1H,EAAUpB,KAF2C,EAGnC2I,IAAMR,UAAS,GAHoB,mBAGpDJ,EAHoD,KAG9CqF,EAH8C,KAYrDC,EAAc,WAChBD,GAASrF,GACLW,EAAK4E,QAAU5E,EAAK6E,SACpB7E,EAAK8E,WAAW1E,EAAaJ,EAAMX,IAGrC0F,EAAkB,WAAO,IACnBD,EAAuB9E,EAAvB8E,UAAWD,EAAY7E,EAAZ6E,QACnB,GAAIC,EACA,OAAID,EACO,cAACG,GAAA,EAAD,CAAkB5J,KAAK,SAEvB,cAAC6J,EAAA,EAAD,CAAY7J,KAAM,QAAlB,SACFiE,EAAO,cAAC,KAAD,CAAY3E,QAASiK,IAAkB,cAAC,KAAD,CAAYjK,QAASiK,MAK5E,IAAMO,EAAMlF,EAAKmF,KACjB,GAAID,EAAK,CACL,IAAME,EAAe,oCAAgCC,mBAAmBrF,EAAKsF,MAAxD,qBAA0ED,mBAAmBrF,EAAKuF,UAAlG,mBAAsHF,mBAAmBrF,EAAKwF,QAA9I,oBAAiKH,mBAAmBH,EAAI5F,UAC7M,OAAO,cAAC2F,EAAA,EAAD,CAAY7J,KAAM,QAAStC,UAAW5B,IACzCuO,GAAIL,EADD,SACkB,cAAC,KAAD,MAEzB,OAAO,yBAKnB,OAAQ,eAACM,EAAA,EAAD,CAAMC,OAAK,EAAC7M,UAAU,MAAM8M,gBAAc,EAA1C,UACJ,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACpL,QAASiK,EAA1B,UACI,cAACoB,GAAA,EAAD,CAAgB9M,UAAWP,EAAQ6L,cAAnC,SACI,cAACrL,EAAA,EAAD,CAAQD,UAAWP,EAAQ0L,MAA3B,SAvCU,SAACkB,GACR,IAAD,EAAV,GAAIA,EAEA,iBADU,IAAIU,IAAIV,GACTW,KAAK,UAAd,aAAO,EAAWC,cAoCqBC,CAAcnG,EAAKsF,UAE1D,cAACc,EAAA,EAAD,CAAcC,QAASrG,EAAKnF,OAC5B,cAACyL,GAAA,EAAD,UACI,cAACvB,EAAD,SAGR,cAACwB,GAAA,EAAD,CAAUC,GAAInH,EAAMoH,QAAQ,OAAOC,eAAa,EAACzN,UAAWP,EAAQwL,OAApE,gBAEQlE,QAFR,IAEQA,GAFR,UAEQA,EAAMnG,gBAFd,aAEQ,EAAgB4B,KAAI,SAACkL,GACjB,OAAO,cAAClC,EAAD,CAAqBzE,KAAM2G,EAAMvG,aAAcA,aCpFpEwG,GAAcC,EAAQ,KAEfC,GAAiB,SAAC,GAA4B,IAA1BxH,EAAyB,EAAzBA,QAASyH,EAAgB,EAAhBA,UAAgB,EACxBtH,mBAAS,IADe,mBAEhD0F,GAFgD,UAEzC,CACT7F,UACAyH,cAJkD,EAO9BtH,mBAAS,IAPqB,mBAO/CO,EAP+C,KAOzCgH,EAPyC,OAQ1BvH,oBAAS,GARiB,mBAQ/CwH,EAR+C,KAQvCC,EARuC,KAUhDC,EAAQ,yCAAG,WAAOC,EAAMC,GAAb,kCAAAxH,EAAA,yDACToH,IACAA,EAAOK,QAAS,GAEpBF,EAAKE,QAAS,EACTF,EAAKvC,SAAYuC,EAAKxC,OALd,wBAMTwC,EAAKvC,SAAU,EACfuC,EAAKC,QAAUA,EACfL,EAAQO,OAAOC,OAAO,GAAIxH,IACpByH,EATG,sFASsFpC,mBAAmB+B,EAAK9B,OAT9G,SAUcjH,KAAMyB,IAAI2H,GAVxB,OAUHC,EAVG,OAWTN,EAAKvC,SAAU,EACfuC,EAAKxC,QAAS,EAZL,eAciB8C,EAAS1H,MAd1B,IAcT,2BAAW2H,EAA8B,QAC7BC,EAAkCD,EAAlCC,WAAYC,EAAsBF,EAAtBE,YAAazM,EAASuM,EAATvM,KAC3BmK,EAAWoC,EAAYrC,MAAQwC,mBAAoB,IAAI9B,IAAI2B,EAAYrC,MAAOyC,SAASC,MAAM,KAAKC,OAElGC,EAAc,CAChBrN,KAAM8M,EAAYzK,OAASqI,EAC3BD,KAAMqC,EAAYrC,KAClBzL,SAAU,GACViL,WAAY8C,EACZhD,QAAQ,EACRY,OAAQmC,EAAYnC,OACpBD,SAAUoC,EAAYzK,OAASqI,EAC/BJ,QAEAyC,IACAM,EAAYrN,KAAZ,UAAsBqN,EAAYrN,KAAlC,aAA2C+L,GAAYuB,SAAS/M,IAAS,GAAzE,cAAiFyM,EAAjF,MAGJT,EAAKvN,SAAS6G,KAAKwH,GAhCd,sDAkCFd,EAAKvN,WACZuN,EAAKC,QAAUA,GAnCN,QAqCbH,EAAUE,GACVJ,EAAQO,OAAOC,OAAO,GAAIxH,IAtCb,4CAAH,wDAqEd,OA5BAJ,qBAAU,WACN,wBAAC,yCAAAC,EAAA,sEAC8B1B,GAAU2B,IAAV,gBAAuBR,EAAvB,kBAD9B,OACS8I,EADT,OAGSC,EAAK,CACPxN,KAAMkM,EACNM,SAAS,EACTxN,SAAU,GACViL,WAAW,EACXF,QAAQ,EACRO,QATP,eAY0BiD,EAAapI,MAZvC,IAYG,2BAAWsI,EAA+B,QAC9BC,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,cACrBH,EAAGxO,SAAS6G,KAAK,CACb7F,KAAM2N,EACNlD,KAAMiD,EACN1O,SAAU,GACViL,WAAW,EACXF,QAAQ,EACRO,SApBX,8BAuBG6B,EAAQqB,GAvBX,0CAAD,KAyBD,CAAC/I,IAGA,8BACI,cAAC,GAAD,CAAqBU,KAAMA,EAAMI,aAAc+G,OCnFrD7P,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiR,YAAa,CACTC,UAAW,OACXvG,UAAW,QAEfwG,cAAe,CACXxE,YAAa,EACbtI,aAAc,OAIT+M,GAAmB,SAAC,GAA2C,IAAzCvJ,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASyH,EAAyB,EAAzBA,UAAWvH,EAAc,EAAdA,QACnD9G,EAAUpB,KACVE,EAAQ2C,cACR0O,EAAmBC,aAActR,EAAMiG,YAAYsL,KAAK,OAE9D,OAAI1J,EACQ,eAACyB,GAAA,EAAD,CACJkI,WAAYH,EACZxJ,KAAMA,EACNG,QAASA,EACTyJ,WAAW,EACXvQ,QAAS,CAAEjB,OAAQoR,GAAoBnQ,EAAQ+P,aAC/C1H,kBAAgB,0BANZ,UAOJ,cAACC,GAAA,EAAD,yBACA,cAACC,GAAA,EAAD,CAAeE,UAAQ,EAACzI,QAAS,CAAEiD,KAAMjD,EAAQiQ,eAAjD,SACI,cAAC,GAAD,CAAgBrJ,QAASA,EAASyH,UAAWA,MAEjD,cAACmC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQnS,MAAM,UAAU0D,QAAS8E,EAAjC,yBAKD,yBC7BF4J,GAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAE+B5J,oBAAS,GAFxC,mBAEhC6J,EAFgC,KAEHC,EAFG,OAGiB9J,oBAAS,GAH1B,mBAGhC+J,EAHgC,KAGVC,EAHU,OAIPhK,mBAAS,MAJF,mBAIhCiK,EAJgC,KAItBC,EAJsB,KAoBjCpG,EAAS,gCACX,cAAC0B,EAAA,EAAD,CAAYvK,QAfI,SAACL,GACjBsP,EAAYtP,EAAMuP,gBAclB,SACI,cAAC,KAAD,MAEJ,eAAC,KAAD,CAAMF,SAAUA,EAAUlK,QAAS,kBAAMmK,EAAY,OAAOtK,KAAMwK,QAAQH,GAA1E,UACI,cAACI,GAAA,EAAD,CAAUpP,QAfkB,WAChCiP,EAAY,MACZJ,GAA+B,IAa3B,8BAGA,cAACO,GAAA,EAAD,CAAUpP,QAba,WAC3BiP,EAAY,MACZF,GAAwB,IAWpB,gCAMFM,EAAa,cAAC,GAAD,CAAyB1K,KAAMiK,EAA6B/J,iBAAkB8J,EAAM5F,YAAYhI,KAAI,SAAAuO,GAAC,OAAIA,EAAEC,cAC1H3K,QAAS+J,EAAM1O,GACf6E,QAAS,WAAQ+J,GAA+B,MAG9CW,EAAmB,cAAC,GAAD,CAAkB7K,KAAMmK,EAC7ClK,QAAS+J,EAAM1O,GACfoM,UAAWsC,EAAMnM,MACjBsC,QAAS,WAAQiK,GAAwB,MAI7C,OAAO,gCACH,cAAC,GAAD,CAAYvG,SAAUmG,EAAMc,aACxB/G,KAAyB,OAAnBiG,EAAMe,SACZnH,WAAYoG,EAAMpG,WAClB/F,MAAOmM,EAAMnM,MACbiG,KAAMkG,EAAMlG,KACZG,QAAS+F,EAAM/F,QACfE,YAAa6F,EAAM1O,GACnB8I,YAAa4F,EAAM5F,YACnBJ,KAAK,WACLE,OAAQA,IAEXwG,EACAG,MC9DIG,GAAyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAQtCC,EAAeF,EAAQA,EAAM7O,KAAI,SAAC4N,GAAD,OACnC,cAACoB,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACI,cAAC,GAAD,CAAcxB,MAAOA,KADoBA,EAAM1O,OAIlD,KACL,OAAG4P,EACQ,cAACvF,GAAA,EAAD,CAAkB8F,eAAa,KAErC,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAcO,QAEf,cAACN,EAAA,EAAD,CAAM1M,WAAS,EACXiN,UAAU,MACVC,QAAQ,aACRnT,WAAW,aACXH,QAAS,EAJb,SAKK6S,GAAgB,UAIlB,kDC1BTlT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0T,UAAW,CACT1I,aAAchL,EAAMG,QAAQ,Q,+DC4CjBwT,G,oDAlDX,WAAYxR,GAAQ,IAAD,+BACf,cAAMA,IACDyR,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVtL,KAAM,IALK,E,iMAUXf,EAAU,IAAIsM,QACZ5M,EAAUC,KAAKC,MAAMC,aAAaC,OAAOC,QAC/CC,EAAQuM,OAAO,gBAAiB,UAAY7M,GAC7B,oF,SACQ8M,MADR,oFACsB,CAAExM,QAASA,I,cAA1CyI,E,gBAEiBA,EAASgE,O,OAA1BC,E,OACNC,QAAQC,IAAIF,GAEZG,KAAKC,SAAS,CACVT,UAAU,EACVtL,KAAM2L,I,sIAKV,IADK,EAQ4BG,KAAKV,MAA9BC,EARH,EAQGA,MAAOC,EARV,EAQUA,SAAUtL,EARpB,EAQoBA,KAEzB,OAAIqL,EACO,0CAAaA,EAAMW,WAClBV,EAGD,cAAC,KAAD,CACHpO,MAAO,6BACP8C,KAAMA,EACNiM,QAjBQ,CAAC,KAAM,YAAa,WAAY,WAAY,UAkBpDC,QAjBQ,CACZC,WAAY,WACZC,UAAU,EACVC,OAAO,KAQA,iD,GAvCOpM,IAAMqM,W,UCI1BhV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+U,WAAY,CACR/J,aAAchL,EAAMG,QAAQ,QAKvB6U,GAAkB,SAAC,GAAoB,IAAlBvC,EAAiB,EAAjBA,WAAiB,EACvBxK,mBAAS,IADc,mBACxCO,EADwC,KAClCgH,EADkC,OAEjBvH,oBAAS,GAFQ,mBAExCoF,EAFwC,KAE/B4H,EAF+B,KAGzC/T,EAAUpB,KAH+B,EAIrBmI,mBAAS,IAJY,mBAIxCvC,EAJwC,KAIjCwP,EAJiC,KAqB/C,OAfA9M,qBAAU,WACN,wBAAC,+BAAAC,EAAA,yDACG4M,GAAW,IACP,CAAC,cAAe,SAASE,SAAS1C,GAFzC,gBAGOyC,EAASzC,GAHhB,sCAKqC9L,GAAU2B,IAAV,oBAA2BmK,IALhE,OAKa2C,EALb,OAMOF,EAASE,EAAgB5M,KAAK9C,OANrC,wBAQwBiB,GAAU2B,IAAV,oBAA2BmK,EAA3B,wBARxB,QAQS4C,EART,OASG7F,EAAQ6F,EAAO7M,KAAKsK,OACpBmC,GAAW,GAVd,2CAAD,KAYD,CAACxC,IAGA,gCACI,eAAC6C,GAAA,EAAD,CAAa7T,UAAWP,EAAQ6T,WAAhC,UAEI,cAACpD,GAAA,EAAD,CAAQnS,MAAM,UAAU8B,UAAW5B,IAAMuO,GAAG,YAA5C,uBACA,cAAC3O,EAAA,EAAD,UAAaoG,OAEjB,cAAC,GAAD,CAAwBoN,MAAOtK,EAAMuK,UAAW1F,Q,UClCtDkI,GAAQlG,EAAQ,KAClBmG,GAAenG,EAAQ,KAC3BkG,GAAME,OAAOD,IAGb,IAAM1V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmE,KAAM,CACF1D,gBAAiBT,EAAMU,QAAQoK,WAAW7K,OAE9CyV,QAAS,CACLC,eAAgB,OAChB,aAAc,CACVnW,MAAO,QAEZuV,WAAY,CACX/J,aAAchL,EAAMG,QAAQ,IAEhCF,MAAO,CAEHG,QAAS,OACTkG,SAAU,OACVjG,cAAe,cAMVuV,GAAW,WAAO,IAAD,EACQ3N,oBAAS,GADjB,mBACnB8K,EADmB,KACR8C,EADQ,OAEF5N,mBAAS,IAFP,mBAEnBzE,EAFmB,KAEbsS,EAFa,KAGpB5U,EAAUpB,KAUhB,OARAsI,qBAAU,WACN,wBAAC,6BAAAC,EAAA,sEAC0B1B,GAAU2B,IAAI,wCADxC,OACS4H,EADT,OAEG4F,EAAQ5F,EAAS1H,MACjBqN,GAAa,GAHhB,0CAAD,KAKD,IAEI,gCACH,cAACP,GAAA,EAAD,CAAa7T,UAAWP,EAAQ6T,WAAhC,SACI,cAACzV,EAAA,EAAD,yBAEJ,cAACyW,EAAA,EAAD,CAAOtU,UAAWP,EAAQjB,MAA1B,SACI,cAACiO,EAAA,EAAD,CAAM5M,UAAU,MAAMG,UAAWP,EAAQiD,KAAM6R,aAAW,WAA1D,SAEQjD,EAAY,6CAAH,OACLvP,QADK,IACLA,OADK,EACLA,EAAMS,KAAI,YAAwB,IAArBd,EAAoB,EAApBA,GAAIuC,EAAgB,EAAhBA,MAAOuQ,EAAS,EAATA,GACpB,OAAO,cAAC5H,EAAA,EAAD,CAAmBC,QAAM,EAAChN,UAAW5B,IAAMuO,GAAE,2BAAsB9K,GAAnE,SACH,cAACyL,EAAA,EAAD,CAAcC,QAASnJ,EACnB/E,UAAW4U,GAAMU,GAAIC,aAFP/S,cCrDrCgT,GAAe,WAAO,IACzBhT,EAAOiT,cAAPjT,GACN,OAAIA,EAEI,cAAC,GAAD,CAAiBsP,WAAYtP,IAI7B,cAAC,GAAD,K,UCTSwQ,G,oDACjB,WAAYxR,GAAQ,IAAD,+BAEf,cAAMA,IA4BVkU,sBAAwB,SAACC,EAAGC,EAAGC,EAAGC,GAC9B,IAAMC,EAAeH,EAAEtS,KAAI,SAAA0S,GAAC,OAAI,EAAK/C,MAAMpL,KAAKmO,EAAEC,UAClD,EAAKhD,MAAMiD,mBAAqB,EAAKjD,MAAMiD,kBAAkBH,IA7B7D,EAAK9C,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVtL,KAAM,GACNsO,WAAY3U,EAAM4U,kBAClBF,kBAAmB1U,EAAM0U,mBARd,E,+LAcTG,E,0FAA8FnJ,mBAAmByG,KAAKV,MAAMkD,a,SAC3G7C,MAAM+C,G,cAAvB9G,E,yBAE2BA,EAASgE,O,OAAhC+C,E,OACN3C,KAAKC,SAAS,CACVT,UAAU,EACVtL,KAAMyO,I,kDAGV3C,KAAKC,SAAS,CACVV,MAAM,EAAD,K,+IAYb,IACMa,EAAU,CACZC,WAAY,WACZC,UAAU,EACVC,OAAO,EACPqC,QAAQ,EACRC,aAAa,EACbC,QAAQ,EACRC,YAAY,EACZC,qBAAsBhD,KAAK+B,uBAV1B,EAa6B/B,KAAKV,MAA/BC,EAbH,EAaGA,MAAOC,EAbV,EAaUA,SAAUtL,EAbpB,EAaoBA,KAEzB,OAAIqL,EACO,8DACCC,EAGD,cAAC,KAAD,CACHpO,MAAO,kBACP8C,KAAMA,EACNiM,QAtBQ,CAAC,OAAQ,oBAuBjBC,QAASA,IANN,wE,GAtDsBjM,IAAMqM,WCClCyC,GAAY,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,UAAWhS,EAA6B,EAA7BA,MAAOiG,EAAsB,EAAtBA,KAAMgM,EAAgB,EAAhBA,UAAgB,EAC9D1P,oBAAS,GADqD,mBACjF4L,EADiF,aAExD5L,oBAAS,IAF+C,mBAEjF6L,EAFiF,KAEvE8D,EAFuE,KAGlFC,EAAczQ,KAAKC,MAAMC,aAAaC,OAAOsQ,YAkBnD,OAjBAzP,qBAAU,WACN,wBAAC,+BAAAC,EAAA,6DACSyP,EAAQL,EAAcxT,KAAI,SAAA0S,GAAC,OAAIA,EAAEoB,QACjCC,EAAU,CACZR,UACAE,YACAI,QACApS,QACAiG,OACAgM,YACAE,eATP,SAW0BlR,GAAUsR,KAAK,yBAA0BD,GAXnE,cAYGJ,GAAY,GAZf,0CAAD,KAcD,CAACH,EAAeD,IAEf3D,EACO,0CAAaA,EAAMW,WAClBV,EAGD,4CAFA,yD,wCCZf,IAAMhU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmE,KAAM,CACFrD,MAAO,QAEXwN,OAAQ,CACJpO,UAAWF,EAAMG,QAAQ,GACzBqF,YAAaxF,EAAMG,QAAQ,IAE/B+X,iBAAkB,CACdlN,aAAchL,EAAMG,QAAQ,IAEhCgY,eAAgB,CACZ3T,QAASxE,EAAMG,QAAQ,QAQxB,IC5BHiY,GADAC,GAAUhJ,EAAQ,KAGhBvP,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCmK,KAAM,CACFjK,UAAW,OACXE,QAAS,OACT0K,WAAY,mBAEhBwN,QAAS,CACLlY,QAAS,OACTC,cAAe,SACfkY,eAAgB,QAChBC,iBAAkB,aAEtBpS,QAAS,CACLrD,KAAM,WACNvD,MAAO,QACPiZ,gBAAiB,mEACjBvH,UAAW,SAEfwH,gBAAiB,CACbC,UAAW,UAEfC,OAAO,aACH9X,MAAO,SACNd,EAAMiG,YAAYC,GAAG,MAAO,CACzBpF,MAAO,UAGfgL,QAAS,CACL1L,QAAS,QACTqG,cAAe,SACfjH,MAAO,YACPiL,SAAU,SAEdoO,SAAU,CACNzY,QAAS,QACTZ,MAAO,aAEXsZ,kBAAmB,CACftY,OAAQ,mBAID,SAASuY,GAAT,GAAkC,IAAfvQ,EAAc,EAAdA,KACxBtH,GADsC,EAAR8X,KACpBlZ,MAEZmZ,EAAY,kCAAoCzQ,EAAKoQ,OACrDM,EAAa1Q,EAAK0Q,WAClBC,EAAsB3Q,EAAK4Q,qBAC3BC,EAAS7Q,EAAK8Q,MACdC,EAAe/Q,EAAKgR,QACHC,EAAmBP,GACVO,EAAmBN,GAEhCM,EAAmBJ,GACpCjB,GAAc,sCAAwC5P,EAAKkR,SAC3D,IAAIC,EAAS,GAITA,EADc,cAAdnR,EAAKoR,MAAsC,IAAdpR,EAAKoR,KANzB,IASApR,EAAKoR,KAIdL,EADiB,cAAjBA,GAAiD,IAAjBA,EAZvB,IAeMlB,GAAQ7P,EAAKgR,SAASK,OAAO,UAG7B,MAAfrR,EAAKoQ,SACLK,EAAY,8GAGhB,IAAMa,EAAS,cAAU1B,GAAV,KAEf,OACI,8BACI,cAAClM,GAAA,EAAD,CAAMzK,UAAWP,EAAQiJ,KAAzB,SACI,qBAAK1I,UAAWP,EAAQoX,QAAS5O,MAAO,CAAE+O,gBAAiBqB,GAA3D,SACI,eAACC,GAAA,EAAD,CAAatY,UAAWP,EAAQkF,QAAhC,UACI,cAAC9G,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,KAAnC,SACKiJ,EAAKwR,iBAEV,cAAC1a,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,KAAKkC,UAAWP,EAAQ4K,QAA3D,SACKtD,EAAKsD,UAEV,cAACxM,EAAA,EAAD,CAAYC,QAAQ,YAApB,SACI,eAAC0T,EAAA,EAAD,CAAM1M,WAAS,EAAf,UACI,eAAC0M,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,EAAf,UACK1K,EAAKyR,SACN,eAAChH,EAAA,EAAD,CAAM1M,WAAS,EAAC9E,UAAWP,EAAQ4X,kBAAnC,UACI,eAAC7F,EAAA,EAAD,CAAM9D,MAAI,EAACiE,GAAI,EAAf,+BACsB,sBAAM3R,UAAWP,EAAQ2X,SAAzB,SAAoCrQ,EAAK0R,UAD/D,eAEQ,sBAAMzY,UAAWP,EAAQ2X,SAAzB,SAAoCU,OAE5C,eAACtG,EAAA,EAAD,CAAM9D,MAAI,EAACiE,GAAI,EAAf,2BACkB,uBAAM3R,UAAWP,EAAQ2X,SAAzB,UAAoCrQ,EAAK2R,QAAzC,WADlB,WAEA,sBAAM1Y,UAAWP,EAAQ2X,SAAzB,SAAoCc,aAI5C,cAAC1G,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,EAAGzR,UAAWP,EAAQwX,gBAArC,SACI,qBAAKtM,IAAK6M,EAAWxX,UAAWP,EAAQ0X,yBAaxE,SAASa,EAAmBW,GACxB,IAAIC,EAAc,GAQlB,YANmB5X,IAAf2X,GACAA,EAAWE,SAAQ,SAAUnL,GACzBkL,EAAYnR,KAAKiG,EAAK9L,SAGfgX,EAAYE,KAAK,O,IC5DzB5G,G,oDArEX,WAAYxR,GAAQ,IAAD,+BACf,cAAMA,IASVqY,aAAe,SAACC,GAAD,OAAO,EAAKlG,SAAL,eAAiBkG,EAAEC,OAAOrX,KAAOoX,EAAEC,OAAO7R,SAV7C,EA6CnB8R,oBA7CmB,yCA6CG,WAAOC,GAAP,oBAAAvS,EAAA,6DACZwS,EADY,4CAC2CD,EAD3C,+EAEK3G,MAAM4G,GAFX,cAEZ3K,EAFY,gBAGSA,EAASgE,OAHlB,cAGZ4G,EAHY,yBAIXA,EAAaC,eAAiBD,EAAaC,cAAc,IAAMD,EAAaC,cAAc,GAAG5X,IAJlF,2CA7CH,wDAoDnB6X,aApDmB,yCAoDJ,WAAOP,GAAP,oBAAApS,EAAA,6DACL4S,EAASR,EAAEC,OAAO7R,MACxB,EAAK0L,SAAS,CAAE0G,OAAQA,IAFb,SAGW,EAAKN,oBAAoBM,GAHpC,QAGLC,EAHK,UAKHC,EADK,6CACuCD,EADvC,8CAET,EAAKE,SAASD,IANP,2CApDI,sDAEf,EAAKvH,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVtL,KAAM,KACNyS,OAAQ,aANG,E,sDAaf,OAAO,sBAAK9X,GAAG,6BAAR,UACH,cAACkY,GAAA,EAAD,CAAWhY,KAAK,SAAS6G,MAAM,UAAUoR,YAAY,gBAAgB7J,WAAS,EAC1ExH,SAAUqK,KAAK0G,aAAcO,aAAcjH,KAAKV,MAAMqH,SAC1D,cAAC,GAAD,CAAMzS,KAAM8L,KAAKV,a,+BAMhBuH,GAAM,IAAD,OAEVlH,MAAMkH,GAAKK,MAAK,SAACpa,GAAD,OAASA,EAAI8S,UAAQsH,MAAK,SAAChT,GAEvC,EAAK+L,SAAS,CACV2G,QAAS1S,EAAKrF,GACd6W,eAAgBxR,EAAKwR,eACrBlO,QAAStD,EAAKsD,QACdmO,SAAUzR,EAAKyR,SACfwB,SAAUjT,EAAKiT,SACf7C,OAAQpQ,EAAKkT,YACbxC,WAAY1Q,EAAKmT,qBACjBvC,qBAAsB5Q,EAAK4Q,qBAC3BE,MAAO9Q,EAAK6Q,OACZa,QAAS1R,EAAKoT,aACdhC,KAAMpR,EAAKqT,aACX1B,QAAS3R,EAAK2R,QACdX,QAAShR,EAAKgR,QACdE,SAAUlR,EAAKsT,qB,+KAuBDxH,KAAKqG,oBAAoBrG,KAAKV,MAAMqH,Q,OAApDC,E,OACFC,E,6CAA4CD,E,8CAChD5G,KAAK8G,SAASD,G,2GAlEIrG,a,sICSpBhV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+b,QAAS,CACLvb,OAAQR,EAAMG,QAAQ,GACtB0F,SAAU,YAEdmW,cAAe,CACXvb,gBAAiBwb,KAAM,KACvB,UAAW,CACPxb,gBAAiBwb,KAAM,OAG/BC,YAAa,CACTzb,gBAAiB0b,KAAI,KACrB,UAAW,CACP1b,gBAAiB0b,KAAI,OAG7BC,YAAa,CACT5c,MAAOyc,KAAM,KACbpW,SAAU,WACVwW,KAAM,EACNC,MAAO,EACP3X,OAAQ,GAEZ4X,eAAgB,CACZ/c,MAAOyc,KAAM,KACbpW,SAAU,WACVwW,IAAK,MACLC,KAAM,MACNpc,WAAY,GACZmF,YAAa,IACdmX,WAAY,CACXhY,QAAS,IACViY,MAAO,CACNpX,WAAYrF,EAAMG,QAAQ,GAC1B4C,KAAM,OC/CC,SAAS2Z,GAAT,GAAyC,IAAV7T,EAAS,EAATA,MAW1C,OAAO,cAACvJ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,SAVgB,WACnB,OAAQqJ,GACJ,IAAK,QACD,MAAO,KACX,IAAK,cACD,MAAO,KACX,QACI,OAAOA,GAGuC8T,K,2CCXxDC,GAAS,mCAsBR,IAAMC,GArBb,WACI,IAAIjW,EAAYC,KAAM9B,OAAO,CACzB+B,QAAS,iCAGb,MAAO,CACHgW,UAAW,SAACC,KAGZC,WAAW,WAAD,8BAAE,WAAOC,EAAQrR,GAAf,kBAAAvD,EAAA,6DACJ6U,EADI,UACQtR,EAAO,KAAO,QADtB,YACiCqR,EADjC,oBACmDL,GADnD,4DAEehW,EAAU0B,IAAI4U,GAF7B,cAEFC,EAFE,yBAGDA,EAAS3U,KAAK4U,aAAaC,SAH1B,2CAAF,qDAAC,GAKXnG,OAAO,WAAD,8BAAE,WAAOX,EAAG3K,GAAV,kBAAAvD,EAAA,6DACA6U,EADA,iBACmBtR,EAAO,KAAO,QADjC,oBACoDgR,GADpD,kCACoF/O,mBAAmB0I,IADvG,SAEmB3P,EAAU0B,IAAI4U,GAFjC,cAEEC,EAFF,yBAGGA,EAAS3U,MAHZ,2CAAF,qDAAC,IAOWb,G,8DCTpB7H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0T,UAAW,CACP1I,aAAchL,EAAMG,QAAQ,IAEhC8Q,YAAa,CACTC,UAAW,OACXvG,UAAW,YAKN2S,GAAoB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAO7R,EAAW,EAAXA,KAAW,EAEhC3D,mBAASwV,GAFuB,mBAE/DC,EAF+D,KAElDC,EAFkD,OAGtC1V,mBAAS2D,GAH6B,mBAG/DgS,EAH+D,KAGrDC,EAHqD,OAIxC5V,mBAAS,IAJ+B,mBAI/D6V,EAJ+D,KAItDC,EAJsD,OAKlC9V,mBAAS,GALyB,mBAK/D+V,EAL+D,KAKnDC,EALmD,KAOhE/c,EAAUpB,KAGVoe,EAAc,WAChBX,EAAa,OAejBnV,qBAAU,WACDsV,GAAgBF,GACrB,wBAAC,+BAAAnV,EAAA,6DACG+L,QAAQC,IAAIuJ,GADf,SAE6Bf,GAAW3F,OAAOwG,EAAaE,GAF5D,gBAEWE,EAFX,EAEWA,QACRC,EAAWD,GAHd,0CAAD,KAKD,CAACJ,EAAaF,EAAMI,IAjC+C,MAmC5C3V,mBAAS2D,EAAO,EAAI,GAnCwB,mBAmC/D/C,EAnC+D,KAmCxDsV,EAnCwD,KA2CtE,OAAQ,8BACJ,eAAC7U,GAAA,EAAD,CAAQzB,KAAM2V,EACV/L,WAAW,EACXvQ,QAAS,CAAEjB,MAAOiB,EAAQ+P,aAC1BjJ,QAASkW,EAAa3U,kBAAgB,oBAH1C,UAKI,cAACC,GAAA,EAAD,CAAaE,MAAO,CAAElF,QAAS,GAA/B,SACI,eAAC4Z,GAAA,EAAD,CACIvV,MAAOA,EACPoB,SAfK,SAACpH,EAAOwb,GACzBF,EAASE,GACTR,EAAyB,IAAbQ,GACZJ,EAAc,IAaF1e,QAAQ,YACR+e,eAAe,YACfC,UAAU,YALd,UAMI,cAACC,GAAA,EAAD,CAAKC,KAAM,cAAC,KAAD,IAAevU,MAAM,WAChC,cAACsU,GAAA,EAAD,CAAKC,KAAM,cAAC,KAAD,IAAYvU,MAAM,YAGrC,eAACT,GAAA,EAAD,CAAeE,UAAQ,EAAvB,UACI,cAAC0R,GAAA,EAAD,CACIqD,WAAS,EACTle,OAAO,QACP0J,MAAM,QACNqR,aAAcmC,EACdjM,WAAS,EACTxH,SAAU0U,cA9CH,SAAC9b,GAAW,IACvBgG,EAAUhG,EAAM6X,OAAhB7R,MACR8U,EAAe9U,KA4CgC,OAMnCiV,GAAY,cAAC5P,EAAA,EAAD,CAAM5M,UAAU,MAAhB,SACPwc,EAAQ7Z,KAAI,SAAC4E,GAAW,IAAD,EACpB,OAAQ,eAACwF,EAAA,EAAD,CAEJC,QAAM,EACNsQ,SAAUZ,IAAenV,EAAM1F,GAC/BD,QAAS,kBAAM+a,EAAcpV,EAAM1F,KAJ/B,UAMJ,cAACoL,GAAA,EAAD,UACI,cAAC7M,EAAA,EAAD,CAAQ0K,IAAKvD,EAAM6S,aAAN,wCAAsD7S,EAAM6S,iBAE7E,cAAC9M,EAAA,EAAD,CAAcC,QAAO,UAAKhG,EAAMnD,OAASmD,EAAMxF,MAC3C1C,UAAS,UAAGkI,EAAM+S,cAAgB/S,EAAMgW,sBAA/B,aAAE,EAA8CC,OAAO,EAAG,OATlEjW,EAAM1F,YAe/B,eAACuO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAQzO,QAASgb,EAAa1e,MAAM,UAApC,oBAGA,cAACmS,GAAA,EAAD,CAAQzO,QAjFa,WAC7Bqa,EAAa,CACTpa,GAAI6a,EACJpS,KAAMgS,KA8EyCpe,MAAM,UAAUuf,SAAyB,IAAff,EAArE,yBCjHVle,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiR,YAAa,CACTC,UAAW,OACXvG,UAAW,YAINqU,GAAqB,SAAC,GAAuD,IAArDxB,EAAoD,EAApDA,KAAMxR,EAA8C,EAA9CA,YAAayR,EAAiC,EAAjCA,MAAOF,EAA0B,EAA1BA,aAAczK,EAAY,EAAZA,MACnE5R,EAAUpB,KADqE,EAIvDmI,mBAAS,IAJ8C,mBAI9ES,EAJ8E,KAIrEC,EAJqE,KAK/EuV,EAAc,WAChBX,KAGJnV,qBAAU,WACN,IAAM6W,GAAoB,OAALnM,QAAK,IAALA,OAAA,EAAAA,EAAO7O,KAAI,SAAAuO,GAAC,OAAIA,EAAErP,QAAO,GAC9CwF,EAAWsW,KACZ,CAACnM,IAEJ,IAAMlK,EAAe,SAACC,GAAD,OAAW,WAC5B,IAAMC,EAAeJ,EAAQK,QAAQF,GAC/BG,EAAU,aAAON,IAED,IAAlBI,EACAE,EAAWE,KAAKL,GAEhBG,EAAWI,OAAON,EAAc,GAEpCH,EAAWK,KAGTkW,EAAe,yCAAG,iCAAA7W,EAAA,qEACQK,GADR,+DACTyW,EADS,iBAEVxY,GAAUwC,IAAV,wBAA+BgW,EAA/B,wBAA4DnT,IAFlD,6IAIpBuR,EAAa7U,GAJO,gEAAH,qDAOrB,OACI,8BACI,eAACY,GAAA,EAAD,CAAQzB,KAAM2V,EACV/L,WAAW,EACXvQ,QAAS,CAAEjB,MAAOiB,EAAQ+P,aAC1BjJ,QAASkW,EAAa3U,kBAAgB,oBAH1C,UAII,eAACC,GAAA,EAAD,qCAC4BiU,KAE5B,cAAChU,GAAA,EAAD,CAAeE,UAAQ,EAAvB,SAEQmJ,GAAU,cAAC5E,EAAA,EAAD,UACL4E,EAAM7O,KAAI,SAAC4E,GACR,IAAMuW,EAAO,8BAA0BvW,EAAM1F,IAE7C,OADAiR,QAAQC,IAAI,YAAaxL,GACjB,eAACwF,EAAA,EAAD,CAAyBC,QAAM,EAACpL,QAAS0F,EAAaC,EAAM1F,IAA5D,UACJ,cAACkc,EAAA,EAAD,UACI,cAACrV,GAAA,EAAD,CACIsV,KAAK,QACL5W,SAAwC,IAA/BA,EAAQK,QAAQF,EAAM1F,IAC/Boc,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBL,OAGzC,cAACxQ,EAAA,EAAD,CAAczL,GAAIic,EAASvQ,QAAShG,EAAMmI,kBAVvBnI,EAAM1F,WAgB7C,eAACuO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAQzO,QAASgb,EAAa1e,MAAM,UAApC,oBAGA,cAACmS,GAAA,EAAD,CAAQzO,QAASgc,EAAiB1f,MAAM,UAAxC,yBCvEdM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmE,KAAM,CACF/D,QAAS,OACTU,MAAO,IACPuF,OAAQ,KAEZiS,QAAS,CACLlY,QAAS,OACTC,cAAe,SACf0C,KAAM,KAEVqD,QAAS,CACLrD,KAAM,YAEV2c,MAAO,CAEHtf,QAAS,OACT2C,KAAM,KAEV4c,SAAU,CACNvf,QAAS,OACTE,WAAY,SACZqM,YAAa3M,EAAMG,QAAQ,GAC3BsG,cAAezG,EAAMG,QAAQ,IAEjCyf,SAAU,CACNvZ,OAAQ,GACRvF,MAAO,IAEX+e,YAAa,CACTxZ,OAAQ,EACRG,WAAY,cAIdsZ,GAAeC,cAAW,SAAC/f,GAAD,MAAY,CACxCggB,QAAS,CACLvf,gBAAiBT,EAAMU,QAAQ0K,OAAOC,MACtC7L,MAAO,mBACPgF,QAAS,EACT6F,aAAc,aALD0V,CAOjBE,MAESC,GAAsB,SAAC,GAC7B,IAD+BrX,EAChC,EADgCA,MAAO+C,EACvC,EADuCA,KAAMuT,EAC7C,EAD6CA,cAAenT,EAC5D,EAD4DA,YAAamU,EACzE,EADyEA,sBACzE,EAKgClY,mBAAS,IALzC,mBAKKmY,EALL,KAKgBC,EALhB,OAMsCpY,mBAAS,IAN/C,mBAMK0K,EANL,KAMmB2N,EANnB,OAOkCrY,mBAAS,IAP3C,mBAOKwD,EAPL,KAOiB8U,EAPjB,OAQgCtY,mBAAS,IARzC,mBAQgBuY,GARhB,aASwBvY,mBAASY,GATjC,mBASKnD,EATL,KASYwP,EATZ,OAUsBjN,mBAAS,IAV/B,mBAUK0D,EAVL,KAUW8U,EAVX,OAW8BxY,mBAAS,IAXvC,mBAWeyY,GAXf,aAYgCzY,oBAAS,GAZzC,mBAYK0Y,EAZL,KAYgBC,EAZhB,OAa0B3Y,qBAb1B,mBAaKoN,EAbL,KAaawL,EAbb,QAcc/gB,KACcmI,oBAAS,IAfrC,mBAeKoF,EAfL,KAec4H,EAfd,OAgBkChN,oBAAS,GAhB3C,mBAgBK6Y,EAhBL,KAgBiBC,EAhBjB,OAkBoD9Y,mBAAS,IAlB7D,mBAkBK+Y,GAlBL,KAkB0BC,GAlB1B,QAqBkEhZ,oBAAS,GArB3E,qBAqBKiZ,GArBL,MAqBiCC,GArBjC,MAuBF/Y,qBAAU,WACDS,GACL,wBAAC,mCAAAR,EAAA,sEAC6BwU,GAAW3F,OAAOrO,EAAO+C,GADtD,iBACWkS,EADX,EACWA,SACI,KACR8C,GAAa,GACbC,EAAU/C,EAAQ,IAClB5I,EAAS4I,EAAQ,GAAGpY,OAASoY,EAAQ,GAAGza,MACxCgd,EAAa,8BAAD,OA7BL,OA6BK,OAA4CvC,EAAQ,GAAGpC,cACnE8E,EAAa,8BAAD,OA7BL,QA6BK,OAA4C1C,EAAQ,GAAGpC,cAInE4E,EAAgBxC,EAAQ,GAAGhC,eAC3ByE,EAAczC,EAAQ,GAAGpC,aAIzB+E,GAAQ,UAAA3C,EAAQ,GAAGlC,oBAAX,eAAyBkD,OAAO,EAAG,MAAnC,UAAyChB,EAAQ,GAAGe,sBAApD,aAAyC,EAA2BC,OAAO,EAAG,KACtF4B,EAAY5C,EAAQ,GAAG7D,WAE3BhF,GAAW,GAnBd,0CAAD,KAqBD,CAACpM,IAEJ,IAAMuY,GAAaT,EAAY,cAAC,KAAD,IAAe,KACxCU,GAAkB,yCAAG,6BAAAhZ,EAAA,6DACflF,EAAOkS,EAAPlS,GADe,SAEjBme,GAAmBne,EAAIyI,GAFN,2CAAH,qDAKlB0V,GAAkB,yCAAG,WAAOne,EAAIoe,GAAX,sBAAAlZ,EAAA,+EAGI1B,GAAU2B,IAAV,8BAAqCnF,EAArC,eAHJ,OAGb+M,EAHa,OAInBlE,EAAckE,EAAS1H,KAAKrF,GAJT,iEAMIwD,GAAUsR,KAAV,6BAAqC9U,EAArC,+BAA8Doe,EAAe,KAAO,UANxF,QAMbrR,EANa,OAOnBlE,EAAckE,EAAS1H,KAAKrF,GAPT,yBASjBwD,GAAUwC,IAAV,wBAA+BgW,EAA/B,wBAA4DnT,IAT3C,eAUvBmU,GAAyBA,EAAsB,CAAC,CAAEnU,cAAamT,mBAVxC,UAYYxY,GAAU2B,IAAV,mCAA0CuF,mBAAmBhF,GAA7D,qCAZZ,SAYjB2Y,EAZiB,QAaEhZ,KAAKsK,OAAS0O,EAAqBhZ,KAAKsK,MAAMS,OAAS,IAC5E0N,GAAuBO,EAAqBhZ,KAAKsK,OACjDqO,IAA8B,IAfX,yDAAH,wDAuBlBM,GAAwB,yCAAG,WAAOC,GAAP,UAAArZ,EAAA,yDAC7B0Y,GAAc,IACVW,EAFyB,gCAGnBJ,GAAmBI,EAAeve,GAAIue,EAAe9V,MAHlC,2CAAH,sDAexB+V,GAAa,cAAC,GAAD,CAAYjc,MAAOA,EAAOgG,SAAUiH,EAAc/G,KAAMA,EAAMD,KAAMA,EAAMF,WAAYA,IACnGmW,GAAO,cAACC,GAAA,EAAD,CACTje,KAAK,SACLrD,OAAQ,cAACmB,EAAA,EAAD,CAAQ0K,IAAKgU,IACrB5gB,MAAM,UAAU0K,MAAOxE,GAASmD,EAChCtJ,QAAQ,WACR2D,QAzBsB,WACtB6d,GAAc,IAyBde,SAAUnB,EAAYU,GAAqB,KAC3CD,WAAYA,GACZ1X,MAAO,CAAEnI,SAAU,KACnBwgB,WAAS,IAEb,OAAI/V,EACO,gCACH,cAAC,GAAD,CAAoBwR,KAAM0D,GAA4BlV,YAAaA,EAAayR,MAAO5U,EACnFiK,MAAOkO,GACPzD,aAxB0B,SAACyE,GAEnC,GADAb,IAA8B,GAC1Ba,EAAe,CACf,IAAMC,EAAgBD,EAAc/d,KAAI,SAAAkb,GAAmB,MAAO,CAAEnT,cAAamT,oBACjFgB,GAAyBA,EAAsB8B,OAqB/C,+BAAOjW,OAEJqB,EACA,6CAEFsT,EACE,gCAEH,cAAC,GAAD,CAAmBnD,KAAMsD,EAAYrD,MAAO/X,EAAOkG,KAAMA,EAAM2R,aAAckE,KAC7E,cAAC3B,GAAD,CAAcoC,aAAW,EAACxc,MAAOic,GAAYQ,WAAY,IAAKC,UAAU,QAAQC,OAAK,EAArF,SACKT,QAGF,gCACH,cAAC,GAAD,CAAmBpE,KAAMsD,EAAYrD,MAAO/X,GAASmD,EAAO+C,KAAMA,EAAM2R,aAAckE,KACrFG,O,oBC3KPrM,GAAQlG,EAAQ,KAClBmG,GAAenG,EAAQ,KAC3BkG,GAAME,OAAOD,IAEb,IAAM1V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0T,UAAW,CACP1I,aAAchL,EAAMG,QAAQ,Q,yGCsErBmiB,GAnEA,CACX,CACIvK,KAAM,aACNwK,YAAa,YACbjhB,U1BqFO,WACb,IAAMJ,EAAUpB,KADkB,EAEV2I,IAAMR,UAAS,GAFL,mBAS5Bua,GAT4B,UASTC,kBAAKvhB,EAAQjB,MAAOiB,EAAQwF,cAErD,OAEQ,eAACuM,EAAA,EAAD,CAAM1M,WAAS,EAACpG,QAAS,EAAzB,UAEE,cAAC8S,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,GAAIE,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC0C,EAAA,EAAD,CAAOtU,UAAW+gB,EAAlB,SACE,cAAC9f,EAAD,QAIJ,cAACuQ,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,GAAIE,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC0C,EAAA,EAAD,CAAOtU,UAAW+gB,EAAlB,SACE,cAACxf,EAAD,QAIJ,cAACiQ,EAAA,EAAD,CAAM9D,MAAI,EAAC+D,GAAI,GAAf,SACE,cAAC6C,EAAA,EAAD,CAAOtU,UAAWP,EAAQjB,MAA1B,SACE,cAACyD,GAAD,Y0BjHR+a,KAAMiE,MAEV,CACI3K,KAAM,eACNwK,YAAa,cACbjhB,UC1BO,WACb,OACE,8CDyBImd,KAAMkE,KACNC,MAAM,GAEV,CACI7K,KAAM,UACNwK,YAAa,cACbjhB,UjBrBO,WAA2B,IAAD,EACf2G,mBAAS,IADM,mBAChCO,EADgC,KAC1BgH,EAD0B,OAETvH,oBAAS,GAFA,mBAEhCoF,EAFgC,KAEvB4H,EAFuB,OAGXhN,mBAAS,IAHE,mBAGhCiP,EAHgC,KAGxB2L,EAHwB,KAIjC3hB,EAAUpB,KAmBhB,OAZAsI,qBAAU,WACR,wBAAC,+BAAAC,EAAA,6DACOqV,EAAcxG,EACpBjC,GAAW,GAFZ,SAGsBtO,GAAU2B,IAAV,kBAAyBoV,IAH/C,OAGOrI,EAHP,OAIK6B,IAAWwG,IACblO,EAAQ6F,EAAO7M,MACfyM,GAAW,IANd,0CAAD,KASC,CAACiC,IAGF,gCACE,cAACmE,GAAA,EAAD,CAAWnR,MAAM,SAASoR,YAAY,SAAS7J,WAAS,EACtDxH,SAAU0U,cApBO,SAAC9b,GAAW,IACzBgG,EAAUhG,EAAM6X,OAAhB7R,MACRga,EAAUha,KAkB6B,KACnC0S,aAAcrE,EAAQzV,UAAWP,EAAQwS,YAC3C,cAAC,GAAD,CAAwBZ,MAAOtK,EAAMuK,UAAW1F,QiBN9CoR,KAAMqE,MAEV,CACI/K,KAAM,iBACNwK,YAAa,oBACbjhB,UAAWyhB,GACXtE,KAAMuE,MAEV,CACIjL,KAAM,uBACNwK,YAAa,wBACbjhB,UVXwB,WAAO,IAAD,EACkB2hB,eAG9C/hB,GAJ4B,EAC1B6I,QAD0B,EACjBmZ,SADiB,EACPC,aADO,EACOC,OAGzBtjB,MACZ2d,EA5BG,IAAI4F,gBAAgBC,cAAcpM,QAuBP,EAQFjP,mBAASwV,EAAMnV,IAAI,aAAe,IARhC,mBAQ3ByF,EAR2B,aASA9F,mBAASwV,EAAMnV,IAAI,WAAa,KAThC,mBAS3BoP,EAT2B,aAWAzP,sBAXA,mBAW3B0P,EAX2B,KAWhB4L,EAXgB,OAYRtb,qBAZQ,mBAY3BvC,EAZ2B,KAYpBwP,EAZoB,OAaVjN,qBAbU,mBAa3B0D,EAb2B,KAarB8U,EAbqB,KAe5B3Y,EAAU2V,EAAMnV,IAAI,WAfQ,EAgBEL,mBAAS,GAhBX,mBAgB3Bub,EAhB2B,KAgBfC,EAhBe,OAiBJxb,mBAASwV,EAAMnV,IAAI,SAjBf,mBAiB3BkP,EAjB2B,KAiBlBkM,EAjBkB,OAkBQzb,mBAAS,IAlBjB,mBAkB3BwP,EAlB2B,KAkBZkM,EAlBY,OAmBA1b,oBAAS,GAnBT,mBAmB3B2b,EAnB2B,KAmBhBC,EAnBgB,KAoB5BC,EAAoB/V,EAASyC,MAAM,KAAKC,MAE9CrI,qBAAU,WACFN,GACA,wBAAC,qCAAAO,EAAA,sEAC8B1B,GAAU2B,IAAV,gBAAuBR,IADrD,OACSic,EADT,SAEqCA,EAAavb,KAAvCoK,EAFX,EAEWA,SAAUlN,EAFrB,EAEqBA,MAAOiG,EAF5B,EAE4BA,KACzB4X,EAAa3Q,GACb6N,EAAQ9U,GACRuJ,EAASxP,GALZ,0CAAD,KAQL,CAACoC,IAEJ,IAAMkc,EAAsB,SAACvJ,GACzBkJ,EAAiBlJ,IAGfwJ,EAAQ,CAAC,+CAAgD,yBAA0B,UAEzF,SAASC,EAAeC,GACpB,OAAQA,GACJ,KAAK,EACD,OAAO,gCACH,cAAC9I,GAAA,EAAD,CAAWhY,KAAK,UAAU+gB,KAAK,MAAM7I,aAAc/D,EAAS/F,WAAS,EAACxH,SAAU,SAAAwQ,GAAC,OAAIiJ,EAAWjJ,EAAEC,OAAO7R,UACzG,yCAAY6O,KACZ,6CAAgBC,KAChB,wCAAWjS,KACX,uCAAUiG,KACV,cAAC7B,GAAA,EAAD,CAAkBC,QAAS,cAACC,GAAA,EAAD,CAAU3G,KAAK,YACtCqF,QAASkb,EACT3Z,SAAU,SAAAoa,GAAE,OAAIR,EAAaQ,EAAG3J,OAAOhS,UACvCqW,SAAgC,QAAtB+E,IAAiC5Z,MAAM,kBAE7D,KAAK,EACD,OAAO,cAAC,GAAD,CAAqB6M,kBAAmBS,EAASX,kBAAmBmN,IAC/E,KAAK,EACD,OAAO,cAAC,GAAD,CAAWvM,cAAeA,EAAeD,QAASA,EAASE,UAAWA,EACzEC,UAAWA,EACXjS,MAAOA,EACPiG,KAAMA,IAEd,QACI,MAAO,gBAInB,IAAM2Y,EAAa,WACI,IAAfd,GAAoBI,GAEpBD,EAAiB,CAAC,CAAE5L,KAAMhK,KAC1B0V,EAAc,IAGdA,GAAc,SAACc,GAAD,OAAoBA,EAAiB,MAGrDC,EAAa,WAEXf,EADe,IAAfD,GAAoBI,EACN,EAEA,SAACW,GAAD,OAAoBA,EAAiB,KAQ3D,OACI,8BACI,sBAAK9iB,UAAWP,EAAQiD,KAAxB,UACI,cAACsgB,GAAA,EAAD,CAASjB,WAAYA,EAAYkB,YAAY,WAA7C,SACKT,EAAMhgB,KAAI,SAACiG,EAAO0M,GAAR,OACP,eAAC+N,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAY1a,IACZ,eAAC2a,GAAA,EAAD,WACI,cAACvlB,EAAA,EAAD,UAAa4kB,EAAetN,KAC5B,qBAAKnV,UAAWP,EAAQgX,iBAAxB,SACI,gCACI,cAACvG,GAAA,EAAD,CACIoN,SAAyB,IAAfyE,EACVtgB,QAASshB,EACT/iB,UAAWP,EAAQoN,OAHvB,kBAOA,cAACqD,GAAA,EAAD,CACIpS,QAAQ,YACRC,MAAM,UACN0D,QAASohB,EACT7iB,UAAWP,EAAQoN,OAJvB,SAMKkV,IAAeS,EAAM1Q,OAAS,EAAI,SAAW,mBAnBvDrJ,QA2BlBsZ,IAAeS,EAAM1Q,QAClB,eAACwC,EAAA,EAAD,CAAO+O,QAAM,EAACC,UAAW,EAAGtjB,UAAWP,EAAQiX,eAA/C,UACI,cAAC7Y,EAAA,EAAD,oDACA,cAACqS,GAAA,EAAD,CAAQzO,QAxCR,WAChBugB,EAAc,IAuCgChiB,UAAWP,EAAQoN,OAAjD,4BUhHhBmQ,KAAMuG,MAEV,CACIjN,KAAM,YACNwK,YAAa,WACbjhB,UAAW6U,GACXsI,KAAMwG,MAEV,CACIlN,KAAM,uBACNwK,YAAa,WACbjhB,UAAW6U,GACXsI,KAAMwG,KACNrC,MAAM,GAEV,CACI7K,KAAM,aACNwK,YAAa,uBACbjhB,UAAW4jB,GACXzG,KAAMkE,KACNC,MAAM,GAEV,CACI7K,KAAM,sBACNwK,YAAa,wBACbjhB,UPrBoC,SAAC,GAAyB,EAAvBwR,MAAuB,EAAhBC,UAAiB,IAC7DoS,EAAa/O,cAAb+O,SACFC,EAAMhP,cACVhC,QAAQC,IAAI+Q,EAAKD,GAEjB/c,qBAAU,WACNgM,QAAQC,IAAI,gBACZ,wBAAC,+BAAAhM,EAAA,6DACG+L,QAAQC,IAAI,wBADf,SAEqC1N,GAAU2B,IAAV,uBAA8B6c,IAFnE,OAESE,EAFT,OAGWtU,EAAgBsU,EAAoB7c,KAApCuI,YACRqD,QAAQC,IAAItD,GACZuU,EAAWvU,GACXwU,IANH,0CAAD,KAQD,IAEH,IAAMrkB,EAAUpB,KACV0lB,EAAW,WAAQ,OAAQ5lB,KAAK6lB,MAAMC,SAAS,IAAMC,KAAKC,SAASF,SAAS,IAAI5G,OAAO,EAAG,IAAIpQ,eAlBlC,EAmBpCzG,mBAAS,IAnB2B,mBAmB3D4d,EAnB2D,KAmBlDP,EAnBkD,KA0B5DC,EAAiB,WACnB/V,EAAQ,CACJnM,KAAMwiB,EACNC,WAAY,CACR3K,IAAK0K,EACL1iB,GAAIqiB,QAKVO,EAAgBP,IAChBQ,EAAc,CAChB3iB,KAAMwiB,EACNC,WAAY,CACR3K,IAAK0K,EACL1iB,GAAI4iB,IAzCsD,EA8C1C9d,mBAAS+d,GA9CiC,mBA8C3Dxd,EA9C2D,KA8CrDgH,EA9CqD,KAkF5DyW,EAAmB,yCAAG,WAAOvY,GAAP,gCAAArF,EAAA,0DACpBqF,EAAIoY,WAAWI,YADK,wDAElBC,EAAWC,KAAM5d,GACjB6d,EAAWC,EAAiBH,EAAUzY,EAAIoY,WAAW3iB,IAHnC,SAKpBkjB,EAASP,WAAWS,WAAY,EAC1BtW,EANc,+EAMoEpC,mBAAmBH,EAAIoY,WAAW3K,MANtG,SAOGtU,KAAMyB,IAAI2H,GAPb,OAOdC,EAPc,OAQd7N,EAAW,GARG,eASM6N,EAAS1H,MATf,IASpB,2BAAW2H,EAA8B,QAC/BO,EAAc,CAChBrN,KAAM8M,EAAYzK,MAAOogB,WAAY,CACjC3K,IAAKhL,EAAYrC,KACjB3K,GAAIqiB,MAGZnjB,EAAS6G,KAAKwH,GAhBE,8BAkBpB2V,EAASP,WAAWI,aAAc,EAClCG,EAAShkB,SAAWA,EAnBA,kDAqBpBgkB,EAASP,WAAWS,WAAY,EAChCF,EAASP,WAAW/S,WAAY,EAtBZ,QAwBxBvD,EAAQ2W,GAxBgB,0DAAH,sDA2BzB,SAASG,EAAiBE,EAAYC,GAAU,IAAD,EAC3C,GAAID,EAAWV,WAAW3iB,KAAOsjB,EAC7B,OAAOD,EACJ,aAAIA,EAAWnkB,gBAAf,aAAI,EAAqBkR,OAAQ,CAAC,IAAD,iBACTiT,EAAWnkB,UADF,IACpC,2BAAgD,CAAC,IACvCqkB,EAAWJ,EAD2B,QACIG,GAChD,GAAIC,EAAU,OAAOA,GAHW,+BAMxC,OAAO,KAGX,IAAMC,EAAW,CAAEnU,EAAG,IAAKoU,EAAG,KACxBC,EAAqB,CAAE/lB,MAAO6lB,EAASnU,EAAGnM,OAAQsgB,EAASC,EAAGpU,GAAI,GAAIoU,GAAI,IAEhF,OAAO,8BAEH,sBAAKzjB,GAAG,cAAcuG,MAAO,CAAErD,OAAQ,QAAvC,UACKwf,EACD,cAACxK,GAAA,EAAD,CAAWnR,MAAM,WAAWqR,aAAcsK,EAASvK,YAAY,WAAW7J,WAAS,EAACqV,WAAY,CAC5FC,aAAe,cAACC,GAAA,EAAD,UACX,cAACvZ,EAAA,EAAD,CAAYjO,MAAM,UAAUiC,UAAWP,EAAQsb,WAAYxG,aAAW,SAAS9S,QAASqiB,EAAxF,SACI,cAAC,KAAD,SAIRtb,SAlHkB,SAACpH,GAAW,IAC9BgG,EAAUhG,EAAM6X,OAAhB7R,MACRyc,EAAWzc,MAiHP,cAAC,KAAD,CAAML,KAAMA,EACRkc,YAAY,WACZuC,YAAahB,EACbU,SAAUA,EACVO,UAAW,CAAE1U,EAAG,IAAKoU,EAAG,KACxBO,wBAAyB,SAACC,GAAD,OA7FL,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,UACAC,EAF4B,EAE5BA,WACAT,EAH4B,EAG5BA,mBAH4B,OAK5B,yDAAmBA,GAAnB,aACI,sBAAKplB,UAAWP,EAAQ6a,QAAxB,UACI,cAACkE,GAAA,EAAD,CAASva,MAAO,eAAC,IAAMzC,SAAP,oBACLokB,EAAUhkB,KACjB,uBAFY,QAGFgkB,EAAUvB,WAAW3K,OAHnC,SAKI,cAACoM,GAAA,EAAD,CACI/nB,MAAM,UACNiC,UAAW4lB,EAAUvB,WAAWS,WAAarlB,EAAQgb,YACrDhZ,QAAS,WACAmkB,EAAUvB,WAAWI,aACjBmB,EAAUvB,WAAWzY,UACtBga,EAAUvB,WAAWS,WAAY,EACjCc,EAAUvB,WAAWzY,SAAU,EAC/B4Y,EAAoBoB,IAG5BC,KAXR,SAcKD,EAAUvB,WAAWS,WAAa,cAAC,KAAD,QAG1Cc,EAAUvB,WAAWzY,SAAW,cAACG,GAAA,EAAD,CAAkB5J,KAAM,GAAInC,UAAWP,EAAQkb,oBAiE5EoL,CAAwB,2BAAKJ,GAAN,IAAiBP,iCOxHpDpI,KAAMgJ,KACN7E,MAAM,GAEV,CACI7K,KAAM,UACNwK,YAAa,eACbjhB,UD5DgC,WAAO,IAAD,EAClB2G,mBAAS,GADS,mBACnCyf,EADmC,KAC7BC,EAD6B,OAEvB1f,mBAAS,IAArB2f,EAFmC,sBAGlB3f,mBAAS,IAHS,mBAGnCzE,EAHmC,KAG7BsS,EAH6B,OAIV7N,mBAAS,GAJC,mBAInC4f,EAJmC,KAIzBC,EAJyB,OAKZ7f,oBAAS,GALG,mBAKnCoF,EALmC,KAK1B4H,EAL0B,OAMdhN,mBAAS,IANK,mBAMnCiP,EANmC,KAM3B2L,EAN2B,OAOM5a,mBAAS,WAPf,mBAOnC8f,EAPmC,KAOjBC,EAPiB,KAQpC9mB,EAAUpB,KAEVmoB,EAAuB,yCAAG,WAAO5S,GAAP,gBAAAhN,EAAA,sDACtB6f,EAAc1kB,EAAKS,KAAI,SAAAuO,GACzB,IAAM2V,EAAiB9S,EAAO+S,MAAK,SAAAxB,GAAC,OAAIA,EAAEzH,gBAAkB3M,EAAErP,MAI9D,OAHIglB,IACA3V,EAAExG,YAAcmc,EAAenc,aAE5BwG,KAEXsD,EAAQoS,GARoB,2CAAH,sDAWvBzT,EAAuB,CACzB,CAAE4T,MAAO,gBAAiBC,WAAY,QAASxnB,MAAO,IAAKynB,UAAU,EAAOxlB,KAAM,GAClF,CACIslB,MAAO,aAAcC,WAAY,eAAgBC,UAAU,EAAOznB,MAAO,IAAK0nB,WAAY,YAAqB,IAAlB3f,EAAiB,EAAjBA,MAAO3E,EAAU,EAAVA,IAChG,OAAO,cAAC,GAAD,CACH2E,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOnD,QAASxB,EAAI8M,cAAepF,KAAI,OAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAO+C,KACvDuT,cAAejb,EAAIf,GACnB6I,YAAa9H,EAAI8H,YACjBmU,sBAAuB8H,MAInC,CACII,MAAO,cAAeC,WAAY,SAAUC,UAAU,EAAOznB,MAAO,GAAI0nB,WAAY,YAAgB,IAAb3f,EAAY,EAAZA,MACnF,OAAO,cAAC,GAAD,CAAYA,MAAOA,MAGlC,CAAEwf,MAAO,UAAWC,WAAY,UAAWC,UAAU,EAAOznB,MAAO,IAAK2nB,eAAgB,gBAAG5f,EAAH,EAAGA,MAAH,OAAe0M,GAAM1M,GAAOqN,YACpH,CAAEmS,MAAO,WAAYC,WAAY,gBAAiBC,UAAU,EAAOznB,MAAO,IAAK2nB,eAAgB,gBAAG5f,EAAH,EAAGA,MAAH,OAAe0M,GAAM1M,GAAOqN,aAU/H9N,qBAAU,WACN,wBAAC,+BAAAC,EAAA,6DACG4M,GAAW,GACLyT,EAAmC,YAArBX,EAFvB,SAG0BphB,GAAU2B,IAAV,iCAAwCsf,EAAxC,uBAA+DF,EAAO,EAAtE,cAA6ExQ,EAA7E,uCAAkHwR,IAH5I,OAGSxY,EAHT,OAIG4X,EAAY5X,EAAS1H,KAAKmgB,OAC1B7S,EAAQ5F,EAAS1H,KAAKsK,OACtBmC,GAAW,GANd,0CAAD,KAQD,CAACyS,EAAMxQ,EAAQ6Q,EAAkBH,IAOpC,OAAO,gCACH,cAACvM,GAAA,EAAD,CAAWnR,MAAM,SAASoR,YAAY,SAAS7J,WAAS,EACpDxH,SAAU0U,cAxBK,SAAC9b,GAAW,IACvBgG,EAAUhG,EAAM6X,OAAhB7R,MACR8e,EAAQ,GACR9E,EAAUha,KAqB6B,KACnC0S,aAAcrE,EAAQzV,UAAWP,EAAQwS,YAC7C,eAACkV,GAAA,EAAD,CAAmB/f,MAAOkf,EAAkBc,WAAS,EAAC5e,SAAU,SAACoa,EAAIyE,GAAL,OAAad,EAAoBc,IAAjG,UACI,cAACC,GAAA,EAAD,CAAclgB,MAAM,MAApB,iBAGA,cAACkgB,GAAA,EAAD,CAAclgB,MAAM,UAApB,wBAKJ,cAAC,KAAD,CACI6e,KAAMA,EACNsB,YAAY,EACZxlB,KAAMA,EACNiR,QAASA,EACTmT,SAAUA,EACVqB,eAAe,SACfC,aAzBiB,SAACC,GAAY,IAC1BzB,EAASyB,EAATzB,KACRC,EAAQD,IAwBJra,QAASA,EACTwa,SAAUA,EACVuB,mBAAmB,EACnBC,mBAAiB,EACjBC,uBAAqB,EACrBC,yBAAuB,QC9B3B9K,KAAMgJ,OElDC+B,gBA1BI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAK7B,OAAQ,8BACN,cAACxb,EAAA,EAAD,UACGoU,GAAOlL,QAAO,SAAA5E,GAAC,OAAKA,EAAEoQ,QAAM3e,KAAI,SAAC0lB,EAAMC,GACtC,OACE,eAACvb,EAAA,EAAD,CAAU/M,UAAW5B,IAAM4O,QAAM,EAC/BL,GAAI0b,EAAKE,QAAUF,EAAK5R,KACxBrO,MAAO,CAAEiM,eAAgB,QAEzBzS,QAASwmB,EACT9K,UAbWkL,EAaWH,EAAK5R,MAZpB,OAAR0R,QAAQ,IAARA,OAAA,EAAAA,EAAUlZ,YAAauZ,GAOxB,UAME,cAACzK,EAAA,EAAD,UACE,cAACsK,EAAKlL,KAAN,MAEF,cAAC7P,EAAA,EAAD,CAAcC,QAAS8a,EAAKpH,gBANvBqH,GAXK,IAACE,YCJR,SAASC,KACtB,OACE,8C,4CCOEjqB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsE,YAAY,aACRlE,QAAS,OACTE,WAAY,SACZiE,eAAgB,WAChBC,QAAS,SACNxE,EAAMyE,OAAOL,SACjBwB,YAAa,CACZC,SAAU,WACVC,WAAY,SACZhF,MAZY,IAaZ+D,WAAY7E,EAAM8E,YAAYC,OAAO,QAAS,CAC1CC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASI,kBAG7CS,iBAAiB,aACbC,UAAW,SACXnB,WAAY7E,EAAM8E,YAAYC,OAAO,QAAS,CAC1CC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASC,gBAEzCrE,MAAOd,EAAMG,QAAQ,IACpBH,EAAMiG,YAAYC,GAAG,MAAQ,CAC1BpF,MAAOd,EAAMG,QAAQ,SAMpB6pB,GAAmB,SAAC,GAAsD,IAApDniB,EAAmD,EAAnDA,KAAMoiB,EAA6C,EAA7CA,kBAAmBC,EAA0B,EAA1BA,oBAClDhpB,EAAUpB,KAChB,OACI,eAACqqB,GAAA,EAAD,CAAQ5qB,QAAS2qB,EAAsB,YAAc,YACjDhpB,QAAS,CACLjB,MAAOwiB,kBAAKvhB,EAAQ0E,aAAciC,GAAQ3G,EAAQ6E,mBACnD8B,KAAMA,EAHb,UAII,qBAAKpG,UAAWP,EAAQoD,YAAxB,SACI,cAACmJ,EAAA,EAAD,CAAYvK,QAAS+mB,EAArB,SACI,cAAC,KAAD,QAGR,cAACG,GAAA,EAAD,IACA,cAAC,GAAD,CAAYV,gBAAiBQ,GAAuBD,QCnB1DnqB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmE,KAAM,CACJ/D,QAAS,QAEXgE,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVlE,QAAS,OACTE,WAAY,SACZiE,eAAgB,WAChBC,QAAS,SACNxE,EAAMyE,OAAOL,SAElBM,OAAQ,CACNC,OAAQ3E,EAAM2E,OAAOC,OAAS,EAC9BC,WAAY7E,EAAM8E,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAzBgB,IA0BhBvE,MAAM,eAAD,OA1BW,IA0BX,OACL+D,WAAY7E,EAAM8E,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhF,EAAM8E,YAAYE,OAAOC,MACjCC,SAAUlF,EAAM8E,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBrF,QAAS,QAEXsF,MAAO,CACLC,SAAU,GAEZQ,aAAcnG,EAAMyE,OAAOL,QAC3BgC,QAAS,CACPT,SAAU,EACVU,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAYxG,EAAMG,QAAQ,GAC1BsG,cAAezG,EAAMG,QAAQ,IAE/BF,MAAO,CACLuE,QAASxE,EAAMG,QAAQ,GACvBC,QAAS,OACTkG,SAAU,OACVjG,cAAe,UAEjBqG,YAAa,CACXL,OAAQ,SAiFGgkB,OA7Ef,WAAgB,IAAD,EC5FA,WACXjiB,qBAAU,WACN,IAAMkiB,EAASC,OAAOC,aAAY,WAC9BpW,QAAQC,IAAI,wBAAyBiW,GACjC/iB,GAAuB,MAAdkjB,KACTC,EAAiB,QAEtB,KACH,OAAO,kBAAMC,cAAcL,MAC5B,IAEH,IAAMG,EAAW,WAAO,IAAD,EACbG,EAActjB,aAAaujB,QAAQ,SACnCC,EAAY1jB,KAAKC,MAAMujB,GAC7B,OAAa,OAATE,QAAS,IAATA,GAAA,UAAAA,EAAWC,gBAAX,eAAqBC,aAAc,IAAIprB,KAAKkrB,EAAUC,SAASC,YAAc,IAAIprB,KAC1EkrB,EAEJ,MAjBoB,EAoBG7iB,mBAASwiB,KApBZ,mBAoBxBljB,EApBwB,KAoBjBmjB,EApBiB,KA8B/B,MAAO,CACHzpB,SATc,SAAA6pB,GACdxjB,aAAa2jB,QAAQ,QAAS7jB,KAAK8jB,UAAUJ,IAC7C,IAAMK,EAAiBV,IACnBU,GACAT,EAAiBS,IAMrB5jB,SD6DsB6jB,GAApB7jB,EADK,EACLA,MAAOtG,EADF,EACEA,SAETC,EAAUpB,KAEVE,EAAQ2C,cACRunB,EAAsB5Y,aAActR,EAAMiG,YAAYsL,KAAK,OANpD,EAQW9I,IAAMR,UAAS,GAR1B,mBAQNJ,EARM,KAQAqF,EARA,KAiBb,OAFyBuV,kBAAKvhB,EAAQjB,MAAOiB,EAAQwF,aAEhDa,EAIH,qBAAK9F,UAAU,UAAf,SACE,sBAAKA,UAAWP,EAAQiD,KAAxB,UACE,cAAC3C,EAAA,EAAD,IACA,cAAC6pB,EAAA,EAAD,CAAQxlB,SAAS,WAAWpE,UAAWghB,kBAAKvhB,EAAQwD,OAAQmD,GAAQ3G,EAAQkE,aAA5E,SACE,eAACkmB,EAAA,EAAD,CAAS7pB,UAAWP,EAAQkD,QAA5B,UACE,cAACqJ,EAAA,EAAD,CACE6R,KAAK,QACL9f,MAAM,UACNwW,aAAW,cACX9S,QArBa,WACvBgK,GAAQ,IAqBEzL,UAAWghB,kBAAKvhB,EAAQqE,WAAYsC,GAAQ3G,EAAQuE,kBALtD,SAOE,cAAC,IAAD,MAEF,cAACnG,EAAA,EAAD,CAAYgC,UAAU,KAAK/B,QAAQ,KAAKC,MAAM,UAAUgN,QAAM,EAAC/K,UAAWP,EAAQwE,MAAlF,sCAKJ,eAAC,IAAD,WACE,cAAC,GAAD,CAAkBmC,KAAMA,EAAMoiB,kBA7BZ,WACxB/c,GAAQ,IA4BkEgd,oBAAqBA,IACzF,uBAAMzoB,UAAWP,EAAQkF,QAAzB,UACE,qBAAK3E,UAAWP,EAAQiF,eACxB,eAAC9E,EAAA,EAAD,CAAWE,SAAS,KAAKE,UAAWP,EAAQqF,UAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEglB,OAAK,EACLxT,KAAK,IACLyT,OAAQ,WACN,OACE,cAAC,IAAD,CAAUvd,GAAG,kBAIlBqU,GAAOre,KAAI,SAAC0lB,EAAMC,GACjB,OACE,cAAC,IAAD,CAAO7R,KAAM4R,EAAK5R,KAAlB,SACE,cAAC4R,EAAKroB,UAAN,KAD2BsoB,MAKjC,cAAC,IAAD,UACE,cAACG,GAAD,SAGJ,cAAC/nB,EAAA,EAAD,CAAKypB,GAAI,EAAT,SACE,cAACpsB,EAAD,oBAjDL,cAAC2B,EAAD,CAAOC,SAAUA,KEpGbyqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpQ,MAAK,YAAkD,IAA/CqQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.5eb6e4c2.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Media Catalog UI\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}  ","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Avatar, CssBaseline, Box, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport {Copyright} from '../Copyright/Copyright';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n  const classes = useStyles();\n  const responseGoogle = (res) => {    \n    setToken(res);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <GoogleLogin\n          clientId=\"345350504609-1moo0gfi27h0jj2qaim5ed1iohgprs99.apps.googleusercontent.com\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n          scope=\"profile email https://www.googleapis.com/auth/drive\"\n        />\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>    \n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <div>Charts...</div>\n    // <React.Fragment>\n    //   <Title>Today</Title>\n    //   <ResponsiveContainer>\n    //     <LineChart\n    //       data={data}\n    //       margin={{\n    //         top: 16,\n    //         right: 16,\n    //         bottom: 0,\n    //         left: 24,\n    //       }}\n    //     >\n    //       <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n    //       <YAxis stroke={theme.palette.text.secondary}>\n    //         <Label\n    //           angle={270}\n    //           position=\"left\"\n    //           style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n    //         >\n    //           Sales ($)\n    //         </Label>\n    //       </YAxis>\n    //       <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n    //     </LineChart>\n    //   </ResponsiveContainer>\n    // </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../SideNavBar/SideNavBar';\nimport Chart from '../Chart';\nimport Deposits from '../Deposits';\nimport Orders from '../Orders';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    \n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          \n      \n    \n  );\n}","import axios from 'axios';\n\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://mediacatalog.netlify.app/.netlify/functions/server/'\n    });\n    _instance.interceptors.request.use(config => {        \n        const idToken = JSON.parse(localStorage.token).tokenId;\n        config.headers.Authorization = 'Bearer ' + idToken;\n        return config;\n    });\n    return _instance;\n}\n\nexport const apiClient = AuthenticatedClient();","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, Checkbox, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport const PlaylistSelectionDialog = ({ open, mediaId, selectedPlaylist, onClose }) => {\n    const theme = useTheme();\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        if (open) {\n            (async () => {\n                const allPlaylist = await apiClient.get('playlists');\n                setPlaylists(allPlaylist.data);\n            })();\n        }\n    }, [open]);\n    const [checked, setChecked] = React.useState(selectedPlaylist);\n\n    const handleToggle = (value) => async () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        const resource = `items/${mediaId}/playlists/${value}`;\n        if (currentIndex === -1) {\n            newChecked.push(value);\n            setChecked(newChecked);\n            await apiClient.put(resource);\n        } else {\n            newChecked.splice(currentIndex, 1);\n            setChecked(newChecked);\n            await apiClient.delete(resource);\n        }\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            maxWidth='sm'\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Playlist...</DialogTitle>\n            <DialogContent style={{ width: 240 }} dividers>\n                <FormControl>\n                    <FormGroup>\n                        {playlists.map((value) => {\n                            return (\n                                <FormControlLabel\n                                    key={value.id}\n                                    control={<Checkbox checked={checked.indexOf(value.id) !== -1}\n                                        onChange={handleToggle(value.id)}\n                                        color='primary'\n                                        name={value.id} />}\n                                    label={value.title}\n                                />\n                            );\n                        })}\n                    </FormGroup>\n                </FormControl>\n            </DialogContent>\n        </Dialog>\n    );\n}","import { Avatar, Box, Card, CardHeader, CardMedia, IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // width: 360,\n        // height: 275,\n        position: 'relative',\n        boxShadow: '0 8px 24px 0 rgba(0,0,0,0.12)',\n        // overflow: 'visible',\n        borderRadius: '1.5rem',\n        transition: '0.4s',\n        '&:hover': {\n            transform: 'scale(1.02)',\n            '& $shadow': {\n                bottom: '-1.5rem',\n            },\n            '& $shadow2': {\n                bottom: '-2.5rem',\n            },\n        },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     zIndex: 0,\n        //     display: 'block',\n        //     width: '100%',\n        //     bottom: -1,\n        //     height: '100%',\n        //     borderRadius: '1.5rem',\n        //     backgroundColor: 'rgba(0,0,0,0.08)',\n        // },\n    },\n    title: {\n        fontFamily: \"'Sen', sans-serif\",\n        fontSize: '1rem',\n        fontWeight: 800,\n        color: '#fff',\n    },\n    main: {\n        maxHeight: 385,\n        overflow: 'hidden',\n        borderTopLeftRadius: '1.5rem',\n        borderTopRightRadius: '1.5rem',\n        zIndex: 1,\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            display: 'block',\n            width: '100%',\n            height: '100%',\n            background: 'linear-gradient(to top, #014a7d, rgba(0,0,0,0))',\n        },\n    },\n    content: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        zIndex: 1,\n        padding: '1.5rem 1.5rem 1rem',\n    }, tag: {\n        display: 'inline-block',\n        fontFamily: \"'Sen', sans-serif\",\n        backgroundColor: '#ff5dac',\n        borderRadius: '0.5rem',\n        padding: '2px 0.5rem',\n        color: '#fff',\n        marginBottom: '0.5rem',\n    }, avatar: {\n        width: 36,\n        height: 36,\n    }, author: {\n        // zIndex: 1,\n        position: 'relative',\n        borderBottomLeftRadius: '1.5rem',\n        borderBottomRightRadius: '1.5rem',\n        backgroundColor: theme.palette.common.white\n    },\n    contentoverride: {\n        overflow: 'hidden'\n    },\n    titleclass: {\n        fontSize: '0.8rem',\n        fontWeight: 500\n    }\n}));\nexport const MiniPoster = ({ posterPath, backpath, title, year, isTv, tagline, mode, mediaItemId, playlistIds, action }) => {\n    const classes = useStyles();\n    const calculatedBackdrop = () => {\n        if (mode === 'portrait') {\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n        }\n\n        if (backpath)\n            return `https://image.tmdb.org/t/p/w780/${backpath}`;\n        else\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n    }\n    const calculatedPosterPath = () => {\n        return `https://image.tmdb.org/t/p/w92${posterPath}`\n    }\n\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <Box className={classes.main} position={'relative'}>\n                    <CardMedia src={calculatedBackdrop()} component=\"img\" />\n                    <div className={classes.content}>\n                        <div className={classes.tag}>{isTv ? 'TV' : 'Movie'}</div>\n                        <Typography variant={'h2'} className={classes.title}>\n                            {title} ({year})\n                    </Typography>\n                    </div>\n                </Box>\n                <CardHeader className={classes.author} classes={{\n                    content: classes.contentoverride\n                }} avatar={<Avatar src={calculatedPosterPath()} />}\n                    title={title}\n                    subheader={year}\n                    titleTypographyProps={{ noWrap: true, gutterBottom: false }}\n                    subheaderTypographyProps={{ noWrap: true }}\n                    action={action}\n                />\n            </Card>            \n        </div>\n    )\n}\n\nconst Mymenulist = () => {\n    const [show, setShow] = useState(false);\n    return (\n        <div>\n            <IconButton onClick={setShow(true)}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu open={show} onClose={() => setShow(false)}>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Playlist\n            </MenuItem>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Info\n            </MenuItem>\n            </Menu>\n        </div>\n\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Backup from '@material-ui/icons/Backup';\nimport { Avatar, CircularProgress, IconButton, ListItemAvatar, ListItemSecondaryAction } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n        paddingLeft: theme.spacing(2)\n    },\n    small: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: deepPurple[500],\n        fontSize: '0.75rem',\n\n    },\n    avatarWrapper: {\n        minWidth: 0,\n        paddingRight: theme.spacing(2)\n    }\n}));\n\nexport const CollapsableListView = ({ data, handleToggle }) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const getAvatarText = (link) => {\n        if (link) {\n            const u = new URL(link);\n            return u.host[0]?.toUpperCase();\n        }\n    }\n\n    const handleClick = () => {\n        setOpen(!open);\n        if (data.loaded || data.loading) return;\n        if (data.canExpand) handleToggle(data, open);\n    };\n\n    const SecondaryAction = () => {\n        const { canExpand, loading } = data;\n        if (canExpand) {\n            if (loading) {\n                return <CircularProgress size=\"1rem\" />\n            } else {\n                return <IconButton size={'small'}>\n                    {open ? <ExpandLess onClick={handleClick} /> : <ExpandMore onClick={handleClick} />}\n                </IconButton>\n            }\n        } else {\n            /*to={`/playlistdetails/${id}`}*/\n            const ctx = data._ctx;\n            if (ctx) {\n                const remoteUploadUrl = `/createremoteuploads?link=${encodeURIComponent(data.link)}&fileName=${encodeURIComponent(data.fileName)}&parent=${encodeURIComponent(data.parent)}&mediaId=${encodeURIComponent(ctx.mediaId)}`;\n                return <IconButton size={'small'} component={Link}\n                    to={remoteUploadUrl}><Backup /></IconButton>\n            } else {\n                return <div></div>\n            }\n        }\n    }\n\n    return (<List dense component=\"nav\" disablePadding>\n        <ListItem button onClick={handleClick}>\n            <ListItemAvatar className={classes.avatarWrapper}>\n                <Avatar className={classes.small}>{getAvatarText(data.link)}</Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={data.name} />\n            <ListItemSecondaryAction>\n                <SecondaryAction />\n            </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.nested} >\n            {\n                data?.children?.map((item) => {\n                    return <CollapsableListView data={item} handleToggle={handleToggle} />\n                })\n            }\n        </Collapse>\n    </List>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\nimport axios from 'axios';\nimport { CollapsableListView } from './CollapsableListView';\nconst prettyBytes = require('pretty-bytes');\n\nexport const SourceExplorer = ({ mediaId, rootTitle }) => {\n    const [sources, setSources] = useState([]);\n    const _ctx = {\n        mediaId,\n        rootTitle\n    }\n\n    const [data, setData] = useState({});\n    const [cursor, setCursor] = useState(false);\n\n    const onToggle = async (node, toggled) => {\n        if (cursor) {\n            cursor.active = false;\n        }\n        node.active = true;\n        if (!node.loading && !node.loaded) {\n            node.loading = true;\n            node.toggled = toggled;\n            setData(Object.assign({}, data));\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?m=true&q=${encodeURIComponent(node.link)}`;\n            const response = await axios.get(utocall);\n            node.loading = false;\n            node.loaded = true;\n\n            for (const resolvedUrl of response.data) {\n                const { isPlayable, contentType, size } = resolvedUrl;\n                const fileName = resolvedUrl.link && decodeURIComponent((new URL(resolvedUrl.link)).pathname.split('/').pop());\n\n                const anotherdata = {\n                    name: resolvedUrl.title || fileName,\n                    link: resolvedUrl.link,\n                    children: [],\n                    canExpand: !isPlayable,\n                    loaded: false,\n                    parent: resolvedUrl.parent,\n                    fileName: resolvedUrl.title || fileName,\n                    _ctx\n                }\n                if (isPlayable) {\n                    anotherdata.name = `${anotherdata.name} (${prettyBytes(parseInt(size) || 0)}) (${contentType})`;\n                }\n\n                node.children.push(anotherdata);\n            }\n        } else if (node.children) {\n            node.toggled = toggled;\n        }\n        setCursor(node);\n        setData(Object.assign({}, data));\n    }\n\n    useEffect(() => {\n        (async () => {\n            const mediaSources = await apiClient.get(`items/${mediaId}/mediasources`);\n\n            const d2 = {\n                name: rootTitle,\n                toggled: true,\n                children: [],\n                canExpand: true,\n                loaded: true,                \n                _ctx\n            }\n\n            for (const itemData of mediaSources.data) {\n                const { webViewLink, renderedTitle } = itemData;\n                d2.children.push({\n                    name: renderedTitle,\n                    link: webViewLink,\n                    children: [],\n                    canExpand: true,\n                    loaded: false,\n                    _ctx\n                });\n            }\n            setData(d2);\n        })();\n    }, [mediaId]);\n\n    return (\n        <div>\n            <CollapsableListView data={data} handleToggle={onToggle} />\n        </div>\n    )\n}","import React, { } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, useMediaQuery } from '@material-ui/core';\nimport { SourceExplorer } from './SourceExplorer';\nimport { useTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh'\n    },\n    dialogContent: {\n        paddingLeft: 0,\n        paddingRight: 0\n    }\n}));\n\nexport const ViewSourceDialog = ({ open, mediaId, rootTitle, onClose }) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreenDialog = useMediaQuery(theme.breakpoints.down('xs'));\n\n    if (open) {\n        return (<Dialog\n            fullScreen={fullScreenDialog}\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n            classes={{ paper: !fullScreenDialog && classes.dialogPaper }}\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Sources...</DialogTitle>\n            <DialogContent dividers classes={{ root: classes.dialogContent }}>\n                <SourceExplorer mediaId={mediaId} rootTitle={rootTitle} />\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n            </DialogActions>\n        </Dialog>\n        );\n    } else {\n        return <div></div>\n    }\n}","import { useState } from \"react\";\nimport { MiniPoster } from \"../MediaSourceList/MiniPoster\";\n\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { PlaylistSelectionDialog } from '../MediaCard/PlaylistSelectionDialog';\nimport { ViewSourceDialog } from '../MediaCard/ViewSourceDialog';\n\n\nexport const NewMovieCard = ({ movie }) => {\n\n    const [showPlaylistSelectionDialog, setShowPlaylistSelectionDialog] = useState(false);\n    const [showViewSourceDialog, setShowViewSourceDialog] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePlaylistMenuItemClick = () => {\n        setAnchorEl(null);\n        setShowPlaylistSelectionDialog(true)\n    }\n\n    const handleViewSourcesClick = () => {\n        setAnchorEl(null);\n        setShowViewSourceDialog(true)\n    }\n\n    const action = <div>\n        <IconButton onClick={handleClick}>\n            <MoreVertIcon />\n        </IconButton>\n        <Menu anchorEl={anchorEl} onClose={() => setAnchorEl(null)} open={Boolean(anchorEl)} >\n            <MenuItem onClick={handlePlaylistMenuItemClick}>\n                Save to Playlist\n            </MenuItem>\n            <MenuItem onClick={handleViewSourcesClick}>\n                View Sources\n            </MenuItem>\n        </Menu>\n    </div>\n\n    const playlistEl = <PlaylistSelectionDialog open={showPlaylistSelectionDialog} selectedPlaylist={movie.playlistIds.map(x => x.playlistId)}\n        mediaId={movie.id}\n        onClose={() => { setShowPlaylistSelectionDialog(false) }}\n    />\n\n    const showViewSourceEl = <ViewSourceDialog open={showViewSourceDialog}\n        mediaId={movie.id}\n        rootTitle={movie.title}\n        onClose={() => { setShowViewSourceDialog(false) }}\n    />\n\n\n    return <div>\n        <MiniPoster backpath={movie.backdropPath}\n            isTv={movie.itemType === 'tv'}\n            posterPath={movie.posterPath}\n            title={movie.title}\n            year={movie.year}\n            tagline={movie.tagline}\n            mediaItemId={movie.id}\n            playlistIds={movie.playlistIds}\n            mode=\"portrait\"\n            action={action}\n        />\n        {playlistEl}\n        {showViewSourceEl}\n    </div>\n}","import React from 'react';\nimport { Grid, LinearProgress, CircularProgress } from '@material-ui/core';\nimport MovieCard from \"../MediaCard/MediaCardComponent\";\nimport { NewMovieCard } from '../MediaCard/NewMovieCard';\n\n\nexport const MediaCardListComponent = ({ items, isLoading }) => {\n    \n    // const [movies, setMovies] = React.useState(items);\n\n    const deleteHandler = (mediaId) => {\n        const moviesAfterRemove = items.filter(x=>x.id!=mediaId);\n        // setMovies(moviesAfterRemove);        \n    };\n    const movieColumns = items ? items.map((movie) => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={movie.id}>\n            <NewMovieCard movie={movie}></NewMovieCard>\n            {/* <MovieCard movie={movie} handleItemRemove={deleteHandler} /> */}\n        </Grid>\n    )) : null;\n    if(isLoading){\n        return <CircularProgress disableShrink />\n    }\n    else if (movieColumns?.length) {\n        return (\n            <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={3}>\n                {movieColumns || \"hello\"}\n            </Grid>\n        );\n    } else {\n        return <div>No items found</div>\n    }\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { debounce } from '@material-ui/core';\nimport {MediaCardListComponent} from '../MediaCardList/MediaCardListComponent';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchbar: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function MediaDirectory() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const classes = useStyles();\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const searchQuery = search;\n      setLoading(true);\n      const result = await apiClient.get(`items?q=${searchQuery}`);\n      if (search === searchQuery) {\n        setData(result.data);\n        setLoading(false);\n      }\n    })();\n  }, [search]);\n\n  return (\n    <div>\n      <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n        onChange={debounce(handleOnChange, 250)} \n        defaultValue={search} className={classes.searchbar} />\n      <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n    </div>\n  );\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        const columns = [\"ts\", \"requestId\", \"fileName\", \"sequence\", \"status\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false\n        };\n\n        const { error, isLoaded, data} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Remote Url Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}\n\nexport default myComponent;","import React, { useState, useEffect } from 'react';\nimport { MediaCardListComponent } from '../MediaCardList/MediaCardListComponent'\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\nimport { Breadcrumbs, Typography, makeStyles, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    breadcrumb: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const PlaylistDetails = ({ playlistId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const classes = useStyles();\n    const [title, setTitle] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            if (['extramovies', 'hdhub'].includes(playlistId)) {\n                setTitle(playlistId);\n            } else {\n                const playlistDetails = await apiClient.get(`playlists/${playlistId}`);\n                setTitle(playlistDetails.data.title);\n            }\n            const result = await apiClient.get(`playlists/${playlistId}/items?pageSize=100`);\n            setData(result.data.items);\n            setLoading(false);\n        })();\n    }, [playlistId]);\n\n    return (\n        <div>\n            <Breadcrumbs className={classes.breadcrumb}>\n                {/* <Link color=\"primary\" to='/playlist'>Playlists</Link> */}\n                <Button color='primary' component={Link} to='/playlist'>Playlists</Button>\n                <Typography>{title}</Typography>\n            </Breadcrumbs>\n            <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n        </div>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Breadcrumbs, List, ListItem, ListItemText, ListSubheader, Paper, Typography } from '@material-ui/core';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    navlink: {\n        textDecoration: 'none',\n        '& :visited': {\n            color: 'red'\n        }\n    }, breadcrumb: {\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n}));\n\n\n\nexport const Playlist = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [rows, setRows] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        (async () => {\n            const response = await apiClient.get('/playlists?includeSystemDefined=true');            \n            setRows(response.data);\n            setIsLoading(false);\n        })();\n    }, []);\n\n    return <div>\n        <Breadcrumbs className={classes.breadcrumb}>\n            <Typography>Playlist</Typography>\n        </Breadcrumbs>\n        <Paper className={classes.paper}>\n            <List component=\"nav\" className={classes.root} aria-label=\"Playlist\">\n                {\n                    isLoading ? <div>Loading...</div> :\n                        rows?.map(({ id, title, ts }) => {\n                            return <ListItem key={id} button component={Link} to={`/playlistdetails/${id}`}>\n                                <ListItemText primary={title}\n                                    secondary={dayjs(ts).fromNow()}\n                                />\n                            </ListItem>\n                        })\n                }\n            </List>\n        </Paper>\n\n    </div>\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PlaylistDetails } from './playlistDetails'\nimport { Playlist } from '../Playlist/playlist'\nexport const PlaylistPage = () => {\n    let { id } = useParams();\n    if (id) {\n        return (\n            <PlaylistDetails playlistId={id}></PlaylistDetails>\n        );\n    } else {\n        return (\n            <Playlist></Playlist>\n        );\n    }\n}","import React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nexport default class myComponent extends React.Component {\n    constructor(props) {\n        // debugger;\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            zipFileUrl: props.defaultZipFileUrl,\n            onSelectionChange: props.onSelectionChange\n        };\n\n    }\n\n    async componentDidMount() {\n        const fetchUrl = `https://mediacatalogdirectorylisting.herokuapp.com/api/zip/listFiles?zipFileUrl=${encodeURIComponent(this.state.zipFileUrl)}`;\n        const response = await fetch(fetchUrl);\n        try {\n            const responseAsJson = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: responseAsJson\n            });\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n\n    }\n\n    handleSelectionChange = (p, q, r, s) => {\n        const selectedData = q.map(i => this.state.data[i.index]);\n        this.state.onSelectionChange && this.state.onSelectionChange(selectedData);\n    }\n\n    render() {\n        const columns = [\"path\", \"uncompressedSize\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false,\n            search: false,\n            viewColumns: false,\n            filter: false,\n            pagination: false,\n            onRowSelectionChange: this.handleSelectionChange\n        };\n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: We have some errrors</div>;\n        } else if (!isLoaded) {\n            return <div>Fetching files inside zip file...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { apiClient } from '../../ApiClient/MediaCatalogNetlifyClient';\n\n\nexport const FinalStep = ({ fileUrl, selectedFiles, parentUrl, title, year, mediaType }) => {\n    const [error, setError] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const accessToken = JSON.parse(localStorage.token).accessToken;\n    useEffect(() => {\n        (async () => {\n            const files = selectedFiles.map(i => i.path);\n            const payload = {\n                fileUrl,\n                parentUrl,\n                files,\n                title, \n                year,\n                mediaType,\n                accessToken\n            };\n            const response = await apiClient.post('remoteUrlUploadRequest', payload);            \n            setIsLoaded(true);\n        })()\n    }, [selectedFiles, fileUrl]);\n    \n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Submitting Request...</div>;\n    } else {\n        return <span>Success!</span>;\n    }\n}\n\n// React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             error: null,\n//             isLoaded: false,\n//             data: [],\n//             selectedFiles: props.selectedFiles,\n//             zipFileUrl: props.zipFileUrl\n//         };\n//     }\n\n//     async componentDidMount() {        \n//         const files = this.state.selectedFiles.map(i => i.path);\n//         const payload = {\n//             fileUrl: this.state.zipFileUrl,\n//             files\n//         };\n//         var headers = new Headers();\n//         const idToken = JSON.parse(localStorage.token).tokenId;\n//         headers.append('Authorization', 'Bearer ' + idToken);\n//         headers.append(\"content-type\", \"application/json\");\n//         const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n//         try {\n//             const response = await fetch(apiUrl, { headers: headers, method: 'POST', body: JSON.stringify(payload) });\n//             if (response.ok) {\n//                 const tempdata = await response.json();\n\n//                 this.setState({\n//                     isLoaded: true,\n//                     data: tempdata\n//                 });\n//             } else {\n//                 throw Error(`Unexpected response code receieved ${response.status}`);\n//             }\n//         } catch (error) {\n//             this.setState({\n//                 error: error\n//             });\n//         }\n//     }\n//     render() {\n//         const { error, isLoaded } = this.state;\n//         if (error) {\n//             return <div>Error: {error.message}</div>;\n//         } else if (!isLoaded) {\n//             return <div>Submitting Request...</div>;\n//         } else {\n//             return <span>Success!</span>;\n//         }\n//     }\n// }","import { React, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ChooseFilesToUpload from './CreateNewRequest/ChooseFilesToUpload';\nimport { FinalStep } from './CreateNewRequest/FinalStep';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { TextField, Paper, Typography, Stepper, Step, StepLabel, StepContent, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\n\n// import FormInput from \"./../Controls/index\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Enter the file URL (any types including zip)', 'Choose Files to Upload', 'Finish'];\n}\n\nexport const CreateNewRequest = () => {\n    const { control, register, handleSubmit, errors } = useForm();\n    const onSubmit = data => { alert('hello'); console.log(data); }\n\n    const classes = useStyles();\n    let query = useQuery();\n\n    // const [linkQueryParamValue, setLink] = useState(query.get('link') || '');\n    const [fileName, setFileName] = useState(query.get('fileName') || '');\n    const [parentUrl, setParentUrl] = useState(query.get('parent') || '');\n\n    const [mediaType, setMediaType] = useState();\n    const [title, setTitle] = useState();\n    const [year, setYear] = useState();\n\n    const mediaId = query.get('mediaId');\n    const [activeStep, setActiveStep] = useState(0);\n    const [fileUrl, setFileUrl] = useState(query.get('link'));\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [rawUpload, setRawUpload] = useState(true);\n    const fileNameExtension = fileName.split('.').pop();\n\n    useEffect(() => {\n        if (mediaId) {\n            (async () => {\n                const mediaDetails = await apiClient.get(`items/${mediaId}`);\n                const { itemType, title, year } = mediaDetails.data;\n                setMediaType(itemType);\n                setYear(year);\n                setTitle(title);\n            })();\n        }\n    }, [mediaId]);\n\n    const handleFileSelection = (e) => {\n        setSelectedFiles(e);\n    };\n\n    const steps = ['Enter the file URL (any types including zip)', 'Choose Files to Upload', 'Finish'];\n\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return <div>\n                    <TextField name=\"fileUrl\" type=\"URL\" defaultValue={fileUrl} fullWidth onChange={e => setFileUrl(e.target.value)} />\n                    <p>Parent: {parentUrl}</p>\n                    <p>Media Type: {mediaType}</p>\n                    <p>Title: {title}</p>\n                    <p>Year: {year}</p>\n                    <FormControlLabel control={<Checkbox name=\"rawUpload\"\n                        checked={rawUpload}\n                        onChange={ev => setRawUpload(ev.target.checked)}\n                        disabled={fileNameExtension !== 'zip'} />} label=\"Raw Upload\" />\n                </div>;\n            case 1:\n                return <ChooseFilesToUpload defaultZipFileUrl={fileUrl} onSelectionChange={handleFileSelection} />;\n            case 2:\n                return <FinalStep selectedFiles={selectedFiles} fileUrl={fileUrl} parentUrl={parentUrl}\n                    mediaType={mediaType}\n                    title={title}\n                    year={year}\n                />;\n            default:\n                return 'unknown step'\n        }\n    }\n\n    const handleNext = () => {\n        if (activeStep === 0 && rawUpload) {\n            //put validation\n            setSelectedFiles([{ path: fileName }]);\n            setActiveStep(2);\n        }\n        else\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        if (activeStep === 2 && rawUpload)\n            setActiveStep(0)\n        else\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                                        </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n                        </Button>\n                    </Paper>\n                )}\n            </div>\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\n\n// import './Card.scss';\nimport { Card, CardContent, Typography, CardMedia, CardHeader, Avatar, IconButton, Grid, Divider } from '@material-ui/core';\nimport { makeStyles, rgbToHex, withStyles } from '@material-ui/core/styles';\n\nlet numeral = require('numeral');\nlet backdropIMG;\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: '20px',\n        display: 'flex',\n        background: 'rgba(0,0,0,.85)'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        flex: '1 0 auto',\n        color: 'white',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,.85) 15%,rgba(0,0,0,.2) 40%,#000 90%)',\n        minHeight: '500px'\n    },\n    posterContainer: {\n        textAlign: 'center'\n    },\n    poster: {        \n        width: '120px',\n        [theme.breakpoints.up('md')]:{\n            width: '200px'\n        }\n    },\n    tagline: {\n        display: 'block',\n        paddingBottom: '0.25em',\n        color: 'limeGreen',\n        fontSize: '1.3em'\n    },\n    metadata: {\n        display: 'block',\n        color: 'limeGreen',\n    },\n    additionalDetails: {\n        margin: \"35px 0 20px\"\n    }\n}));\n\nexport default function MovCard({ data, test }) {\n    const classes = useStyles();\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\n    let rating = '';\n\n    // conditional statements for no data\n    if (data.vote === 'undefined' || data.vote === 0) {\n        rating = noData\n    } else {\n        rating = data.vote\n    };\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n        totalRevenue = noData\n    } else {\n        totalRevenue = numeral(data.revenue).format('($0,0)');\n    };\n\n    if (data.poster == null) {\n        posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    const styleofbg = `url(${backdropIMG})`;\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <div className={classes.details} style={{ backgroundImage: styleofbg }}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                            {data.original_title}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" className={classes.tagline}>\n                            {data.tagline}\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            <Grid container>\n                                <Grid item xs={9}>\n                                    {data.overview}\n                                    <Grid container className={classes.additionalDetails}>\n                                        <Grid item md={3}>\n                                            Original Release: <span className={classes.metadata}>{data.release}</span>\n                                    Box Office: <span className={classes.metadata}>{totalRevenue}</span>\n                                        </Grid>\n                                        <Grid item md={3}>\n                                            Running Time: <span className={classes.metadata}>{data.runtime} mins</span>\n                                Rating: <span className={classes.metadata}>{rating}</span>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={3} className={classes.posterContainer}>\n                                    <img src={posterIMG} className={classes.poster}></img>\n                                    {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n                                </Grid>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n                </div>\n                {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n            </Card>\n        </div>\n    );\n\n\n    function nestedDataToString(nestedData) {\n        let nestedArray = [],\n            resultString;\n        if (nestedData !== undefined) {\n            nestedData.forEach(function (item) {\n                nestedArray.push(item.name);\n            });\n        }\n        resultString = nestedArray.join(', '); // array to string\n        return resultString;\n    };\n\n}\n","import React, { Component, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Card from './Card';\n\nclass myComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null,\n            imdbId: 'tt0468569'\n        };\n    }\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return <div id=\"createMovieContainer000001\">\n            <TextField name=\"imdbId\" label=\"IMDB Id\" placeholder=\"Enter IMDB Id\" fullWidth\n                onChange={this.fetchMovieID} defaultValue={this.state.imdbId} />            \n            <Card data={this.state} />\n        </div>\n    }\n\n\n    // the api request function\n    fetchApi(url) {\n\n        fetch(url).then((res) => res.json()).then((data) => {\n            // update state with API data\n            this.setState({\n                movieID: data.id,\n                original_title: data.original_title,\n                tagline: data.tagline,\n                overview: data.overview,\n                homepage: data.homepage,\n                poster: data.poster_path,\n                production: data.production_companies,\n                production_countries: data.production_countries,\n                genre: data.genres,\n                release: data.release_date,\n                vote: data.vote_average,\n                runtime: data.runtime,\n                revenue: data.revenue,\n                backdrop: data.backdrop_path\n            })\n        })\n    }\n\n    findMovieIdByImdbId = async (v) => {\n        const imdbMovieApiUrl = `https://api.themoviedb.org/3/find/${v}?&api_key=cfe422613b250f702980a3bbf9e90716&external_source=imdb_id`;\n        const response = await fetch(imdbMovieApiUrl);\n        const responseJson = await response.json();\n        return responseJson.movie_results && responseJson.movie_results[0] && responseJson.movie_results[0].id;\n    }\n\n    fetchMovieID = async (e) => {\n        const imdbId = e.target.value;\n        this.setState({ imdbId: imdbId });\n        const movieID = await this.findMovieIdByImdbId(imdbId);\n        if (movieID) {\n            let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n            this.fetchApi(url);\n        }\n    }\n\n    async componentDidMount() {        \n        const movieID = await this.findMovieIdByImdbId(this.state.imdbId);\n        let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n        this.fetchApi(url)\n    }\n}\n\nexport default myComponent;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fab, Tooltip, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ErrorIcon from '@material-ui/icons/Edit';\nimport Tree from 'react-d3-tree';\nimport axios from 'axios';\nimport clone from 'clone';\nimport { Link, useParams } from 'react-router-dom';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonError: {\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }, iconButton: {\n        padding: 10,\n    }, input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n\nexport const MediaSourceExplorerComponent = ({ items, isLoading }) => {\n    let { sourceid } = useParams();\n    let pms = useParams();\n    console.log(pms, sourceid);\n\n    useEffect(() => {\n        console.log('calling me..');\n        (async () => {\n            console.log('calling me anotehr..');\n            const mediaSourceResponse = await apiClient.get(`mediasources/${sourceid}`);\n            const { webViewLink } = mediaSourceResponse.data;\n            console.log(webViewLink)\n            setRootUrl(webViewLink);\n            setTreeRootUrl();\n        })();\n    }, []);\n\n    const classes = useStyles();\n    const uniqueid = () => { return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase(); }\n    const [rootUrl, setRootUrl] = useState('');\n\n    const handleRootUrlOnChange = (event) => {\n        const { value } = event.target;\n        setRootUrl(value);\n    };\n\n    const setTreeRootUrl = () => {\n        setData({\n            name: rootUrl,\n            attributes: {\n                url: rootUrl,\n                id: uniqueid()\n            }\n        })\n    };\n\n    const firstuniqueid = uniqueid();\n    const initialData = {\n        name: rootUrl,\n        attributes: {\n            url: rootUrl,\n            id: firstuniqueid\n        }\n    };\n\n\n    const [data, setData] = useState(initialData);\n\n    const renderForeignObjectNode = ({\n        nodeDatum,\n        toggleNode,\n        foreignObjectProps\n    }) => (\n        <foreignObject {...foreignObjectProps} >\n            <div className={classes.wrapper}>\n                <Tooltip title={<React.Fragment>\n                    Name: {nodeDatum.name}\n                    <br></br>\n                        Url: {nodeDatum.attributes.url}\n                </React.Fragment>}>\n                    <Fab\n                        color=\"primary\"\n                        className={nodeDatum.attributes.hasErrors && classes.buttonError}\n                        onClick={() => {\n                            if (!nodeDatum.attributes.isTraversed) {\n                                if (!nodeDatum.attributes.loading) {\n                                    nodeDatum.attributes.hasErrors = false;\n                                    nodeDatum.attributes.loading = true;\n                                    onNodeClickCallback(nodeDatum);\n                                }\n                            }\n                            toggleNode();\n                        }}\n                    >\n                        {nodeDatum.attributes.hasErrors && <ErrorIcon />}\n                    </Fab>\n                </Tooltip>\n                {nodeDatum.attributes.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n            </div>\n        </foreignObject>\n    );\n\n    const onNodeClickCallback = async (ctx) => {\n        if (ctx.attributes.isTraversed) return;\n        const nextData = clone(data);\n        const leafnode = findNodeFromName(nextData, ctx.attributes.id);\n        try {\n            leafnode.attributes.hasErrors = false;\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?q=${encodeURIComponent(ctx.attributes.url)}`;\n            const response = await axios.get(utocall);\n            const children = [];\n            for (const resolvedUrl of response.data) {\n                const anotherdata = {\n                    name: resolvedUrl.title, attributes: {\n                        url: resolvedUrl.link,\n                        id: uniqueid()\n                    }\n                }\n                children.push(anotherdata);\n            }\n            leafnode.attributes.isTraversed = true;\n            leafnode.children = children;\n        } catch (error) {\n            leafnode.attributes.hasErrors = true;\n            leafnode.attributes.isLoading = false;\n        }\n        setData(nextData);\n    };\n\n    function findNodeFromName(parentNode, keyName) {\n        if (parentNode.attributes.id === keyName) {\n            return parentNode;\n        } else if (parentNode.children?.length) {\n            for (const childelement of parentNode.children) {\n                const foundele = findNodeFromName(childelement, keyName);\n                if (foundele) return foundele;\n            }\n        }\n        return null;\n    }\n\n    const nodeSize = { x: 200, y: 200 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: -34, y: -34 };\n\n    return <div>\n\n        <div id=\"treeWrapper\" style={{ height: '40em' }}>\n            {rootUrl}\n            <TextField label=\"Root Url\" defaultValue={rootUrl} placeholder=\"Root Url\" fullWidth InputProps={{\n                endAdornment: (<InputAdornment>\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick={setTreeRootUrl}>\n                        <SearchIcon />\n                    </IconButton>\n                </InputAdornment>)\n            }}\n                onChange={handleRootUrlOnChange} />\n            <Tree data={data}\n                orientation='vertical'\n                onNodeClick={onNodeClickCallback}\n                nodeSize={nodeSize}\n                translate={{ x: 100, y: 100 }}\n                renderCustomNodeElement={(rd3tProps) =>\n                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                }\n            />\n        </div>\n    </div>\n}","import { Typography } from '@material-ui/core';\nexport default function SourceTypeComponent({ value }) {\n    const getRenderValue = () => {\n        switch (value) {\n            case 'hdhub':\n                return 'HH'                \n            case 'extramovies':\n                return 'EM'                \n            default:\n                return value                \n        }\n    }    \n    return <Typography variant=\"body2\" color=\"textSecondary\">{getRenderValue()}</Typography>\n}","import axios from 'axios';\nconst apiKey = 'cfe422613b250f702980a3bbf9e90716';\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://api.themoviedb.org/3'\n    });\n\n    return {\n        findMovie: (movieId) => {\n\n        },\n        findImdbId: async (tmdbId, isTv) => {\n            let apiUrl = `${isTv ? 'tv' : 'movie'}/${tmdbId}?api_key=${apiKey}&language=en-US&append_to_response=external_ids`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data.external_ids.imdb_id;\n        },\n        search: async (q, isTv) => {\n            let apiUrl = `search/${isTv ? 'tv' : 'movie'}?api_key=${apiKey}&language=en-US&&query=${encodeURIComponent(q)}`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data;\n        }\n    }\n}\nexport const tmdbClient = AuthenticatedClient();","import { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogActions, debounce, Tabs, Tab } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport TvIcon from '@material-ui/icons/Tv';\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\n\nexport const SearchMovieDialog = ({ handleSelect, show, query, isTv }) => {\n    // const [open, setOpen] = useState(show);\n    const [searchQuery, setSearchQuery] = useState(query);\n    const [searchTv, setSearchTv] = useState(isTv);\n    const [results, setResults] = useState([]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    const classes = useStyles();\n    //const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => {\n        handleSelect(null);\n    };\n\n    const handleItemSelectionClose = () => {\n        handleSelect({\n            id: selectedId,\n            isTv: searchTv\n        });\n    };\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setSearchQuery(value);\n    };\n\n    useEffect(() => {\n        if (!searchQuery || !show) return;\n        (async () => {\n            console.log(searchTv);\n            const { results } = await tmdbClient.search(searchQuery, searchTv);\n            setResults(results);\n        })();\n    }, [searchQuery, show, searchTv]);\n\n    const [value, setValue] = useState(isTv ? 1 : 0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setSearchTv(newValue === 1);\n        setSelectedId(0);\n    };\n\n    return (<div>\n        <Dialog open={show}\n            fullWidth={true}\n            classes={{ paper: classes.dialogPaper }}\n            onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {/* <DialogTitle id=\"form-dialog-title\">Search</DialogTitle> */}\n            <DialogTitle style={{ padding: 0 }}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\">\n                    <Tab icon={<MovieIcon />} label=\"MOVIES\" />\n                    <Tab icon={<TvIcon />} label=\"TV\" />\n                </Tabs>\n            </DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    defaultValue={searchQuery}\n                    fullWidth\n                    onChange={debounce(handleOnChange, 250)}\n                />\n\n                {/* <FormControlLabel control={<Checkbox defaultChecked={searchTv}\n                    onChange={handleSetTv} />} label=\"TV\" /> */}\n                {\n                    results && (<List component=\"nav\">\n                        {results.map((value) => {\n                            return (<ListItem\n                                key={value.id}\n                                button\n                                selected={selectedId === value.id}\n                                onClick={() => setSelectedId(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={value.poster_path && `https://image.tmdb.org/t/p/w92${value.poster_path}`}></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={`${value.title || value.name}`}\n                                    secondary={(value.release_date || value.first_air_date)?.substr(0, 4)} />\n                            </ListItem>)\n                        })}\n                    </List>)\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleItemSelectionClose} color=\"primary\" disabled={selectedId === 0}>\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n    </div>);\n}","import {\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemIcon, ListItemText\n} from \"@material-ui/core\"\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\nexport const SimilarMovieAssign = ({ show, mediaItemId, query, handleSelect, items }) => {\n    const classes = useStyles();\n    \n    \n    const [checked, setChecked] = useState([]);\n    const handleClose = () => {\n        handleSelect();\n    };\n\n    useEffect(()=>{\n        const checkedItems = items?.map(x => x.id) || [];\n        setChecked(checkedItems)\n    }, [items]);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const assignSelection = async () => {\n        for (const mediaSourceId of checked) {\n            await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        }\n        handleSelect(checked);\n    }\n\n    return (\n        <div>\n            <Dialog open={show}\n                fullWidth={true}\n                classes={{ paper: classes.dialogPaper }}\n                onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle>\n                    Related media items to {query}\n                </DialogTitle>\n                <DialogContent dividers>\n                    {\n                        items && (<List>\n                            {items.map((value) => {\n                                const labelId = `checkbox-list-label-${value.id}`;\n                                console.log('value is ', value);\n                                return (<ListItem key={value.id} button onClick={handleToggle(value.id)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={checked.indexOf(value.id) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={value.renderedTitle} />\n                                </ListItem>)\n                            })}\n                        </List>)\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={assignSelection} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import { Avatar, Box, Card, CardContent, CardHeader, CardMedia, Chip, Paper, Tooltip, Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { SearchMovieDialog } from './SearchMovieDialog'\nimport { MiniPoster } from './MiniPoster';\nimport { SimilarMovieAssign } from './SimilarMovieAssign';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: 320,\n        height: 162\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 0.65\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        // width: 151,\n        display: 'flex',\n        flex: 0.35\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    posterMedia: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 1)',\n        padding: 0,\n        borderRadius: '1.5rem'\n    },\n}))(Tooltip);\n\nexport const MovieFetchComponent = ({ value, isTv, mediaSourceId, mediaItemId, handleMediaAssignment\n}) => {\n    //const posterSize = 'w185';  //w92\n    const avatarSize = 'w92';  //w92\n    const posterSize = 'w185';  //w92\n    const backdropSize = 'w300';  //w92\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [backdropPath, setBackdropPath] = useState('');\n    const [posterPath, setPosterPath] = useState('');\n    const [posterUrl, setPosterUrl] = useState('');\n    const [title, setTitle] = useState(value);\n    const [year, setYear] = useState('');\n    const [overview, setOverview] = useState('');\n    const [hasResult, setHasResult] = useState(false);\n    const [result, setResult] = useState();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [showDialog, setShowDialog] = useState(false);\n\n    const [similarMediaResults, setSimilarMediaResults] = useState([]);\n\n\n    const [similarMediaItemShowDialog, setSimilarMediaItemShowDialog] = useState(false);\n\n    useEffect(() => {\n        if (!value) return;\n        (async () => {\n            const { results } = await tmdbClient.search(value, isTv);\n            if (results[0]) {\n                setHasResult(true);\n                setResult(results[0]);\n                setTitle(results[0].title || results[0].name);\n                setAvatarUrl(`https://image.tmdb.org/t/p/${avatarSize}${results[0].poster_path}`);\n                setPosterUrl(`https://image.tmdb.org/t/p/${posterSize}${results[0].poster_path}`);\n\n                //https://image.tmdb.org/t/p/original/hkBaDkMWbLaf8B1lsWsKX7Ew3Xq.jpg\n\n                setBackdropPath(results[0].backdrop_path);\n                setPosterPath(results[0].poster_path);\n\n\n\n                setYear(results[0].release_date?.substr(0, 4) || results[0].first_air_date?.substr(0, 4));\n                setOverview(results[0].overview);\n            }\n            setLoading(false);\n        })();\n    }, [value]);\n\n    const deleteIcon = hasResult ? <DoneIcon /> : null\n    const innerDeleteHandler = async () => {\n        const { id } = result;\n        await assigncurrentmedia(id, isTv);\n    }\n\n    const assigncurrentmedia = async (id, isthisitemtv) => {\n        let mediaItemId;\n        try {\n            const response = await apiClient.get(`/items/byExternalId/${id}?type=tmdb`);\n            mediaItemId = response.data.id;\n        } catch (error) {            \n            const response = await apiClient.post(`items/byExternalId/${id}?type=tmdb&tmdbHint=${isthisitemtv ? 'tv' : 'movie'}`);\n            mediaItemId = response.data.id;\n        }\n        await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        handleMediaAssignment && handleMediaAssignment([{ mediaItemId, mediaSourceId }]);\n\n        const similarMediaResponse = await apiClient.get(`mediasources?parsedTitle=${encodeURIComponent(value)}&onlyPendingMediaAssignment=true`);\n        if (similarMediaResponse.data.items && similarMediaResponse.data.items.length > 0) {\n            setSimilarMediaResults(similarMediaResponse.data.items);\n            setSimilarMediaItemShowDialog(true);\n        }\n    }\n\n    const showDialogHandler = () => {\n        setShowDialog(true);\n    }\n\n    const handleSelectSearchDialog = async (outputofdialog) => {\n        setShowDialog(false);\n        if (outputofdialog) {\n            await assigncurrentmedia(outputofdialog.id, outputofdialog.isTv);\n        }\n    }\n\n    const handleSelectAssignMovieDialog = (assignedItems) => {\n        setSimilarMediaItemShowDialog(false);\n        if (assignedItems) {\n            const payloadToSend = assignedItems.map(mediaSourceId => { return { mediaItemId, mediaSourceId } });\n            handleMediaAssignment && handleMediaAssignment(payloadToSend);\n        }\n    }\n\n    const miniPoster = <MiniPoster title={title} backpath={backdropPath} isTv={isTv} year={year} posterPath={posterPath} />\n    const chip = <Chip\n        size='medium'\n        avatar={<Avatar src={avatarUrl} />}\n        color=\"primary\" label={title || value}\n        variant=\"outlined\"\n        onClick={showDialogHandler}\n        onDelete={hasResult ? innerDeleteHandler : null}\n        deleteIcon={deleteIcon}\n        style={{ maxWidth: 240 }}\n        clickable></Chip>\n\n    if (mediaItemId) {\n        return <div>\n            <SimilarMovieAssign show={similarMediaItemShowDialog} mediaItemId={mediaItemId} query={value}\n                items={similarMediaResults}\n                handleSelect={handleSelectAssignMovieDialog} />\n            <span>{mediaItemId}</span>\n        </div>\n    } else if (loading) {\n        return <div>Loading...</div>;\n    }\n    else if (hasResult) {\n        return <div>\n            {/* <div onClick={() => setSimilarMediaItemShowDialog(true)} > Show</div> */}\n            <SearchMovieDialog show={showDialog} query={title} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            <LightTooltip interactive title={miniPoster} enterDelay={500} placement=\"right\" arrow>\n                {chip}\n            </LightTooltip></div>\n    } else {\n        return <div>\n            <SearchMovieDialog show={showDialog} query={title || value} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            {chip}\n        </div>\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColumns } from '@material-ui/data-grid';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { debounce, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SourceType from \"./SourceTypeComponent\";\nimport { MovieFetchComponent } from \"./MovieFetchComponent\";\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const MediaSourceListComponent = () => {\n    const [page, setPage] = useState(0);\n    const [pageSize] = useState(20);\n    const [rows, setRows] = useState([]);\n    const [rowCount, setRowCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [pendingSelection, setPendingSelection] = useState('Pending');\n    const classes = useStyles();\n\n    const fxhandleMediaAssignment = async (result) => {\n        const updatedRows = rows.map(x => {\n            const matchingResult = result.find(y => y.mediaSourceId === x.id);\n            if (matchingResult) {\n                x.mediaItemId = matchingResult.mediaItemId;\n            }\n            return x;\n        })\n        setRows(updatedRows);\n    };\n\n    const columns: GridColumns = [\n        { field: 'renderedTitle', headerName: 'Title', width: 340, sortable: false, flex: 1 },\n        {\n            field: 'parserInfo', headerName: 'Parser Title', sortable: false, width: 280, renderCell: ({ value, row }) => {\n                return <MovieFetchComponent\n                    value={value?.title || row.renderedTitle} isTv={value?.isTv}\n                    mediaSourceId={row.id}\n                    mediaItemId={row.mediaItemId}\n                    handleMediaAssignment={fxhandleMediaAssignment}\n                />\n            }\n        },\n        {\n            field: 'crawlerType', headerName: 'Source', sortable: false, width: 80, renderCell: ({ value }) => {\n                return <SourceType value={value}></SourceType>\n            }\n        },\n        { field: 'created', headerName: 'Created', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() },\n        { field: 'modified', headerName: 'Last Modified', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() }\n    ];\n\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setPage(0);\n        setSearch(value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const onlyPending = pendingSelection === 'Pending';\n            const response = await apiClient.get(`/mediasources?pageSize=${pageSize}&pageNumber=${page + 1}&q=${search}&onlyPendingMediaAssignment=${onlyPending}`);\n            setRowCount(response.data.total);\n            setRows(response.data.items);\n            setLoading(false);\n        })();\n    }, [page, search, pendingSelection, pageSize]);\n\n    const handlePageChange = (params) => {\n        const { page } = params;\n        setPage(page);\n    }\n\n    return <div>\n        <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n            onChange={debounce(handleOnChange, 250)}\n            defaultValue={search} className={classes.searchbar} />\n        <ToggleButtonGroup value={pendingSelection} exclusive onChange={(ev, val) => setPendingSelection(val)}>\n            <ToggleButton value=\"All\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"Pending\" >\n                Pending\n            </ToggleButton>\n        </ToggleButtonGroup>\n\n        <DataGrid\n            page={page}\n            autoHeight={true}\n            rows={rows}\n            columns={columns}\n            pageSize={pageSize}\n            paginationMode='server'\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowCount={rowCount}\n            checkboxSelection={false}\n            disableColumnMenu\n            disableColumnSelector\n            disableSelectionOnClick\n        />\n    </div>\n}","import Dashboard from './Dashboard/Dashboard';\nimport Preferences from './Preferences/Preferences';\nimport MediaDirectory from './MediaDirectory/MediaDirectory';\nimport RemoteUrlUpload from './RemoteUrlUpload/RemoteUrlUpload';\nimport { PlaylistPage } from './Playlist/playlistComponent';\nimport {CreateNewRequest} from './RemoteUrlUpload/CreateNewRequest';\nimport CreateMovieByImdb from './CreateMovie/CreateMovieByImdb';\nimport { MediaSourceExplorerComponent } from './MediaSourceExplorer/MediaSourceExplorerComponent';\nimport { MediaSourceListComponent } from './MediaSourceList/MediaSourceListComponent';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nconst Routes = [\n    {\n        path: '/dashboard',\n        sidebarName: 'Dashboard',\n        component: Dashboard,\n        icon: DashboardIcon\n    },\n    {\n        path: '/preferences',\n        sidebarName: 'Preferences',\n        component: Preferences,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/movies',\n        sidebarName: 'Media Items',\n        component: MediaDirectory,\n        icon: MovieIcon\n    },\n    {\n        path: '/remoteuploads',\n        sidebarName: 'Remote Url Upload',\n        component: RemoteUrlUpload,\n        icon: CloudUploadIcon\n    },\n    {\n        path: '/createremoteuploads',\n        sidebarName: 'New Remote Url Upload',\n        component: CreateNewRequest,\n        icon: AddIcon\n    },\n    {\n        path: '/playlist',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon\n    },\n    {\n        path: '/playlistdetails/:id',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon,\n        hide: true\n    },\n    {\n        path: '/movie/new',\n        sidebarName: 'New Movie by IMDB Id',\n        component: CreateMovieByImdb,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/explorer/:sourceid',\n        sidebarName: 'Media Source Explorer',\n        component: MediaSourceExplorerComponent,\n        icon: AccountTreeIcon,\n        hide: true\n    },\n    {\n        path: '/source',\n        sidebarName: 'Media Source',\n        component: MediaSourceListComponent,\n        icon: AccountTreeIcon\n    }\n];\n\nexport default Routes;","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { List, ListItemIcon, ListItemText, ListItem } from '@material-ui/core';\nimport Routes from '../Routes';\n\nconst SideNavBar = ({location, onListItemClick}) => {\n  const activeRoute = (routeName) => {\n    return location?.pathname === routeName ? true : false;\n  }\n\n  return (<div>\n    <List>\n      {Routes.filter(x => !x.hide).map((prop, key) => {\n        return (\n          <ListItem component={Link} button\n            to={prop.navurl || prop.path}\n            style={{ textDecoration: 'none' }}\n            key={key}\n            onClick={onListItemClick}\n            selected={activeRoute(prop.path)}>\n            <ListItemIcon>\n              <prop.icon />\n            </ListItemIcon>\n            <ListItemText primary={prop.sidebarName} />\n          </ListItem >\n        );\n      })}\n    </List>\n  </div>);\n}\n\nexport default withRouter(SideNavBar);","import React from 'react';\n\nexport default function NotFound() {\n  return(\n    <h2>Not Found!!!</h2>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    }, drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n\n}));\n\nexport const ResponsiveDrawer = ({ open, handleDrawerClose, hiddenDrawerVariant }) => {\n    const classes = useStyles();\n    return (\n        <Drawer variant={hiddenDrawerVariant ? \"temporary\" : \"permanent\"}\n            classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }} open={open}>\n            <div className={classes.toolbarIcon}>\n                <IconButton onClick={handleDrawerClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <SideNavBar onListItemClick={hiddenDrawerVariant && handleDrawerClose}></SideNavBar>\n        </Drawer>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\n\nimport NotFound from '../NotFound/NotFound';\n\nimport Routes from '../Routes';\n\nimport useToken from './useToken';\nimport { Copyright } from '../Copyright/Copyright';\nimport { ResponsiveDrawer } from './ResponsiveDrawer';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const hiddenDrawerVariant = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Media Catalog Admin\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <BrowserRouter>\n          <ResponsiveDrawer open={open} handleDrawerClose={handleDrawerClose} hiddenDrawerVariant={hiddenDrawerVariant} />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <Redirect to=\"/dashboard\" />\n                    )\n                  }}\n                />\n                {Routes.map((prop, key) => {\n                  return (\n                    <Route path={prop.path} key={key}>\n                      <prop.component />\n                    </Route>\n                  );\n                })}\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport default function useToken() {\n    useEffect(() => {\n        const handle = window.setInterval(() => {\n            console.log('checking token status', handle);\n            if (token && getToken() == null) {\n                internalSetToken(null);\n            }\n        }, 1000);  //check refresh token every 1 second\n        return () => clearInterval(handle); //cleanup\n    }, []);\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken?.tokenObj?.expires_at && new Date(userToken.tokenObj.expires_at) > new Date()) {\n            return userToken;\n        }\n        return null;\n    };\n\n    const [token, internalSetToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        const onlyValidToken = getToken();\n        if (onlyValidToken) {\n            internalSetToken(onlyValidToken);\n        }\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}