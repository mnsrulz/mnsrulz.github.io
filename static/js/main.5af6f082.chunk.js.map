{"version":3,"sources":["components/Copyright/Copyright.js","components/Login/Login.js","components/Playlist/ResponsiveDialog.js","components/ApiClient/MediaCatalogNetlifyClient.js","components/MediaCard/PlaylistSelectionDialog.js","components/MediaCard/MediaCardComponent.js","components/MediaCardList/MediaCardListComponent.js","components/MediaDirectory/MediaDirectory.js","components/RemoteUrlUpload/RemoteUrlUpload.js","components/Playlist/playlistDetails.js","components/Playlist/playlistGrid.js","components/Playlist/playlist.js","components/Playlist/playlistComponent.js","components/RemoteUrlUpload/CreateNewRequest/ChooseFilesToUpload.js","components/RemoteUrlUpload/CreateNewRequest/FinalStep.js","components/RemoteUrlUpload/CreateNewRequest.js","components/CreateMovie/Card.js","components/CreateMovie/CreateMovieByImdb.js","components/MediaSourceExplorer/MediaSourceExplorerComponent.js","components/MediaSourceList/SourceTypeComponent.js","components/ApiClient/TmdbClient.js","components/MediaSourceList/SearchMovieDialog.js","components/MediaSourceList/MovieFetchComponent.js","components/MediaSourceList/MediaSourceListComponent.js","components/Routes.js","components/Dashboard/Dashboard.js","components/Preferences/Preferences.js","components/SideNavBar/SideNavBar.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/NotFound/NotFound.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","setToken","classes","responseGoogle","res","Container","component","maxWidth","CssBaseline","className","Avatar","clientId","onSuccess","onFailure","cookiePolicy","Box","mt","ResponsiveDialog","confirmText","okButtonText","cancelButtonText","clickHandler","open","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","result","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogActions","Button","autoFocus","onClick","apiClient","_instance","axios","create","baseURL","interceptors","request","use","config","idToken","JSON","parse","localStorage","token","tokenId","headers","Authorization","AuthenticatedClient","PlaylistSelectionDialog","mediaId","selectedPlaylist","useState","playlists","setPlaylists","useEffect","a","get","allPlaylist","data","React","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","resource","push","put","splice","delete","DialogContent","style","dividers","FormControl","FormGroup","map","FormControlLabel","control","Checkbox","onChange","name","label","title","styles","cardTitle","whiteSpace","textOverflow","overflow","cardMedia","maxHeight","height","card","cursor","bgImage","cardSubtitle","MediaCardComponent","movie","handleItemRemove","showDeleteDialog","setShowDeleteDialog","showPlaylistSelectionDialog","setShowPlaylistSelectionDialog","favorite","isFavorite","setIsFavorite","deleteHandler","setFavorteHandler","posterImage","backdropPath","favoritebar","playlistIds","Card","CardActionArea","CardMedia","src","CardContent","gutterBottom","noWrap","year","tagline","CardActions","disableSpacing","IconButton","aria-label","MediaCardListComponent","items","isLoading","filter","x","movieColumns","slice","Grid","item","xs","sm","md","lg","CircularProgress","disableShrink","length","container","direction","justify","searchbar","marginBottom","myComponent","props","state","error","isLoaded","Headers","append","fetch","response","json","tempdata","console","log","this","setState","message","columns","options","filterType","download","print","Component","PlaylistDetails","playlistId","setData","loading","setLoading","PlaylistGridComponent","customBodyRender","tableMeta","rowIndex","viewColumns","searchable","confirmFilters","selectableRows","customFilterDialogFooter","currentFilterList","applyNewFilters","MediaDirectory","useParams","handleSelectionChange","p","q","r","s","selectedData","i","index","onSelectionChange","zipFileUrl","defaultZipFileUrl","fetchUrl","encodeURIComponent","responseAsJson","search","pagination","onRowSelectionChange","FinalStep","selectedFiles","files","path","payload","fileUrl","method","body","stringify","ok","Error","status","root","button","marginRight","actionsContainer","resetContainer","padding","backdropIMG","numeral","require","background","details","backgroundSize","backgroundRepeat","content","flex","backgroundImage","minHeight","posterContainer","textAlign","poster","up","paddingBottom","fontSize","metadata","additionalDetails","MovCard","test","posterIMG","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","nestedDataToString","backdrop","rating","vote","format","styleofbg","original_title","overview","release","runtime","nestedData","nestedArray","undefined","forEach","join","handleChange","e","target","findMovieIdByImdbId","v","imdbMovieApiUrl","responseJson","movie_results","fetchMovieID","imdbId","movieID","url","fetchApi","TextField","placeholder","fullWidth","defaultValue","then","homepage","poster_path","production_companies","release_date","vote_average","backdrop_path","wrapper","position","buttonSuccess","green","buttonError","red","fabProgress","top","left","zIndex","buttonProgress","marginLeft","iconButton","input","SourceTypeComponent","getRenderValue","apiKey","tmdbClient","findMovie","movieId","findImdbId","tmdbId","isTv","apiUrl","resposne","imdb_id","SearchMovieDialog","handleSelect","show","query","searchQuery","setSearchQuery","searchTv","setSearchTv","results","setResults","selectedId","setSelectedId","setValue","Tabs","event","newValue","indicatorColor","textColor","Tab","icon","debounce","List","ListItem","selected","ListItemAvatar","ListItemText","primary","substr","disabled","cover","controls","paddingLeft","playIcon","LightTooltip","withStyles","tooltip","common","white","boxShadow","shadows","Tooltip","MovieFetchComponent","mediaSourceId","mediaItemId","handleMediaAssignment","avatarUrl","setAvatarUrl","setTitle","setYear","setOverview","hasResult","setHasResult","setResult","showDialog","setShowDialog","first_air_date","deleteIcon","innerDeleteHandler","assigncurrentmedia","isthisitemtv","post","handleSelectSearchDialog","outputofdialog","miniPoster","lin","image","interactive","enterDelay","placement","arrow","Chip","size","onDelete","clickable","dayjs","relativeTime","extend","Routes","sidebarName","fixedHeightPaper","clsx","fixedHeight","Paper","Chart","Deposits","Orders","DashboardIcon","ShoppingCartIcon","hide","setSearch","MovieIcon","RemoteUrlUpload","CloudUploadIcon","useForm","register","handleSubmit","errors","activeStep","setActiveStep","setZipFileUrl","setSelectedFiles","handleFileSelection","steps","getStepContent","step","type","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","square","elevation","AddIcon","PlaylistComponent","SubscriptionsIcon","CreateMovieByImdb","uniqueid","now","toString","Math","random","toUpperCase","rootUrl","setRootUrl","firstuniqueid","initialData","attributes","onNodeClickCallback","ctx","isTraversed","nextData","clone","leafnode","findNodeFromName","hasErrors","utocall","children","resolvedUrl","anotherdata","link","parentNode","keyName","foundele","nodeSize","y","foreignObjectProps","InputProps","endAdornment","InputAdornment","onNodeClick","translate","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","Fragment","Fab","renderForeignObjectNode","AccountTreeIcon","page","setPage","pageSize","rows","setRows","rowCount","setRowCount","pendingSelection","setPendingSelection","fxhandleMediaAssignment","updatedRows","field","headerName","sortable","renderCell","row","valueFormatter","fromNow","onlyPending","total","ToggleButtonGroup","exclusive","ev","val","ToggleButton","autoHeight","paginationMode","onPageChange","params","checkboxSelection","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","withRouter","activeRoute","routeName","location","pathname","prop","key","to","navurl","textDecoration","ListItemIcon","Title","createData","time","amount","preventDefault","depositContext","date","shipTo","paymentMethod","seeMore","Table","TableHead","TableRow","TableCell","TableBody","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","drawerPaperClose","overflowX","appBarSpacer","paddingTop","NotFound","App","window","setInterval","getToken","internalSetToken","tokenString","getItem","userToken","tokenObj","expires_at","setItem","onlyValidToken","useToken","setOpen","AppBar","Toolbar","edge","Drawer","Divider","exact","render","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5af6f082.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Media Catalog UI\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}  ","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Avatar, CssBaseline, Box, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport {Copyright} from '../Copyright/Copyright';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n  const classes = useStyles();\n  const responseGoogle = (res) => {    \n    setToken(res);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <GoogleLogin\n          clientId=\"345350504609-1moo0gfi27h0jj2qaim5ed1iohgprs99.apps.googleusercontent.com\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>    \n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function ResponsiveDialog({ confirmText, okButtonText, cancelButtonText, clickHandler, open }) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = (result) => {\n        clickHandler(result);\n    };\n\n    return (\n        <div>\n            <Dialog fullScreen={fullScreen}\n                open={open}\n                onClose={() => handleClose('Cancel')}\n                aria-labelledby=\"responsive-dialog-title\">\n                <DialogTitle id=\"responsive-dialog-title\">{confirmText}</DialogTitle>\n                <DialogActions>\n                    <Button autoFocus onClick={() => handleClose('Cancel')} color=\"primary\">\n                        {cancelButtonText}\n                    </Button>\n                    <Button onClick={() => handleClose('Ok')} color=\"primary\" autoFocus>\n                        {okButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import axios from 'axios';\n\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://mediacatalog.netlify.app/.netlify/functions/server/'\n    });\n    _instance.interceptors.request.use(config => {        \n        const idToken = JSON.parse(localStorage.token).tokenId;\n        config.headers.Authorization = 'Bearer ' + idToken;\n        return config;\n    });\n    return _instance;\n}\n\nexport const apiClient = AuthenticatedClient();","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, Checkbox, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport default function PlaylistSelectionDialog({ open, mediaId, selectedPlaylist, onClose }) {\n    const theme = useTheme();\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        if (open) {\n            (async () => {\n                const allPlaylist = await apiClient.get('playlists');\n                setPlaylists(allPlaylist.data);\n            })();\n        }\n    }, [open]);\n    const [checked, setChecked] = React.useState(selectedPlaylist);\n\n    const handleToggle = (value) => async () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        const resource = `items/${mediaId}/playlists/${value}`;\n        if (currentIndex === -1) {\n            newChecked.push(value);\n            setChecked(newChecked);\n            await apiClient.put(resource);\n        } else {\n            newChecked.splice(currentIndex, 1);\n            setChecked(newChecked);\n            await apiClient.delete(resource);\n        }\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            maxWidth='sm'\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Playlist...</DialogTitle>\n            <DialogContent style={{ width: 240 }} dividers>\n                <FormControl>\n                    <FormGroup>\n                        {playlists.map((value) => {\n                            return (\n                                <FormControlLabel\n                                    control={<Checkbox checked={checked.indexOf(value.id) !== -1}\n                                        onChange={handleToggle(value.id)}\n                                        color='primary'\n                                        name={value.id} />}\n                                    label={value.title}\n                                />\n                            );\n                        })}\n                    </FormGroup>\n                </FormControl>                \n            </DialogContent>\n        </Dialog>\n    );\n}","import React, { useState } from 'react';\nimport { Card, CardMedia, Typography, CardContent, CardActionArea, CardActions, IconButton, ButtonGroup, Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ResponsiveDialog from '../Playlist/ResponsiveDialog';\nimport PlaylistSelectionDialog from '../MediaCard/PlaylistSelectionDialog';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\n// These are inline styles\n// You can pass styles as objects using this convention\nconst styles = {\n  cardTitle: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  },\n  cardMedia: {\n    maxHeight: 394,\n    height: 169,\n    overflow: 'hidden'\n  },\n  card: {\n    cursor: 'pointer',\n    overflow: 'hidden'\n  },\n  bgImage: {\n    width: '100%'\n  },\n  cardSubtitle: {\n\n  }\n};\n\nexport default function MediaCardComponent({ movie, handleItemRemove }) {\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [showPlaylistSelectionDialog, setShowPlaylistSelectionDialog] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(movie.favorite);\n\n  const deleteHandler = async (result) => {\n    if (result === 'Ok') {\n      await apiClient.delete(`items/${movie.id}`);\n      handleItemRemove(movie.id);\n    }\n    setShowDeleteDialog(false);\n  };\n\n  const setFavorteHandler = async () => {\n    if (isFavorite) {\n      await apiClient.delete(`items/${movie.id}/favorite`);\n    } else {\n      await apiClient.put(`items/${movie.id}/favorite`);\n    }\n    setIsFavorite(!isFavorite);\n  };\n\n  const posterImage = movie.backdropPath ? `https://image.tmdb.org/t/p/w300${movie.backdropPath}` : '';\n\n  const favoritebar = isFavorite ?\n    <FavoriteIcon style={{ color: 'red' }} /> :\n    <FavoriteBorderIcon />;\n\n  return (\n    <div>\n      <ResponsiveDialog okButtonText=\"Yes\"\n        cancelButtonText=\"No\"\n        confirmText=\"Confirm Delete?\"\n        clickHandler={deleteHandler}\n        open={showDeleteDialog} />\n      <PlaylistSelectionDialog open={showPlaylistSelectionDialog} selectedPlaylist={movie.playlistIds}\n        mediaId={movie.id}\n        onClose={() => { setShowPlaylistSelectionDialog(false) }}\n      />\n      <Card style={styles.card}>\n        <CardActionArea>\n          <CardMedia style={styles.cardMedia}>\n            <img style={styles.bgImage} src={posterImage} />\n          </CardMedia>\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" noWrap>\n              {movie.title} - {movie.year}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\" noWrap style={styles.cardSubtitle}>\n              {movie.tagline || \"N/A\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions disableSpacing>\n          <IconButton onClick={setFavorteHandler}>\n            {favoritebar}\n          </IconButton>\n          <IconButton onClick={() => setShowDeleteDialog(true)}>\n            <DeleteIcon aria-label=\"delete\"></DeleteIcon>\n          </IconButton>\n          <IconButton onClick={() => setShowPlaylistSelectionDialog(true)} aria-label=\"settings\">\n            <SubscriptionsIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Grid, LinearProgress, CircularProgress } from '@material-ui/core';\nimport MovieCard from \"../MediaCard/MediaCardComponent\";\n\nexport const MediaCardListComponent = ({ items, isLoading }) => {\n    \n    // const [movies, setMovies] = React.useState(items);\n\n    const deleteHandler = (mediaId) => {\n        const moviesAfterRemove = items.filter(x=>x.id!=mediaId);\n        // setMovies(moviesAfterRemove);        \n    };\n    const movieColumns = items ? items.slice(0, 24).map((movie) => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={movie.id}>\n            <MovieCard movie={movie} handleItemRemove={deleteHandler} />\n        </Grid>\n    )) : null;\n    if(isLoading){\n        return <CircularProgress disableShrink />\n    }\n    else if (movieColumns?.length) {\n        return (\n            <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={3}>\n                {movieColumns || \"hello\"}\n            </Grid>\n        );\n    } else {\n        return <div>No items found</div>\n    }\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { debounce } from '@material-ui/core';\nimport {MediaCardListComponent} from '../MediaCardList/MediaCardListComponent';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchbar: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function MediaDirectory() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const classes = useStyles();\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const searchQuery = search;\n      setLoading(true);\n      const result = await apiClient.get(`items?q=${searchQuery}`);\n      if (search === searchQuery) {\n        setData(result.data);\n        setLoading(false);\n      }\n    })();\n  }, [search]);\n\n  return (\n    <div>\n      <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n        onChange={debounce(handleOnChange, 250)} \n        defaultValue={search} className={classes.searchbar} />\n      <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n    </div>\n  );\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        const columns = [\"ts\", \"requestId\", \"fileName\", \"sequence\", \"status\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false\n        };\n\n        const { error, isLoaded, data} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Remote Url Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}\n\nexport default myComponent;","import React, { useState, useEffect } from 'react';\nimport { MediaCardListComponent } from '../MediaCardList/MediaCardListComponent'\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport default function PlaylistDetails({ playlistId }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const result = await apiClient.get(`playlists/${playlistId}/items`);\n            setData(result.data);\n            setLoading(false);\n        })();\n    }, []);\n\n    return (\n        <div>\n            <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n        </div>\n    );\n};","import React from 'react';\nimport { Typography, Button, Link } from '@material-ui/core';\nimport MUIDataTable from \"mui-datatables\";\n\n\nconst PlaylistGridComponent = ({ data }) => {    \n    const columns = [{\n        name: \"title\",\n        options: {\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <Link href={`/playlistdetails/${data[tableMeta.rowIndex].id}`} >\n                        {value}\n                    </Link>\n                );\n            }\n        }\n    }, {\n        name: \"ts\", label: \"Created\", options: {\n            customBodyRender: (value) => {\n                return (\n                    <div title={value}>{value}</div>\n                );\n            }\n        }\n    }];\n    const options = {\n        download: false,\n        print: false,\n        viewColumns: false,\n        searchable: false,\n        filterType: 'multiselect',\n        confirmFilters: true,\n        selectableRows: false,\n        customFilterDialogFooter: (currentFilterList, applyNewFilters) => {\n            return (\n                <div style={{ marginTop: '40px' }}>\n                    <Button variant=\"contained\" onClick={applyNewFilters}>Apply Filters</Button>\n                </div>\n            );\n        }\n    };\n\n    return <MUIDataTable\n        title={\n            <Typography variant=\"h6\">\n                Playlist\n          {/* {isLoading && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />} */}\n            </Typography>\n        }\n        data={data}\n        columns={columns}\n        options={options}\n    />;\n}\n\nexport default PlaylistGridComponent;","import React from 'react';\nimport PlaylistGrid from '../Playlist/playlistGrid';\n\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/playlists';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        \n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <PlaylistGrid data = {data}></PlaylistGrid>;\n        }\n    }\n}\n\nexport default myComponent;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaylistDetails from '../Playlist/playlistDetails'\nimport Playlist from '../Playlist/playlist'\nexport default function MediaDirectory() {\n    let { id } = useParams();\n    if (id) {\n        return (\n            <PlaylistDetails playlistId={id}></PlaylistDetails>\n        );\n    } else {\n        return (\n            <Playlist></Playlist>\n        );\n    }\n}","import React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nexport default class myComponent extends React.Component {\n    constructor(props) {\n        // debugger;\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            zipFileUrl: props.defaultZipFileUrl,\n            onSelectionChange: props.onSelectionChange\n        };\n\n    }\n\n    async componentDidMount() {\n        const fetchUrl = `https://mediacatalogdirectorylisting.herokuapp.com/api/zip/listFiles?zipFileUrl=${encodeURIComponent(this.state.zipFileUrl)}`;\n        const response = await fetch(fetchUrl);\n        try {\n            const responseAsJson = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: responseAsJson\n            });\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n\n    }\n\n    handleSelectionChange = (p, q, r, s) => {\n        const selectedData = q.map(i => this.state.data[i.index]);\n        this.state.onSelectionChange && this.state.onSelectionChange(selectedData);\n    }\n\n    render() {\n        const columns = [\"path\", \"uncompressedSize\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false,\n            search: false,\n            viewColumns: false,\n            filter: false,\n            pagination: false,\n            onRowSelectionChange: this.handleSelectionChange\n        };\n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: We have some errrors</div>;\n        } else if (!isLoaded) {\n            return <div>Fetching files inside zip file...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}","import React from 'react';\n\nexport default class FinalStep extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            selectedFiles: props.selectedFiles,\n            zipFileUrl: props.zipFileUrl\n        };\n    }\n\n    async componentDidMount() {        \n        const files = this.state.selectedFiles.map(i => i.path);\n        const payload = {\n            fileUrl: this.state.zipFileUrl,\n            files\n        };\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        headers.append(\"content-type\", \"application/json\");\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        try {\n            const response = await fetch(apiUrl, { headers: headers, method: 'POST', body: JSON.stringify(payload) });\n            if (response.ok) {\n                const tempdata = await response.json();\n\n                this.setState({\n                    isLoaded: true,\n                    data: tempdata\n                });\n            } else {\n                throw Error(`Unexpected response code receieved ${response.status}`);\n            }\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n    }\n    render() {\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Submitting Request...</div>;\n        } else {\n            return <span>Success!</span>;\n        }\n    }\n}","import { React, useState } from 'react';\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ChooseFilesToUpload from './CreateNewRequest/ChooseFilesToUpload';\nimport ChooseFilesToUploadFinalStep from './CreateNewRequest/FinalStep';\n\nimport { FormHelperText, TextField, InputLabel, Input, FormControl, Paper, Grid, Typography, Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\n\n// import FormInput from \"./../Controls/index\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Enter a zip file URL', 'Choose Files to Upload', 'Finish'];\n}\n\n\nexport default function App() {\n    const { control, register, handleSubmit, errors } = useForm();\n    const onSubmit = data => { alert('hello'); console.log(data); }\n\n    const classes = useStyles();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [zipFileUrl, setZipFileUrl] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleChange = (e) => {\n        setZipFileUrl(e.target.value);\n    };\n\n    const handleFileSelection = (e) => {\n        setSelectedFiles(e);\n    };\n\n    const steps = getSteps();\n\n    function getStepContent(step) {        \n        switch (step) {\n            case 0:\n                return <TextField name=\"fileUrl\" type=\"URL\" defaultValue={zipFileUrl} fullWidth onChange={handleChange} />;\n            case 1:\n                return <ChooseFilesToUpload defaultZipFileUrl={zipFileUrl} onSelectionChange={handleFileSelection} />;\n            case 2:\n                return <ChooseFilesToUploadFinalStep selectedFiles={selectedFiles} zipFileUrl = {zipFileUrl} />;\n            default:\n                return 'unknown step'\n        }\n    }\n\n    const handleNext = () => {        \n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                  </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )}\n            </div>\n            {/* <form onSubmit={handleSubmit(onSubmit)}>\n                <Paper style={{ padding: 16 }}>\n                    <Typography  >\n                        New Request Form\n                        </Typography>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField name=\"zipFileUrl\" error={!!errors.username} label=\"Zip File URL\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"URL\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField name=\"username\" error={!!errors.username} label=\"Username\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"email\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid container item xs={12} justify=\"flex-end\">\n                            <Button color=\"primary\" type=\"submit\" variant=\"contained\" fullWidth>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </form> */}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\n\n// import './Card.scss';\nimport { Card, CardContent, Typography, CardMedia, CardHeader, Avatar, IconButton, Grid, Divider } from '@material-ui/core';\nimport { makeStyles, rgbToHex, withStyles } from '@material-ui/core/styles';\n\nlet numeral = require('numeral');\nlet backdropIMG;\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: '20px',\n        display: 'flex',\n        background: 'rgba(0,0,0,.85)'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        flex: '1 0 auto',\n        color: 'white',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,.85) 15%,rgba(0,0,0,.2) 40%,#000 90%)',\n        minHeight: '500px'\n    },\n    posterContainer: {\n        textAlign: 'center'\n    },\n    poster: {        \n        width: '120px',\n        [theme.breakpoints.up('md')]:{\n            width: '200px'\n        }\n    },\n    tagline: {\n        display: 'block',\n        paddingBottom: '0.25em',\n        color: 'limeGreen',\n        fontSize: '1.3em'\n    },\n    metadata: {\n        display: 'block',\n        color: 'limeGreen',\n    },\n    additionalDetails: {\n        margin: \"35px 0 20px\"\n    }\n}));\n\nexport default function MovCard({ data, test }) {\n    const classes = useStyles();\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\n    let rating = '';\n\n    // conditional statements for no data\n    if (data.vote === 'undefined' || data.vote === 0) {\n        rating = noData\n    } else {\n        rating = data.vote\n    };\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n        totalRevenue = noData\n    } else {\n        totalRevenue = numeral(data.revenue).format('($0,0)');\n    };\n\n    if (data.poster == null) {\n        posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    const styleofbg = `url(${backdropIMG})`;\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <div className={classes.details} style={{ backgroundImage: styleofbg }}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                            {data.original_title}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" className={classes.tagline}>\n                            {data.tagline}\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            <Grid container>\n                                <Grid item xs={9}>\n                                    {data.overview}\n                                    <Grid container className={classes.additionalDetails}>\n                                        <Grid item md={3}>\n                                            Original Release: <span className={classes.metadata}>{data.release}</span>\n                                    Box Office: <span className={classes.metadata}>{totalRevenue}</span>\n                                        </Grid>\n                                        <Grid item md={3}>\n                                            Running Time: <span className={classes.metadata}>{data.runtime} mins</span>\n                                Rating: <span className={classes.metadata}>{rating}</span>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={3} className={classes.posterContainer}>\n                                    <img src={posterIMG} className={classes.poster}></img>\n                                    {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n                                </Grid>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n                </div>\n                {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n            </Card>\n        </div>\n    );\n\n\n    function nestedDataToString(nestedData) {\n        let nestedArray = [],\n            resultString;\n        if (nestedData !== undefined) {\n            nestedData.forEach(function (item) {\n                nestedArray.push(item.name);\n            });\n        }\n        resultString = nestedArray.join(', '); // array to string\n        return resultString;\n    };\n\n}\n","import React, { Component, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Card from './Card';\n\nclass myComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null,\n            imdbId: 'tt0468569'\n        };\n    }\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return <div id=\"createMovieContainer000001\">\n            <TextField name=\"imdbId\" label=\"IMDB Id\" placeholder=\"Enter IMDB Id\" fullWidth\n                onChange={this.fetchMovieID} defaultValue={this.state.imdbId} />            \n            <Card data={this.state} />\n        </div>\n    }\n\n\n    // the api request function\n    fetchApi(url) {\n\n        fetch(url).then((res) => res.json()).then((data) => {\n            // update state with API data\n            this.setState({\n                movieID: data.id,\n                original_title: data.original_title,\n                tagline: data.tagline,\n                overview: data.overview,\n                homepage: data.homepage,\n                poster: data.poster_path,\n                production: data.production_companies,\n                production_countries: data.production_countries,\n                genre: data.genres,\n                release: data.release_date,\n                vote: data.vote_average,\n                runtime: data.runtime,\n                revenue: data.revenue,\n                backdrop: data.backdrop_path\n            })\n        })\n    }\n\n    findMovieIdByImdbId = async (v) => {\n        const imdbMovieApiUrl = `https://api.themoviedb.org/3/find/${v}?&api_key=cfe422613b250f702980a3bbf9e90716&external_source=imdb_id`;\n        const response = await fetch(imdbMovieApiUrl);\n        const responseJson = await response.json();\n        return responseJson.movie_results && responseJson.movie_results[0] && responseJson.movie_results[0].id;\n    }\n\n    fetchMovieID = async (e) => {\n        const imdbId = e.target.value;\n        this.setState({ imdbId: imdbId });\n        const movieID = await this.findMovieIdByImdbId(imdbId);\n        if (movieID) {\n            let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n            this.fetchApi(url);\n        }\n    }\n\n    async componentDidMount() {        \n        const movieID = await this.findMovieIdByImdbId(this.state.imdbId);\n        let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n        this.fetchApi(url)\n    }\n}\n\nexport default myComponent;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fab, Tooltip, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ErrorIcon from '@material-ui/icons/Edit';\nimport Tree from 'react-d3-tree';\nimport axios from 'axios';\nimport clone from 'clone';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonError: {\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }, iconButton: {\n        padding: 10,\n    }, input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n\nexport const MediaSourceExplorerComponent = ({ items, isLoading }) => {\n    const classes = useStyles();\n    const uniqueid = () => { return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase(); }\n    const [rootUrl, setRootUrl] = useState('');\n\n    const handleRootUrlOnChange = (event) => {\n        const { value } = event.target;\n        setRootUrl(value);        \n    };\n    \n    const setTreeRootUrl = () => {\n        setData({\n            name: rootUrl,\n            attributes: {\n                url: rootUrl,\n                id: uniqueid()\n            }\n        })\n    };\n\n    const firstuniqueid = uniqueid();\n    const initialData = {\n        name: rootUrl,\n        attributes: {\n            url: rootUrl,\n            id: firstuniqueid\n        }\n    };\n\n\n    const [data, setData] = useState(initialData);\n\n    const renderForeignObjectNode = ({\n        nodeDatum,\n        toggleNode,\n        foreignObjectProps\n    }) => (\n        <foreignObject {...foreignObjectProps} >\n            <div className={classes.wrapper}>\n                <Tooltip title={<React.Fragment>\n                    Name: {nodeDatum.name}\n                    <br></br>\n                        Url: {nodeDatum.attributes.url}\n                </React.Fragment>}>\n                    <Fab\n                        color=\"primary\"\n                        className={nodeDatum.attributes.hasErrors && classes.buttonError}\n                        onClick={() => {\n                            if (!nodeDatum.attributes.isTraversed) {\n                                if (!nodeDatum.attributes.loading) {\n                                    nodeDatum.attributes.hasErrors = false;\n                                    nodeDatum.attributes.loading = true;\n                                    onNodeClickCallback(nodeDatum);\n                                }\n                            }\n                            toggleNode();\n                        }}\n                    >\n                        {nodeDatum.attributes.hasErrors && <ErrorIcon />}\n                    </Fab>\n                </Tooltip>\n                {nodeDatum.attributes.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n            </div>\n        </foreignObject>\n    );\n\n    const onNodeClickCallback = async (ctx) => {\n        if (ctx.attributes.isTraversed) return;\n        const nextData = clone(data);\n        const leafnode = findNodeFromName(nextData, ctx.attributes.id);\n        try {\n            leafnode.attributes.hasErrors = false;\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?q=${encodeURIComponent(ctx.attributes.url)}`;\n            const response = await axios.get(utocall);\n            const children = [];\n            for (const resolvedUrl of response.data) {\n                const anotherdata = {\n                    name: resolvedUrl.title, attributes: {\n                        url: resolvedUrl.link,\n                        id: uniqueid()\n                    }\n                }\n                children.push(anotherdata);\n            }\n            leafnode.attributes.isTraversed = true;\n            leafnode.children = children;\n        } catch (error) {\n            leafnode.attributes.hasErrors = true;\n            leafnode.attributes.isLoading = false;\n        }\n        setData(nextData);\n    };\n\n    function findNodeFromName(parentNode, keyName) {\n        if (parentNode.attributes.id === keyName) {\n            return parentNode;\n        } else if (parentNode.children?.length) {\n            for (const childelement of parentNode.children) {\n                const foundele = findNodeFromName(childelement, keyName);\n                if (foundele) return foundele;\n            }\n        }\n        return null;\n    }\n\n    const nodeSize = { x: 200, y: 200 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: -34, y: -34 };\n\n    return <div>\n\n        <div id=\"treeWrapper\" style={{ height: '40em' }}>\n            <TextField label=\"Root Url\" placeholder=\"Root Url\" fullWidth InputProps={{\n                endAdornment: (<InputAdornment>\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick={setTreeRootUrl}>\n                        <SearchIcon />\n                    </IconButton>\n                </InputAdornment>)\n            }}\n                onChange={handleRootUrlOnChange} />\n            <Tree data={data}\n                orientation='vertical'\n                onNodeClick={onNodeClickCallback}\n                nodeSize={nodeSize}\n                translate={{ x: 100, y: 100 }}\n                renderCustomNodeElement={(rd3tProps) =>\n                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                }\n            />\n        </div>\n    </div>\n}","import { Typography } from '@material-ui/core';\nexport default function SourceTypeComponent({ value }) {\n    const getRenderValue = () => {\n        switch (value) {\n            case 'hdhub':\n                return 'HH'                \n            case 'extramovies':\n                return 'EM'                \n            default:\n                return value                \n        }\n    }    \n    return <Typography variant=\"body2\" color=\"textSecondary\">{getRenderValue()}</Typography>\n}","import axios from 'axios';\nconst apiKey = 'cfe422613b250f702980a3bbf9e90716';\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://api.themoviedb.org/3'\n    });\n\n    return {\n        findMovie: (movieId) => {\n\n        },\n        findImdbId: async (tmdbId, isTv) => {\n            let apiUrl = `${isTv ? 'tv' : 'movie'}/${tmdbId}?api_key=${apiKey}&language=en-US`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data.imdb_id;\n        },\n        search: async (q, isTv) => {\n            let apiUrl = `search/${isTv ? 'tv' : 'movie'}?api_key=${apiKey}&language=en-US&&query=${encodeURIComponent(q)}`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data;\n        }\n    }\n}\nexport const tmdbClient = AuthenticatedClient();","import { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogActions, debounce, Divider, Checkbox, FormControlLabel, Tabs, Tab, Paper } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nexport function SearchMovieDialog({ handleSelect, show, query, isTv }) {\n    // const [open, setOpen] = useState(show);\n    const [searchQuery, setSearchQuery] = useState(query);\n    const [searchTv, setSearchTv] = useState(isTv);\n    const [results, setResults] = useState([]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    const theme = useTheme();\n    //const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => {\n        handleSelect(null);\n    };\n\n    const handleItemSelectionClose = () => {\n        handleSelect({\n            id: selectedId,\n            isTv: searchTv\n        });\n    };\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setSearchQuery(value);\n    };\n\n    const handleSetTv = (event) => {\n        const { checked } = event.target;\n        setSearchTv(checked);\n    }\n\n    useEffect(() => {\n        if (!searchQuery || !show) return;\n        (async () => {\n            console.log(searchTv);\n            const { results } = await tmdbClient.search(searchQuery, searchTv);\n            setResults(results);\n        })();\n    }, [searchQuery, show, searchTv]);\n\n    const [value, setValue] = useState(isTv ? 1 : 0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setSearchTv(newValue === 1);\n        setSelectedId(0);\n    };\n\n    return (<div>\n        <Dialog open={show}\n            fullWidth={true}\n            onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {/* <DialogTitle id=\"form-dialog-title\">Search</DialogTitle> */}\n            <DialogTitle style={{ padding: 0 }}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\">\n                    <Tab icon={<PhoneIcon />} label=\"MOVIES\" />\n                    <Tab icon={<FavoriteIcon />} label=\"TV\" />\n                </Tabs>\n            </DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    defaultValue={searchQuery}\n                    fullWidth\n                    onChange={debounce(handleOnChange, 250)}\n                />\n\n                {/* <FormControlLabel control={<Checkbox defaultChecked={searchTv}\n                    onChange={handleSetTv} />} label=\"TV\" /> */}\n                {\n                    results && (<List component=\"nav\">\n                        {results.map((value) => {\n                            return (<ListItem\n                                key={value.id}\n                                button\n                                selected={selectedId === value.id}\n                                onClick={() => setSelectedId(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={value.poster_path && `https://image.tmdb.org/t/p/w92${value.poster_path}`}></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={`${value.title || value.name}`}\n                                    secondary={value.release_date?.substr(0, 4)} />\n                            </ListItem>)\n                        })}\n                    </List>)\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleItemSelectionClose} color=\"primary\" disabled={selectedId === 0}>\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n    </div>);\n\n}","import { Avatar, Card, CardContent, CardMedia, Chip, Paper, Tooltip, Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { SearchMovieDialog } from './SearchMovieDialog'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: 320,\n        height: 162\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 0.65\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        // width: 151,\n        display: 'flex',\n        flex: 0.35\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 0.87)',\n        boxShadow: theme.shadows[1],\n        padding: 0,\n        fontSize: 11,\n    },\n}))(Tooltip);\n\nexport const MovieFetchComponent = ({ value, isTv, mediaSourceId, mediaItemId, handleMediaAssignment\n}) => {\n    //const posterSize = 'w185';  //w92\n    const posterSize = 'w92';  //w92\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [title, setTitle] = useState(value);\n    const [year, setYear] = useState('');\n    const [overview, setOverview] = useState('');\n    const [hasResult, setHasResult] = useState(false);\n    const [result, setResult] = useState();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [showDialog, setShowDialog] = useState(false);\n\n    useEffect(() => {\n        if (!value) return;\n        (async () => {\n            const { results } = await tmdbClient.search(value, isTv);\n            if (results[0]) {\n                setHasResult(true);\n                setResult(results[0]);\n                setTitle(results[0].title || results[0].name);\n                setAvatarUrl(`https://image.tmdb.org/t/p/${posterSize}${results[0].poster_path}`);\n                setYear(results[0].release_date?.substr(0, 4) || results[0].first_air_date?.substr(0, 4));\n                setOverview(results[0].overview);\n            }\n            setLoading(false);\n        })();\n    }, [value]);\n\n    const deleteIcon = hasResult ? <DoneIcon /> : null\n    const innerDeleteHandler = async () => {\n        const { id } = result;\n        await assigncurrentmedia(id, isTv);\n    }\n\n    const assigncurrentmedia = async (id, isthisitemtv) => {\n        let mediaItemId;\n        try {\n            const response = await apiClient.get(`/items/byExternalId/${id}?type=tmdb`);\n            mediaItemId = response.data.id;\n        } catch (error) {\n            const imdbId = await tmdbClient.findImdbId(id, isthisitemtv);\n            console.log('imdbid', imdbId);\n            const response = await apiClient.post(`items/byExternalId/${imdbId}?type=imdb`);\n            mediaItemId = response.data.id;\n        }\n        await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        handleMediaAssignment && handleMediaAssignment({ mediaItemId, mediaSourceId });\n    }\n\n    const showDialogHandler = () => {\n        setShowDialog(true);\n    }\n\n    const handleSelectSearchDialog = async (outputofdialog) => {\n        setShowDialog(false);\n        if (outputofdialog) {\n            await assigncurrentmedia(outputofdialog.id, outputofdialog.isTv);\n        }\n    }\n\n    const miniPoster = <Card className={classes.root}>\n        <div className={classes.details}>\n            <CardContent className={classes.content}>\n                <Typography>\n                    {title} ({year})\n                </Typography>\n                <Typography lin variant=\"subtitle2\" color=\"textSecondary\" >\n                    {overview}\n                </Typography>\n            </CardContent>\n        </div>\n        <CardMedia\n            className={classes.cover}\n            image={avatarUrl}\n            title={title}\n        />\n    </Card>\n\n    if (mediaItemId) {\n        return <span>{mediaItemId}</span>\n    } else if (loading) {\n        return <div>Loading...</div>;\n    }\n    else {\n        // return <span>hello</span>\n        {/* <SearchMovieDialog show={showDialog}></SearchMovieDialog> */ }\n        // <div>            </div>\n        return <div>\n            <SearchMovieDialog show={showDialog} query={title} isTv={isTv} handleSelect={handleSelectSearchDialog}></SearchMovieDialog>\n            <LightTooltip interactive title={miniPoster} enterDelay={500} placement=\"right\" arrow>\n                <Chip\n                    size='medium'\n                    avatar={<Avatar src={avatarUrl} />}\n                    color=\"primary\" label={title}\n                    variant=\"outlined\"\n                    onClick={showDialogHandler}\n                    onDelete={hasResult ? innerDeleteHandler : null}\n                    deleteIcon={deleteIcon}\n                    clickable></Chip>\n            </LightTooltip></div>\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColumns } from '@material-ui/data-grid';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { debounce, TextField, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SourceType from \"./SourceTypeComponent\";\nimport { MovieFetchComponent } from \"./MovieFetchComponent\";\nimport { SearchMovieDialog } from './SearchMovieDialog';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport default function MediaSourceList() {\n    const [page, setPage] = useState(0);\n    const [pageSize, setPageSize] = useState(20);\n    const [rows, setRows] = useState([]);\n    const [rowCount, setRowCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [pendingSelection, setPendingSelection] = useState('Pending');\n    const classes = useStyles();\n\n    const fxhandleMediaAssignment = async (result) => {\n        const updatedRows = rows.map(x => {\n            if (x.id === result.mediaSourceId) {\n                x.mediaItemId = result.mediaItemId;\n            }\n            return x;\n        })\n        setRows(updatedRows);\n    };\n\n    const columns: GridColumns = [\n        { field: 'renderedTitle', headerName: 'Title', sortable: false, flex: 1 },\n        {\n            field: 'parserInfo', headerName: 'Parser Title', sortable: false, flex: 1, renderCell: ({ value, row }) => {\n                return <MovieFetchComponent            \n                    value={value?.title} isTv={value?.isTv}\n                    mediaSourceId={row.id}\n                    mediaItemId={row.mediaItemId}\n                    handleMediaAssignment={fxhandleMediaAssignment}\n                />\n            }\n        },\n        {\n            field: 'crawlerType', headerName: 'Source', sortable: false, width: 80, renderCell: ({ value }) => {\n                return <SourceType value={value}></SourceType>\n            }\n        },\n        { field: 'created', headerName: 'Created', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() },\n        { field: 'modified', headerName: 'Last Modified', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() }\n    ];\n\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setPage(0);\n        setSearch(value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const onlyPending = pendingSelection === 'Pending';\n            const response = await apiClient.get(`/mediasources?pageSize=${pageSize}&pageNumber=${page + 1}&q=${search}&onlyPendingMediaAssignment=${onlyPending}`);\n            setRowCount(response.data.total);\n            setRows(response.data.items);\n            setLoading(false);\n        })();\n    }, [page, search, pendingSelection]);\n\n    const handlePageChange = (params) => {\n        const { page } = params;\n        setPage(page);\n    }\n\n    return <div>\n        <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n            onChange={debounce(handleOnChange, 250)}\n            defaultValue={search} className={classes.searchbar} />\n        <ToggleButtonGroup value={pendingSelection} exclusive onChange={(ev, val) => setPendingSelection(val)}>\n            <ToggleButton value=\"All\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"Pending\" >\n                Pending\n            </ToggleButton>\n        </ToggleButtonGroup>\n\n        <DataGrid\n            page={page}\n            autoHeight={true}\n            rows={rows}\n            columns={columns}\n            pageSize={pageSize}\n            paginationMode='server'\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowCount={rowCount}\n            checkboxSelection={false}\n            disableColumnMenu\n            disableColumnSelector\n            disableSelectionOnClick\n        />\n    </div>\n}","import Dashboard from './Dashboard/Dashboard';\nimport Preferences from './Preferences/Preferences';\nimport MediaDirectory from './MediaDirectory/MediaDirectory';\nimport RemoteUrlUpload from './RemoteUrlUpload/RemoteUrlUpload';\nimport PlaylistComponent from './Playlist/playlistComponent';\nimport PlaylistDetails from './Playlist/playlistDetails';\nimport CreateNewRemoteUrlUpload from './RemoteUrlUpload/CreateNewRequest';\nimport CreateMovieByImdb from './CreateMovie/CreateMovieByImdb';\nimport { MediaSourceExplorerComponent } from './MediaSourceExplorer/MediaSourceExplorerComponent';\nimport MediaSourceListComponent from './MediaSourceList/MediaSourceListComponent';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nconst Routes = [\n    {\n        path: '/dashboard',\n        sidebarName: 'Dashboard',\n        component: Dashboard,\n        icon: DashboardIcon\n    },\n    {\n        path: '/preferences',\n        sidebarName: 'Preferences',\n        component: Preferences,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/movies',\n        sidebarName: 'Media Items',\n        component: MediaDirectory,\n        icon: MovieIcon\n    },\n    {\n        path: '/remoteuploads',\n        sidebarName: 'Remote Url Upload',\n        component: RemoteUrlUpload,\n        icon: CloudUploadIcon\n    },\n    {\n        path: '/createremoteuploads',\n        sidebarName: 'New Remote Url Upload',\n        component: CreateNewRemoteUrlUpload,\n        icon: AddIcon\n    },\n    {\n        path: '/playlist',\n        sidebarName: 'Playlist',\n        component: PlaylistComponent,\n        icon: SubscriptionsIcon\n    },\n    {\n        path: '/playlistdetails/:id',\n        sidebarName: 'Playlist',\n        component: PlaylistComponent,\n        icon: SubscriptionsIcon,\n        hide: true\n    },\n    {\n        path: '/movie/new',\n        sidebarName: 'New Movie by IMDB Id',\n        component: CreateMovieByImdb,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/explorer',\n        sidebarName: 'Media Source Explorer',\n        component: MediaSourceExplorerComponent,\n        icon: AccountTreeIcon\n    },\n    {\n        path: '/source',\n        sidebarName: 'Media Source',\n        component: MediaSourceListComponent,\n        icon: AccountTreeIcon\n    }\n];\n\nexport default Routes;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../SideNavBar/SideNavBar';\nimport Chart from '../Chart';\nimport Deposits from '../Deposits';\nimport Orders from '../Orders';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    \n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          \n      \n    \n  );\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { List, ListItemIcon, ListItemText, ListItem } from '@material-ui/core';\nimport Routes from '../Routes';\n\nconst SideNavBar = (props) => {\n  const activeRoute = (routeName) => {\n    return props.location?.pathname === routeName ? true : false;\n  }\n\n  return (<div>\n    <List>\n      {Routes.filter(x => !x.hide).map((prop, key) => {\n        return (\n          <ListItem component={Link} button\n            to={prop.navurl || prop.path}\n            style={{ textDecoration: 'none' }}\n            key={key}\n            selected={activeRoute(prop.path)}>\n            <ListItemIcon>\n              <prop.icon />\n            </ListItemIcon>\n            <ListItemText primary={prop.sidebarName} />\n          </ListItem >\n        );\n      })}\n    </List>\n  </div>);\n}\n\nexport default withRouter(SideNavBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <div>Charts...</div>\n    // <React.Fragment>\n    //   <Title>Today</Title>\n    //   <ResponsiveContainer>\n    //     <LineChart\n    //       data={data}\n    //       margin={{\n    //         top: 16,\n    //         right: 16,\n    //         bottom: 0,\n    //         left: 24,\n    //       }}\n    //     >\n    //       <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n    //       <YAxis stroke={theme.palette.text.secondary}>\n    //         <Label\n    //           angle={270}\n    //           position=\"left\"\n    //           style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n    //         >\n    //           Sales ($)\n    //         </Label>\n    //       </YAxis>\n    //       <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n    //     </LineChart>\n    //   </ResponsiveContainer>\n    // </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return(\n    <h2>Not Found!!!</h2>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Preferences from '../Preferences/Preferences';\nimport { GoogleLogin } from 'react-google-login';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\n\nimport NotFound from '../NotFound/NotFound';\n\nimport Routes from '../Routes';\n\nimport useToken from './useToken';\nimport {Copyright} from '../Copyright/Copyright';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Media Catalog Admin\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <BrowserRouter>\n          <Drawer variant=\"permanent\"\n            classes={{\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }} open={open}>\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <SideNavBar></SideNavBar>\n          </Drawer>\n\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <Redirect to=\"/dashboard\" />\n                    )\n                  }}\n                />\n                {Routes.map((prop, key) => {\n                  return (\n                    <Route path={prop.path} key={key}>\n                      <prop.component />\n                    </Route>\n                  );\n                })}\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport default function useToken() {\n    useEffect(() => {\n        window.setInterval(() => {\n            console.log('checking token status');\n            if (token && getToken() == null) {\n                internalSetToken(null);\n            }\n        }, 1000);  //check refresh token every 1 second\n    }, []);\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken?.tokenObj?.expires_at && new Date(userToken.tokenObj.expires_at) > new Date()) {\n            return userToken;\n        }\n        return null;\n    };\n\n    const [token, internalSetToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        const onlyValidToken = getToken();\n        if (onlyValidToken) {\n            internalSetToken(onlyValidToken);\n        }\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}