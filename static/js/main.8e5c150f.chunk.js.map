{"version":3,"sources":["components/Copyright/Copyright.js","components/Login/Login.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/Dashboard/Dashboard.js","components/ApiClient/MediaCatalogNetlifyClient.js","components/MediaCard/PlaylistSelectionDialog.js","components/MediaSourceList/MiniPoster.js","components/MediaCard/SourceExplorer.js","components/MediaCard/ViewSourceDialog.js","components/MediaCard/NewMovieCard.js","components/MediaCardList/MediaCardListComponent.js","components/MediaDirectory/MediaDirectory.js","components/RemoteUrlUpload/RemoteUrlUpload.js","components/Playlist/playlistDetails.js","components/Playlist/playlist.js","components/Playlist/playlistComponent.js","components/RemoteUrlUpload/CreateNewRequest/ChooseFilesToUpload.js","components/RemoteUrlUpload/CreateNewRequest/FinalStep.js","components/RemoteUrlUpload/CreateNewRequest.js","components/CreateMovie/Card.js","components/CreateMovie/CreateMovieByImdb.js","components/MediaSourceExplorer/MediaSourceExplorerComponent.js","components/MediaSourceList/SourceTypeComponent.js","components/ApiClient/TmdbClient.js","components/MediaSourceList/SearchMovieDialog.js","components/MediaSourceList/SimilarMovieAssign.js","components/MediaSourceList/MovieFetchComponent.js","components/MediaSourceList/MediaSourceListComponent.js","components/Routes.js","components/Preferences/Preferences.js","components/SideNavBar/SideNavBar.js","components/NotFound/NotFound.js","components/App/ResponsiveDrawer.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","setToken","classes","responseGoogle","res","Container","component","maxWidth","CssBaseline","className","Avatar","clientId","onSuccess","onFailure","cookiePolicy","Box","mt","Title","props","gutterBottom","children","createData","time","amount","undefined","Chart","useTheme","preventDefault","event","depositContext","flex","Deposits","Fragment","onClick","id","date","name","shipTo","paymentMethod","rows","seeMore","Orders","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","apiClient","_instance","axios","baseURL","interceptors","request","use","config","idToken","JSON","parse","localStorage","token","tokenId","headers","Authorization","AuthenticatedClient","PlaylistSelectionDialog","open","mediaId","selectedPlaylist","onClose","useState","playlists","setPlaylists","useEffect","a","get","allPlaylist","data","React","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","resource","push","put","splice","delete","Dialog","aria-labelledby","DialogTitle","DialogContent","style","dividers","FormControl","FormGroup","FormControlLabel","control","Checkbox","onChange","label","card","boxShadow","borderRadius","transform","bottom","fontFamily","fontSize","fontWeight","maxHeight","borderTopLeftRadius","borderTopRightRadius","background","tag","marginBottom","author","borderBottomLeftRadius","borderBottomRightRadius","common","white","contentoverride","titleclass","MiniPoster","posterPath","backpath","year","isTv","mode","tagline","action","mediaItemId","playlistIds","Card","CardMedia","src","CardHeader","subheader","titleTypographyProps","noWrap","subheaderTypographyProps","prettyBytes","require","SourceExplorer","rootTitle","setData","cursor","setCursor","onToggle","node","toggled","active","loading","Object","assign","utocall","encodeURIComponent","link","response","resolvedUrl","isPlayable","contentType","fileName","decodeURIComponent","URL","pathname","split","pop","anotherdata","parseInt","d2","itemData","webViewLink","renderedTitle","dialogPaper","minHeight","ViewSourceDialog","fullWidth","NewMovieCard","movie","showPlaylistSelectionDialog","setShowPlaylistSelectionDialog","showViewSourceDialog","setShowViewSourceDialog","anchorEl","setAnchorEl","IconButton","currentTarget","Boolean","MenuItem","playlistEl","x","playlistId","showViewSourceEl","backdropPath","itemType","MediaCardListComponent","items","isLoading","movieColumns","Grid","item","xs","sm","md","lg","CircularProgress","disableShrink","length","direction","justify","searchbar","myComponent","state","error","isLoaded","Headers","append","fetch","json","tempdata","console","log","this","setState","message","columns","options","filterType","download","print","Component","breadcrumb","PlaylistDetails","setLoading","setTitle","includes","playlistDetails","result","Breadcrumbs","Button","to","dayjs","relativeTime","extend","navlink","textDecoration","Playlist","setIsLoading","setRows","Paper","List","aria-label","ts","ListItem","button","ListItemText","primary","fromNow","PlaylistPage","useParams","handleSelectionChange","p","q","r","s","selectedData","i","index","onSelectionChange","zipFileUrl","defaultZipFileUrl","fetchUrl","responseAsJson","search","viewColumns","filter","pagination","onRowSelectionChange","FinalStep","selectedFiles","files","path","payload","fileUrl","method","body","stringify","ok","Error","status","actionsContainer","resetContainer","backdropIMG","numeral","details","backgroundSize","backgroundRepeat","backgroundImage","posterContainer","textAlign","poster","metadata","additionalDetails","MovCard","test","posterIMG","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","nestedDataToString","backdrop","rating","vote","format","styleofbg","CardContent","original_title","overview","release","runtime","nestedData","nestedArray","forEach","join","handleChange","e","target","findMovieIdByImdbId","v","imdbMovieApiUrl","responseJson","movie_results","fetchMovieID","imdbId","movieID","url","fetchApi","TextField","placeholder","defaultValue","then","homepage","poster_path","production_companies","release_date","vote_average","backdrop_path","wrapper","buttonSuccess","green","buttonError","red","fabProgress","top","left","buttonProgress","iconButton","input","SourceTypeComponent","getRenderValue","apiKey","tmdbClient","findMovie","movieId","findImdbId","tmdbId","apiUrl","resposne","external_ids","imdb_id","SearchMovieDialog","handleSelect","show","query","searchQuery","setSearchQuery","searchTv","setSearchTv","results","setResults","selectedId","setSelectedId","handleClose","setValue","Tabs","newValue","indicatorColor","textColor","Tab","icon","autoFocus","debounce","selected","ListItemAvatar","first_air_date","substr","DialogActions","disabled","SimilarMovieAssign","checkedItems","assignSelection","mediaSourceId","labelId","ListItemIcon","edge","tabIndex","disableRipple","inputProps","cover","controls","paddingLeft","playIcon","posterMedia","LightTooltip","withStyles","tooltip","Tooltip","MovieFetchComponent","handleMediaAssignment","avatarUrl","setAvatarUrl","setBackdropPath","setPosterPath","setPosterUrl","setYear","setOverview","hasResult","setHasResult","setResult","showDialog","setShowDialog","similarMediaResults","setSimilarMediaResults","similarMediaItemShowDialog","setSimilarMediaItemShowDialog","deleteIcon","innerDeleteHandler","assigncurrentmedia","isthisitemtv","post","similarMediaResponse","handleSelectSearchDialog","outputofdialog","miniPoster","chip","Chip","onDelete","clickable","assignedItems","payloadToSend","interactive","enterDelay","placement","arrow","Routes","sidebarName","fixedHeightPaper","clsx","DashboardIcon","ShoppingCartIcon","hide","setSearch","MovieIcon","RemoteUrlUpload","CloudUploadIcon","useForm","register","handleSubmit","errors","activeStep","setActiveStep","setZipFileUrl","setSelectedFiles","handleFileSelection","steps","getStepContent","step","type","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","square","elevation","AddIcon","SubscriptionsIcon","CreateMovieByImdb","sourceid","pms","mediaSourceResponse","setRootUrl","setTreeRootUrl","uniqueid","now","toString","Math","random","toUpperCase","rootUrl","attributes","firstuniqueid","initialData","onNodeClickCallback","ctx","isTraversed","nextData","clone","leafnode","findNodeFromName","hasErrors","parentNode","keyName","foundele","nodeSize","y","foreignObjectProps","InputProps","endAdornment","InputAdornment","onNodeClick","translate","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","Fab","renderForeignObjectNode","AccountTreeIcon","page","setPage","pageSize","rowCount","setRowCount","pendingSelection","setPendingSelection","fxhandleMediaAssignment","updatedRows","matchingResult","find","field","headerName","sortable","renderCell","valueFormatter","onlyPending","total","ToggleButtonGroup","exclusive","ev","val","ToggleButton","autoHeight","paginationMode","onPageChange","params","checkboxSelection","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","withRouter","activeRoute","routeName","location","prop","key","navurl","NotFound","ResponsiveDrawer","handleDrawerClose","hiddenDrawerVariant","useMediaQuery","down","Drawer","Divider","App","handle","window","setInterval","getToken","internalSetToken","clearInterval","tokenString","getItem","userToken","tokenObj","expires_at","setItem","onlyValidToken","useToken","setOpen","AppBar","Toolbar","exact","render","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e5c150f.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Media Catalog UI\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}  ","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Avatar, CssBaseline, Box, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport {Copyright} from '../Copyright/Copyright';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n  const classes = useStyles();\n  const responseGoogle = (res) => {    \n    setToken(res);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <GoogleLogin\n          clientId=\"345350504609-1moo0gfi27h0jj2qaim5ed1iohgprs99.apps.googleusercontent.com\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>    \n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <div>Charts...</div>\n    // <React.Fragment>\n    //   <Title>Today</Title>\n    //   <ResponsiveContainer>\n    //     <LineChart\n    //       data={data}\n    //       margin={{\n    //         top: 16,\n    //         right: 16,\n    //         bottom: 0,\n    //         left: 24,\n    //       }}\n    //     >\n    //       <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n    //       <YAxis stroke={theme.palette.text.secondary}>\n    //         <Label\n    //           angle={270}\n    //           position=\"left\"\n    //           style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n    //         >\n    //           Sales ($)\n    //         </Label>\n    //       </YAxis>\n    //       <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n    //     </LineChart>\n    //   </ResponsiveContainer>\n    // </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../SideNavBar/SideNavBar';\nimport Chart from '../Chart';\nimport Deposits from '../Deposits';\nimport Orders from '../Orders';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    \n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          \n      \n    \n  );\n}","import axios from 'axios';\n\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://mediacatalog.netlify.app/.netlify/functions/server/'\n    });\n    _instance.interceptors.request.use(config => {        \n        const idToken = JSON.parse(localStorage.token).tokenId;\n        config.headers.Authorization = 'Bearer ' + idToken;\n        return config;\n    });\n    return _instance;\n}\n\nexport const apiClient = AuthenticatedClient();","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, Checkbox, FormGroup, FormControlLabel, FormControl } from '@material-ui/core';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport const PlaylistSelectionDialog = ({ open, mediaId, selectedPlaylist, onClose }) => {\n    const theme = useTheme();\n    const [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        if (open) {\n            (async () => {\n                const allPlaylist = await apiClient.get('playlists');\n                setPlaylists(allPlaylist.data);\n            })();\n        }\n    }, [open]);\n    const [checked, setChecked] = React.useState(selectedPlaylist);\n\n    const handleToggle = (value) => async () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        const resource = `items/${mediaId}/playlists/${value}`;\n        if (currentIndex === -1) {\n            newChecked.push(value);\n            setChecked(newChecked);\n            await apiClient.put(resource);\n        } else {\n            newChecked.splice(currentIndex, 1);\n            setChecked(newChecked);\n            await apiClient.delete(resource);\n        }\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            maxWidth='sm'\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Playlist...</DialogTitle>\n            <DialogContent style={{ width: 240 }} dividers>\n                <FormControl>\n                    <FormGroup>\n                        {playlists.map((value) => {\n                            return (\n                                <FormControlLabel\n                                    key={value.id}\n                                    control={<Checkbox checked={checked.indexOf(value.id) !== -1}\n                                        onChange={handleToggle(value.id)}\n                                        color='primary'\n                                        name={value.id} />}\n                                    label={value.title}\n                                />\n                            );\n                        })}\n                    </FormGroup>\n                </FormControl>\n            </DialogContent>\n        </Dialog>\n    );\n}","import { Avatar, Box, Card, CardHeader, CardMedia, IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // width: 360,\n        // height: 275,\n        position: 'relative',\n        boxShadow: '0 8px 24px 0 rgba(0,0,0,0.12)',\n        // overflow: 'visible',\n        borderRadius: '1.5rem',\n        transition: '0.4s',\n        '&:hover': {\n            transform: 'scale(1.02)',\n            '& $shadow': {\n                bottom: '-1.5rem',\n            },\n            '& $shadow2': {\n                bottom: '-2.5rem',\n            },\n        },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     zIndex: 0,\n        //     display: 'block',\n        //     width: '100%',\n        //     bottom: -1,\n        //     height: '100%',\n        //     borderRadius: '1.5rem',\n        //     backgroundColor: 'rgba(0,0,0,0.08)',\n        // },\n    },\n    title: {\n        fontFamily: \"'Sen', sans-serif\",\n        fontSize: '1rem',\n        fontWeight: 800,\n        color: '#fff',\n    },\n    main: {\n        maxHeight: 385,\n        overflow: 'hidden',\n        borderTopLeftRadius: '1.5rem',\n        borderTopRightRadius: '1.5rem',\n        zIndex: 1,\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            display: 'block',\n            width: '100%',\n            height: '100%',\n            background: 'linear-gradient(to top, #014a7d, rgba(0,0,0,0))',\n        },\n    },\n    content: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        zIndex: 1,\n        padding: '1.5rem 1.5rem 1rem',\n    }, tag: {\n        display: 'inline-block',\n        fontFamily: \"'Sen', sans-serif\",\n        backgroundColor: '#ff5dac',\n        borderRadius: '0.5rem',\n        padding: '2px 0.5rem',\n        color: '#fff',\n        marginBottom: '0.5rem',\n    }, avatar: {\n        width: 36,\n        height: 36,\n    }, author: {\n        // zIndex: 1,\n        position: 'relative',\n        borderBottomLeftRadius: '1.5rem',\n        borderBottomRightRadius: '1.5rem',\n        backgroundColor: theme.palette.common.white\n    },\n    contentoverride: {\n        overflow: 'hidden'\n    },\n    titleclass: {\n        fontSize: '0.8rem',\n        fontWeight: 500\n    }\n}));\nexport const MiniPoster = ({ posterPath, backpath, title, year, isTv, tagline, mode, mediaItemId, playlistIds, action }) => {\n    const classes = useStyles();\n    const calculatedBackdrop = () => {\n        if (mode === 'portrait') {\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n        }\n\n        if (backpath)\n            return `https://image.tmdb.org/t/p/w780/${backpath}`;\n        else\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n    }\n    const calculatedPosterPath = () => {\n        return `https://image.tmdb.org/t/p/w92${posterPath}`\n    }\n\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <Box className={classes.main} position={'relative'}>\n                    <CardMedia src={calculatedBackdrop()} component=\"img\" />\n                    <div className={classes.content}>\n                        <div className={classes.tag}>{isTv ? 'TV' : 'Movie'}</div>\n                        <Typography variant={'h2'} className={classes.title}>\n                            {title} ({year})\n                    </Typography>\n                    </div>\n                </Box>\n                <CardHeader className={classes.author} classes={{\n                    content: classes.contentoverride\n                }} avatar={<Avatar src={calculatedPosterPath()} />}\n                    title={title}\n                    subheader={year}\n                    titleTypographyProps={{ noWrap: true, gutterBottom: false }}\n                    subheaderTypographyProps={{ noWrap: true }}\n                    action={action}\n                />\n            </Card>            \n        </div>\n    )\n}\n\nconst Mymenulist = () => {\n    const [show, setShow] = useState(false);\n    return (\n        <div>\n            <IconButton onClick={setShow(true)}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu open={show} onClose={() => setShow(false)}>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Playlist\n            </MenuItem>\n                <MenuItem onClick={() => { alert('you click me?') }}>\n                    Info\n            </MenuItem>\n            </Menu>\n        </div>\n\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\nimport { Treebeard } from 'react-treebeard';\nimport axios from 'axios';\nconst prettyBytes = require('pretty-bytes');\n\nexport const SourceExplorer = ({ mediaId, rootTitle }) => {\n    const [sources, setSources] = useState([]);\n\n    const [data, setData] = useState({});\n    const [cursor, setCursor] = useState(false);\n\n    const onToggle = async (node, toggled) => {\n        if (cursor) {\n            cursor.active = false;\n        }\n        node.active = true;\n        if (node.loading) {\n            node.toggled = toggled;\n            setData(Object.assign({}, data));\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?m=true&q=${encodeURIComponent(node.link)}`;\n            const response = await axios.get(utocall);\n            node.loading = false;\n\n            for (const resolvedUrl of response.data) {\n                const { isPlayable, contentType, size } = resolvedUrl;\n                const fileName = resolvedUrl.link && decodeURIComponent((new URL(resolvedUrl.link)).pathname.split('/').pop());\n\n                const anotherdata = {\n                    name: resolvedUrl.title || fileName,\n                    link: resolvedUrl.link,\n                    loading: !isPlayable,\n                    children: []\n                }\n                if (isPlayable) {\n                    anotherdata.name = `${anotherdata.name} (${prettyBytes(parseInt(size))}) (${contentType})`;\n                }\n\n                node.children.push(anotherdata);\n            }\n        } else if (node.children) {\n            node.toggled = toggled;\n        }\n        setCursor(node);\n        setData(Object.assign({}, data));\n    }\n\n    useEffect(() => {\n        (async () => {\n            const allPlaylist = await apiClient.get(`items/${mediaId}/mediasources`);            \n\n            const d2 = {\n                name: rootTitle,\n                toggled: true,\n                children: []\n            }\n\n            for (const itemData of allPlaylist.data) {\n                const { webViewLink, renderedTitle } = itemData;\n                d2.children.push({\n                    name: renderedTitle,\n                    link: webViewLink,\n                    loading: true,\n                    children: []\n                });\n            }\n            setData(d2);\n        })();\n    }, [mediaId]);\n\n    return (\n        <div>\n            <Treebeard data={data} onToggle={onToggle} />\n        </div>\n    )\n\n}","import React, { useEffect, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { SourceExplorer } from './SourceExplorer';\n\n\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\nexport const ViewSourceDialog = ({ open, mediaId, rootTitle, onClose }) => {\n    const classes = useStyles();\n    if (open) {\n        return (<Dialog\n            open={open}\n            onClose={onClose}\n            fullWidth={true}\n            classes={{ paper: classes.dialogPaper }}\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle>Sources...</DialogTitle>\n            <DialogContent dividers>\n                <SourceExplorer mediaId={mediaId} rootTitle={rootTitle} />\n            </DialogContent>\n        </Dialog>\n        );\n    } else {\n        return <div></div>\n    }\n}","import { useState } from \"react\";\nimport { MiniPoster } from \"../MediaSourceList/MiniPoster\";\n\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { PlaylistSelectionDialog } from '../MediaCard/PlaylistSelectionDialog';\nimport { ViewSourceDialog } from '../MediaCard/ViewSourceDialog';\n\n\nexport const NewMovieCard = ({ movie }) => {\n\n    const [showPlaylistSelectionDialog, setShowPlaylistSelectionDialog] = useState(false);\n    const [showViewSourceDialog, setShowViewSourceDialog] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePlaylistMenuItemClick = () => {\n        setAnchorEl(null);\n        setShowPlaylistSelectionDialog(true)\n    }\n\n    const handleViewSourcesClick = () => {\n        setAnchorEl(null);\n        setShowViewSourceDialog(true)\n    }\n\n    const action = <div>\n        <IconButton onClick={handleClick}>\n            <MoreVertIcon />\n        </IconButton>\n        <Menu anchorEl={anchorEl} onClose={() => setAnchorEl(null)} open={Boolean(anchorEl)} >\n            <MenuItem onClick={handlePlaylistMenuItemClick}>\n                Save to Playlist\n            </MenuItem>\n            <MenuItem onClick={handleViewSourcesClick}>\n                View Sources\n            </MenuItem>\n        </Menu>\n    </div>\n\n    const playlistEl = <PlaylistSelectionDialog open={showPlaylistSelectionDialog} selectedPlaylist={movie.playlistIds.map(x=>x.playlistId)}\n        mediaId={movie.id}\n        onClose={() => { setShowPlaylistSelectionDialog(false) }}\n    />\n\n    const showViewSourceEl = <ViewSourceDialog open={showViewSourceDialog}\n        mediaId={movie.id}\n        rootTitle={movie.title}\n        onClose={() => { setShowViewSourceDialog(false) }}\n    />\n\n\n    return <div>\n        <MiniPoster backpath={movie.backdropPath}\n            isTv={movie.itemType === 'tv'}\n            posterPath={movie.posterPath}\n            title={movie.title}\n            year={movie.year}\n            tagline={movie.tagline}\n            mediaItemId={movie.id}\n            playlistIds={movie.playlistIds}\n            mode=\"portrait\"\n            action={action}\n        />\n        {playlistEl}\n        {showViewSourceEl}\n    </div>\n}","import React from 'react';\nimport { Grid, LinearProgress, CircularProgress } from '@material-ui/core';\nimport MovieCard from \"../MediaCard/MediaCardComponent\";\nimport { NewMovieCard } from '../MediaCard/NewMovieCard';\n\n\nexport const MediaCardListComponent = ({ items, isLoading }) => {\n    \n    // const [movies, setMovies] = React.useState(items);\n\n    const deleteHandler = (mediaId) => {\n        const moviesAfterRemove = items.filter(x=>x.id!=mediaId);\n        // setMovies(moviesAfterRemove);        \n    };\n    const movieColumns = items ? items.map((movie) => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={movie.id}>\n            <NewMovieCard movie={movie}></NewMovieCard>\n            {/* <MovieCard movie={movie} handleItemRemove={deleteHandler} /> */}\n        </Grid>\n    )) : null;\n    if(isLoading){\n        return <CircularProgress disableShrink />\n    }\n    else if (movieColumns?.length) {\n        return (\n            <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={3}>\n                {movieColumns || \"hello\"}\n            </Grid>\n        );\n    } else {\n        return <div>No items found</div>\n    }\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { debounce } from '@material-ui/core';\nimport {MediaCardListComponent} from '../MediaCardList/MediaCardListComponent';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchbar: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function MediaDirectory() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const classes = useStyles();\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const searchQuery = search;\n      setLoading(true);\n      const result = await apiClient.get(`items?q=${searchQuery}`);\n      if (search === searchQuery) {\n        setData(result.data);\n        setLoading(false);\n      }\n    })();\n  }, [search]);\n\n  return (\n    <div>\n      <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n        onChange={debounce(handleOnChange, 250)} \n        defaultValue={search} className={classes.searchbar} />\n      <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n    </div>\n  );\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        const columns = [\"ts\", \"requestId\", \"fileName\", \"sequence\", \"status\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false\n        };\n\n        const { error, isLoaded, data} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Remote Url Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}\n\nexport default myComponent;","import React, { useState, useEffect } from 'react';\nimport { MediaCardListComponent } from '../MediaCardList/MediaCardListComponent'\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\nimport { Breadcrumbs, Typography, makeStyles, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    breadcrumb: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const PlaylistDetails = ({ playlistId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const classes = useStyles();\n    const [title, setTitle] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            if (['extramovies', 'hdhub'].includes(playlistId)) {\n                setTitle(playlistId);\n            } else {\n                const playlistDetails = await apiClient.get(`playlists/${playlistId}`);\n                setTitle(playlistDetails.data.title);\n            }\n            const result = await apiClient.get(`playlists/${playlistId}/items?pageSize=100`);\n            setData(result.data.items);\n            setLoading(false);\n        })();\n    }, [playlistId]);\n\n    return (\n        <div>\n            <Breadcrumbs className={classes.breadcrumb}>\n                {/* <Link color=\"primary\" to='/playlist'>Playlists</Link> */}\n                <Button color='primary' component={Link} to='/playlist'>Playlists</Button>\n                <Typography>{title}</Typography>\n            </Breadcrumbs>\n            <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n        </div>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Breadcrumbs, List, ListItem, ListItemText, ListSubheader, Paper, Typography } from '@material-ui/core';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    navlink: {\n        textDecoration: 'none',\n        '& :visited': {\n            color: 'red'\n        }\n    }, breadcrumb: {\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n}));\n\n\n\nexport const Playlist = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [rows, setRows] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        (async () => {\n            const response = await apiClient.get('/playlists');\n            // setRows(response.data);\n            setRows([...response.data, ...[{ title: 'Hdhub', id: 'hdhub' }, { title: 'Extramovies', id: 'extramovies' }]]);\n            setIsLoading(false);\n        })();\n    }, []);\n\n    return <div>\n        <Breadcrumbs className={classes.breadcrumb}>\n            <Typography>Playlist</Typography>\n        </Breadcrumbs>\n        <Paper className={classes.paper}>\n            <List component=\"nav\" className={classes.root} aria-label=\"Playlist\">\n                {\n                    isLoading ? <div>Loading...</div> :\n                        rows?.map(({ id, title, ts }) => {\n                            return <ListItem button component={Link} to={`/playlistdetails/${id}`}>\n                                <ListItemText primary={title}\n                                    secondary={dayjs(ts).fromNow()}\n                                />\n                            </ListItem>\n                        })\n                }\n            </List>\n        </Paper>\n\n    </div>\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PlaylistDetails } from './playlistDetails'\nimport { Playlist } from '../Playlist/playlist'\nexport const PlaylistPage = () => {\n    let { id } = useParams();\n    if (id) {\n        return (\n            <PlaylistDetails playlistId={id}></PlaylistDetails>\n        );\n    } else {\n        return (\n            <Playlist></Playlist>\n        );\n    }\n}","import React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nexport default class myComponent extends React.Component {\n    constructor(props) {\n        // debugger;\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            zipFileUrl: props.defaultZipFileUrl,\n            onSelectionChange: props.onSelectionChange\n        };\n\n    }\n\n    async componentDidMount() {\n        const fetchUrl = `https://mediacatalogdirectorylisting.herokuapp.com/api/zip/listFiles?zipFileUrl=${encodeURIComponent(this.state.zipFileUrl)}`;\n        const response = await fetch(fetchUrl);\n        try {\n            const responseAsJson = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: responseAsJson\n            });\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n\n    }\n\n    handleSelectionChange = (p, q, r, s) => {\n        const selectedData = q.map(i => this.state.data[i.index]);\n        this.state.onSelectionChange && this.state.onSelectionChange(selectedData);\n    }\n\n    render() {\n        const columns = [\"path\", \"uncompressedSize\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false,\n            search: false,\n            viewColumns: false,\n            filter: false,\n            pagination: false,\n            onRowSelectionChange: this.handleSelectionChange\n        };\n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: We have some errrors</div>;\n        } else if (!isLoaded) {\n            return <div>Fetching files inside zip file...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}","import React from 'react';\n\nexport default class FinalStep extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            selectedFiles: props.selectedFiles,\n            zipFileUrl: props.zipFileUrl\n        };\n    }\n\n    async componentDidMount() {        \n        const files = this.state.selectedFiles.map(i => i.path);\n        const payload = {\n            fileUrl: this.state.zipFileUrl,\n            files\n        };\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        headers.append(\"content-type\", \"application/json\");\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        try {\n            const response = await fetch(apiUrl, { headers: headers, method: 'POST', body: JSON.stringify(payload) });\n            if (response.ok) {\n                const tempdata = await response.json();\n\n                this.setState({\n                    isLoaded: true,\n                    data: tempdata\n                });\n            } else {\n                throw Error(`Unexpected response code receieved ${response.status}`);\n            }\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n    }\n    render() {\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Submitting Request...</div>;\n        } else {\n            return <span>Success!</span>;\n        }\n    }\n}","import { React, useState } from 'react';\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ChooseFilesToUpload from './CreateNewRequest/ChooseFilesToUpload';\nimport ChooseFilesToUploadFinalStep from './CreateNewRequest/FinalStep';\n\nimport { FormHelperText, TextField, InputLabel, Input, FormControl, Paper, Grid, Typography, Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\n\n// import FormInput from \"./../Controls/index\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Enter a zip file URL', 'Choose Files to Upload', 'Finish'];\n}\n\n\nexport default function App() {\n    const { control, register, handleSubmit, errors } = useForm();\n    const onSubmit = data => { alert('hello'); console.log(data); }\n\n    const classes = useStyles();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [zipFileUrl, setZipFileUrl] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleChange = (e) => {\n        setZipFileUrl(e.target.value);\n    };\n\n    const handleFileSelection = (e) => {\n        setSelectedFiles(e);\n    };\n\n    const steps = getSteps();\n\n    function getStepContent(step) {        \n        switch (step) {\n            case 0:\n                return <TextField name=\"fileUrl\" type=\"URL\" defaultValue={zipFileUrl} fullWidth onChange={handleChange} />;\n            case 1:\n                return <ChooseFilesToUpload defaultZipFileUrl={zipFileUrl} onSelectionChange={handleFileSelection} />;\n            case 2:\n                return <ChooseFilesToUploadFinalStep selectedFiles={selectedFiles} zipFileUrl = {zipFileUrl} />;\n            default:\n                return 'unknown step'\n        }\n    }\n\n    const handleNext = () => {        \n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                  </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )}\n            </div>\n            {/* <form onSubmit={handleSubmit(onSubmit)}>\n                <Paper style={{ padding: 16 }}>\n                    <Typography  >\n                        New Request Form\n                        </Typography>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField name=\"zipFileUrl\" error={!!errors.username} label=\"Zip File URL\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"URL\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField name=\"username\" error={!!errors.username} label=\"Username\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"email\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid container item xs={12} justify=\"flex-end\">\n                            <Button color=\"primary\" type=\"submit\" variant=\"contained\" fullWidth>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </form> */}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\n\n// import './Card.scss';\nimport { Card, CardContent, Typography, CardMedia, CardHeader, Avatar, IconButton, Grid, Divider } from '@material-ui/core';\nimport { makeStyles, rgbToHex, withStyles } from '@material-ui/core/styles';\n\nlet numeral = require('numeral');\nlet backdropIMG;\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: '20px',\n        display: 'flex',\n        background: 'rgba(0,0,0,.85)'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        flex: '1 0 auto',\n        color: 'white',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,.85) 15%,rgba(0,0,0,.2) 40%,#000 90%)',\n        minHeight: '500px'\n    },\n    posterContainer: {\n        textAlign: 'center'\n    },\n    poster: {        \n        width: '120px',\n        [theme.breakpoints.up('md')]:{\n            width: '200px'\n        }\n    },\n    tagline: {\n        display: 'block',\n        paddingBottom: '0.25em',\n        color: 'limeGreen',\n        fontSize: '1.3em'\n    },\n    metadata: {\n        display: 'block',\n        color: 'limeGreen',\n    },\n    additionalDetails: {\n        margin: \"35px 0 20px\"\n    }\n}));\n\nexport default function MovCard({ data, test }) {\n    const classes = useStyles();\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\n    let rating = '';\n\n    // conditional statements for no data\n    if (data.vote === 'undefined' || data.vote === 0) {\n        rating = noData\n    } else {\n        rating = data.vote\n    };\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n        totalRevenue = noData\n    } else {\n        totalRevenue = numeral(data.revenue).format('($0,0)');\n    };\n\n    if (data.poster == null) {\n        posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    const styleofbg = `url(${backdropIMG})`;\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <div className={classes.details} style={{ backgroundImage: styleofbg }}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                            {data.original_title}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" className={classes.tagline}>\n                            {data.tagline}\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            <Grid container>\n                                <Grid item xs={9}>\n                                    {data.overview}\n                                    <Grid container className={classes.additionalDetails}>\n                                        <Grid item md={3}>\n                                            Original Release: <span className={classes.metadata}>{data.release}</span>\n                                    Box Office: <span className={classes.metadata}>{totalRevenue}</span>\n                                        </Grid>\n                                        <Grid item md={3}>\n                                            Running Time: <span className={classes.metadata}>{data.runtime} mins</span>\n                                Rating: <span className={classes.metadata}>{rating}</span>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={3} className={classes.posterContainer}>\n                                    <img src={posterIMG} className={classes.poster}></img>\n                                    {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n                                </Grid>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n                </div>\n                {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n            </Card>\n        </div>\n    );\n\n\n    function nestedDataToString(nestedData) {\n        let nestedArray = [],\n            resultString;\n        if (nestedData !== undefined) {\n            nestedData.forEach(function (item) {\n                nestedArray.push(item.name);\n            });\n        }\n        resultString = nestedArray.join(', '); // array to string\n        return resultString;\n    };\n\n}\n","import React, { Component, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Card from './Card';\n\nclass myComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null,\n            imdbId: 'tt0468569'\n        };\n    }\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return <div id=\"createMovieContainer000001\">\n            <TextField name=\"imdbId\" label=\"IMDB Id\" placeholder=\"Enter IMDB Id\" fullWidth\n                onChange={this.fetchMovieID} defaultValue={this.state.imdbId} />            \n            <Card data={this.state} />\n        </div>\n    }\n\n\n    // the api request function\n    fetchApi(url) {\n\n        fetch(url).then((res) => res.json()).then((data) => {\n            // update state with API data\n            this.setState({\n                movieID: data.id,\n                original_title: data.original_title,\n                tagline: data.tagline,\n                overview: data.overview,\n                homepage: data.homepage,\n                poster: data.poster_path,\n                production: data.production_companies,\n                production_countries: data.production_countries,\n                genre: data.genres,\n                release: data.release_date,\n                vote: data.vote_average,\n                runtime: data.runtime,\n                revenue: data.revenue,\n                backdrop: data.backdrop_path\n            })\n        })\n    }\n\n    findMovieIdByImdbId = async (v) => {\n        const imdbMovieApiUrl = `https://api.themoviedb.org/3/find/${v}?&api_key=cfe422613b250f702980a3bbf9e90716&external_source=imdb_id`;\n        const response = await fetch(imdbMovieApiUrl);\n        const responseJson = await response.json();\n        return responseJson.movie_results && responseJson.movie_results[0] && responseJson.movie_results[0].id;\n    }\n\n    fetchMovieID = async (e) => {\n        const imdbId = e.target.value;\n        this.setState({ imdbId: imdbId });\n        const movieID = await this.findMovieIdByImdbId(imdbId);\n        if (movieID) {\n            let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n            this.fetchApi(url);\n        }\n    }\n\n    async componentDidMount() {        \n        const movieID = await this.findMovieIdByImdbId(this.state.imdbId);\n        let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n        this.fetchApi(url)\n    }\n}\n\nexport default myComponent;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fab, Tooltip, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ErrorIcon from '@material-ui/icons/Edit';\nimport Tree from 'react-d3-tree';\nimport axios from 'axios';\nimport clone from 'clone';\nimport { Link, useParams } from 'react-router-dom';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonError: {\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }, iconButton: {\n        padding: 10,\n    }, input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n\nexport const MediaSourceExplorerComponent = ({ items, isLoading }) => {\n    let { sourceid } = useParams();\n    let pms = useParams();\n    console.log(pms, sourceid);\n\n    useEffect(() => {\n        console.log('calling me..');\n        (async () => {\n            console.log('calling me anotehr..');\n            const mediaSourceResponse = await apiClient.get(`mediasources/${sourceid}`);\n            const { webViewLink } = mediaSourceResponse.data;\n            console.log(webViewLink)\n            setRootUrl(webViewLink);\n            setTreeRootUrl();\n        })();\n    }, []);\n\n    const classes = useStyles();\n    const uniqueid = () => { return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase(); }\n    const [rootUrl, setRootUrl] = useState('');\n\n    const handleRootUrlOnChange = (event) => {\n        const { value } = event.target;\n        setRootUrl(value);\n    };\n\n    const setTreeRootUrl = () => {\n        setData({\n            name: rootUrl,\n            attributes: {\n                url: rootUrl,\n                id: uniqueid()\n            }\n        })\n    };\n\n    const firstuniqueid = uniqueid();\n    const initialData = {\n        name: rootUrl,\n        attributes: {\n            url: rootUrl,\n            id: firstuniqueid\n        }\n    };\n\n\n    const [data, setData] = useState(initialData);\n\n    const renderForeignObjectNode = ({\n        nodeDatum,\n        toggleNode,\n        foreignObjectProps\n    }) => (\n        <foreignObject {...foreignObjectProps} >\n            <div className={classes.wrapper}>\n                <Tooltip title={<React.Fragment>\n                    Name: {nodeDatum.name}\n                    <br></br>\n                        Url: {nodeDatum.attributes.url}\n                </React.Fragment>}>\n                    <Fab\n                        color=\"primary\"\n                        className={nodeDatum.attributes.hasErrors && classes.buttonError}\n                        onClick={() => {\n                            if (!nodeDatum.attributes.isTraversed) {\n                                if (!nodeDatum.attributes.loading) {\n                                    nodeDatum.attributes.hasErrors = false;\n                                    nodeDatum.attributes.loading = true;\n                                    onNodeClickCallback(nodeDatum);\n                                }\n                            }\n                            toggleNode();\n                        }}\n                    >\n                        {nodeDatum.attributes.hasErrors && <ErrorIcon />}\n                    </Fab>\n                </Tooltip>\n                {nodeDatum.attributes.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n            </div>\n        </foreignObject>\n    );\n\n    const onNodeClickCallback = async (ctx) => {\n        if (ctx.attributes.isTraversed) return;\n        const nextData = clone(data);\n        const leafnode = findNodeFromName(nextData, ctx.attributes.id);\n        try {\n            leafnode.attributes.hasErrors = false;\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?q=${encodeURIComponent(ctx.attributes.url)}`;\n            const response = await axios.get(utocall);\n            const children = [];\n            for (const resolvedUrl of response.data) {\n                const anotherdata = {\n                    name: resolvedUrl.title, attributes: {\n                        url: resolvedUrl.link,\n                        id: uniqueid()\n                    }\n                }\n                children.push(anotherdata);\n            }\n            leafnode.attributes.isTraversed = true;\n            leafnode.children = children;\n        } catch (error) {\n            leafnode.attributes.hasErrors = true;\n            leafnode.attributes.isLoading = false;\n        }\n        setData(nextData);\n    };\n\n    function findNodeFromName(parentNode, keyName) {\n        if (parentNode.attributes.id === keyName) {\n            return parentNode;\n        } else if (parentNode.children?.length) {\n            for (const childelement of parentNode.children) {\n                const foundele = findNodeFromName(childelement, keyName);\n                if (foundele) return foundele;\n            }\n        }\n        return null;\n    }\n\n    const nodeSize = { x: 200, y: 200 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: -34, y: -34 };\n\n    return <div>\n\n        <div id=\"treeWrapper\" style={{ height: '40em' }}>\n            {rootUrl}\n            <TextField label=\"Root Url\" defaultValue={rootUrl} placeholder=\"Root Url\" fullWidth InputProps={{\n                endAdornment: (<InputAdornment>\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick={setTreeRootUrl}>\n                        <SearchIcon />\n                    </IconButton>\n                </InputAdornment>)\n            }}\n                onChange={handleRootUrlOnChange} />\n            <Tree data={data}\n                orientation='vertical'\n                onNodeClick={onNodeClickCallback}\n                nodeSize={nodeSize}\n                translate={{ x: 100, y: 100 }}\n                renderCustomNodeElement={(rd3tProps) =>\n                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                }\n            />\n        </div>\n    </div>\n}","import { Typography } from '@material-ui/core';\nexport default function SourceTypeComponent({ value }) {\n    const getRenderValue = () => {\n        switch (value) {\n            case 'hdhub':\n                return 'HH'                \n            case 'extramovies':\n                return 'EM'                \n            default:\n                return value                \n        }\n    }    \n    return <Typography variant=\"body2\" color=\"textSecondary\">{getRenderValue()}</Typography>\n}","import axios from 'axios';\nconst apiKey = 'cfe422613b250f702980a3bbf9e90716';\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://api.themoviedb.org/3'\n    });\n\n    return {\n        findMovie: (movieId) => {\n\n        },\n        findImdbId: async (tmdbId, isTv) => {\n            let apiUrl = `${isTv ? 'tv' : 'movie'}/${tmdbId}?api_key=${apiKey}&language=en-US&append_to_response=external_ids`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data.external_ids.imdb_id;\n        },\n        search: async (q, isTv) => {\n            let apiUrl = `search/${isTv ? 'tv' : 'movie'}?api_key=${apiKey}&language=en-US&&query=${encodeURIComponent(q)}`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data;\n        }\n    }\n}\nexport const tmdbClient = AuthenticatedClient();","import { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogActions, debounce, Tabs, Tab } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport TvIcon from '@material-ui/icons/Tv';\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\n\nexport const SearchMovieDialog = ({ handleSelect, show, query, isTv }) => {\n    // const [open, setOpen] = useState(show);\n    const [searchQuery, setSearchQuery] = useState(query);\n    const [searchTv, setSearchTv] = useState(isTv);\n    const [results, setResults] = useState([]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    const classes = useStyles();\n    //const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => {\n        handleSelect(null);\n    };\n\n    const handleItemSelectionClose = () => {\n        handleSelect({\n            id: selectedId,\n            isTv: searchTv\n        });\n    };\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setSearchQuery(value);\n    };\n\n    useEffect(() => {\n        if (!searchQuery || !show) return;\n        (async () => {\n            console.log(searchTv);\n            const { results } = await tmdbClient.search(searchQuery, searchTv);\n            setResults(results);\n        })();\n    }, [searchQuery, show, searchTv]);\n\n    const [value, setValue] = useState(isTv ? 1 : 0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setSearchTv(newValue === 1);\n        setSelectedId(0);\n    };\n\n    return (<div>\n        <Dialog open={show}\n            fullWidth={true}\n            classes={{ paper: classes.dialogPaper }}\n            onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {/* <DialogTitle id=\"form-dialog-title\">Search</DialogTitle> */}\n            <DialogTitle style={{ padding: 0 }}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\">\n                    <Tab icon={<MovieIcon />} label=\"MOVIES\" />\n                    <Tab icon={<TvIcon />} label=\"TV\" />\n                </Tabs>\n            </DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    defaultValue={searchQuery}\n                    fullWidth\n                    onChange={debounce(handleOnChange, 250)}\n                />\n\n                {/* <FormControlLabel control={<Checkbox defaultChecked={searchTv}\n                    onChange={handleSetTv} />} label=\"TV\" /> */}\n                {\n                    results && (<List component=\"nav\">\n                        {results.map((value) => {\n                            return (<ListItem\n                                key={value.id}\n                                button\n                                selected={selectedId === value.id}\n                                onClick={() => setSelectedId(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={value.poster_path && `https://image.tmdb.org/t/p/w92${value.poster_path}`}></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={`${value.title || value.name}`}\n                                    secondary={(value.release_date || value.first_air_date)?.substr(0, 4)} />\n                            </ListItem>)\n                        })}\n                    </List>)\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleItemSelectionClose} color=\"primary\" disabled={selectedId === 0}>\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n    </div>);\n}","import {\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemIcon, ListItemText\n} from \"@material-ui/core\"\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\nexport const SimilarMovieAssign = ({ show, mediaItemId, query, handleSelect, items }) => {\n    const classes = useStyles();\n    \n    \n    const [checked, setChecked] = useState([]);\n    const handleClose = () => {\n        handleSelect();\n    };\n\n    useEffect(()=>{\n        const checkedItems = items?.map(x => x.id) || [];\n        setChecked(checkedItems)\n    }, [items]);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const assignSelection = async () => {\n        for (const mediaSourceId of checked) {\n            await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        }\n        handleSelect(checked);\n    }\n\n    return (\n        <div>\n            <Dialog open={show}\n                fullWidth={true}\n                classes={{ paper: classes.dialogPaper }}\n                onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle>\n                    Related media items to {query}\n                </DialogTitle>\n                <DialogContent dividers>\n                    {\n                        items && (<List>\n                            {items.map((value) => {\n                                const labelId = `checkbox-list-label-${value.id}`;\n                                console.log('value is ', value);\n                                return (<ListItem key={value.id} button onClick={handleToggle(value.id)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={checked.indexOf(value.id) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={value.renderedTitle} />\n                                </ListItem>)\n                            })}\n                        </List>)\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={assignSelection} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import { Avatar, Box, Card, CardContent, CardHeader, CardMedia, Chip, Paper, Tooltip, Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { SearchMovieDialog } from './SearchMovieDialog'\nimport { MiniPoster } from './MiniPoster';\nimport { SimilarMovieAssign } from './SimilarMovieAssign';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: 320,\n        height: 162\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 0.65\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        // width: 151,\n        display: 'flex',\n        flex: 0.35\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    posterMedia: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 1)',\n        padding: 0,\n        borderRadius: '1.5rem'\n    },\n}))(Tooltip);\n\nexport const MovieFetchComponent = ({ value, isTv, mediaSourceId, mediaItemId, handleMediaAssignment\n}) => {\n    //const posterSize = 'w185';  //w92\n    const avatarSize = 'w92';  //w92\n    const posterSize = 'w185';  //w92\n    const backdropSize = 'w300';  //w92\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [backdropPath, setBackdropPath] = useState('');\n    const [posterPath, setPosterPath] = useState('');\n    const [posterUrl, setPosterUrl] = useState('');\n    const [title, setTitle] = useState(value);\n    const [year, setYear] = useState('');\n    const [overview, setOverview] = useState('');\n    const [hasResult, setHasResult] = useState(false);\n    const [result, setResult] = useState();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [showDialog, setShowDialog] = useState(false);\n\n    const [similarMediaResults, setSimilarMediaResults] = useState([]);\n\n\n    const [similarMediaItemShowDialog, setSimilarMediaItemShowDialog] = useState(false);\n\n    useEffect(() => {\n        if (!value) return;\n        (async () => {\n            const { results } = await tmdbClient.search(value, isTv);\n            if (results[0]) {\n                setHasResult(true);\n                setResult(results[0]);\n                setTitle(results[0].title || results[0].name);\n                setAvatarUrl(`https://image.tmdb.org/t/p/${avatarSize}${results[0].poster_path}`);\n                setPosterUrl(`https://image.tmdb.org/t/p/${posterSize}${results[0].poster_path}`);\n\n                //https://image.tmdb.org/t/p/original/hkBaDkMWbLaf8B1lsWsKX7Ew3Xq.jpg\n\n                setBackdropPath(results[0].backdrop_path);\n                setPosterPath(results[0].poster_path);\n\n\n\n                setYear(results[0].release_date?.substr(0, 4) || results[0].first_air_date?.substr(0, 4));\n                setOverview(results[0].overview);\n            }\n            setLoading(false);\n        })();\n    }, [value]);\n\n    const deleteIcon = hasResult ? <DoneIcon /> : null\n    const innerDeleteHandler = async () => {\n        const { id } = result;\n        await assigncurrentmedia(id, isTv);\n    }\n\n    const assigncurrentmedia = async (id, isthisitemtv) => {\n        let mediaItemId;\n        try {\n            const response = await apiClient.get(`/items/byExternalId/${id}?type=tmdb`);\n            mediaItemId = response.data.id;\n        } catch (error) {            \n            const response = await apiClient.post(`items/byExternalId/${id}?type=tmdb&tmdbHint=${isthisitemtv ? 'tv' : 'movie'}`);\n            mediaItemId = response.data.id;\n        }\n        await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        handleMediaAssignment && handleMediaAssignment([{ mediaItemId, mediaSourceId }]);\n\n        const similarMediaResponse = await apiClient.get(`mediasources?parsedTitle=${encodeURIComponent(value)}&onlyPendingMediaAssignment=true`);\n        if (similarMediaResponse.data.items && similarMediaResponse.data.items.length > 0) {\n            setSimilarMediaResults(similarMediaResponse.data.items);\n            setSimilarMediaItemShowDialog(true);\n        }\n    }\n\n    const showDialogHandler = () => {\n        setShowDialog(true);\n    }\n\n    const handleSelectSearchDialog = async (outputofdialog) => {\n        setShowDialog(false);\n        if (outputofdialog) {\n            await assigncurrentmedia(outputofdialog.id, outputofdialog.isTv);\n        }\n    }\n\n    const handleSelectAssignMovieDialog = (assignedItems) => {\n        setSimilarMediaItemShowDialog(false);\n        if (assignedItems) {\n            const payloadToSend = assignedItems.map(mediaSourceId => { return { mediaItemId, mediaSourceId } });\n            handleMediaAssignment && handleMediaAssignment(payloadToSend);\n        }\n    }\n\n    const miniPoster = <MiniPoster title={title} backpath={backdropPath} isTv={isTv} year={year} posterPath={posterPath} />\n    const chip = <Chip\n        size='medium'\n        avatar={<Avatar src={avatarUrl} />}\n        color=\"primary\" label={title || value}\n        variant=\"outlined\"\n        onClick={showDialogHandler}\n        onDelete={hasResult ? innerDeleteHandler : null}\n        deleteIcon={deleteIcon}\n        style={{ maxWidth: 240 }}\n        clickable></Chip>\n\n    if (mediaItemId) {\n        return <div>\n            <SimilarMovieAssign show={similarMediaItemShowDialog} mediaItemId={mediaItemId} query={value}\n                items={similarMediaResults}\n                handleSelect={handleSelectAssignMovieDialog} />\n            <span>{mediaItemId}</span>\n        </div>\n    } else if (loading) {\n        return <div>Loading...</div>;\n    }\n    else if (hasResult) {\n        return <div>\n            {/* <div onClick={() => setSimilarMediaItemShowDialog(true)} > Show</div> */}\n            <SearchMovieDialog show={showDialog} query={title} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            <LightTooltip interactive title={miniPoster} enterDelay={500} placement=\"right\" arrow>\n                {chip}\n            </LightTooltip></div>\n    } else {\n        return <div>\n            <SearchMovieDialog show={showDialog} query={title || value} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            {chip}\n        </div>\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColumns } from '@material-ui/data-grid';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { debounce, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SourceType from \"./SourceTypeComponent\";\nimport { MovieFetchComponent } from \"./MovieFetchComponent\";\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const MediaSourceListComponent = () => {\n    const [page, setPage] = useState(0);\n    const [pageSize] = useState(20);\n    const [rows, setRows] = useState([]);\n    const [rowCount, setRowCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [pendingSelection, setPendingSelection] = useState('Pending');\n    const classes = useStyles();\n\n    const fxhandleMediaAssignment = async (result) => {\n        const updatedRows = rows.map(x => {\n            const matchingResult = result.find(y => y.mediaSourceId === x.id);\n            if (matchingResult) {\n                x.mediaItemId = matchingResult.mediaItemId;\n            }\n            return x;\n        })\n        setRows(updatedRows);\n    };\n\n    const columns: GridColumns = [\n        { field: 'renderedTitle', headerName: 'Title', width: 340, sortable: false, flex: 1 },\n        {\n            field: 'parserInfo', headerName: 'Parser Title', sortable: false, width: 280, renderCell: ({ value, row }) => {\n                return <MovieFetchComponent\n                    value={value?.title || row.renderedTitle} isTv={value?.isTv}\n                    mediaSourceId={row.id}\n                    mediaItemId={row.mediaItemId}\n                    handleMediaAssignment={fxhandleMediaAssignment}\n                />\n            }\n        },\n        {\n            field: 'crawlerType', headerName: 'Source', sortable: false, width: 80, renderCell: ({ value }) => {\n                return <SourceType value={value}></SourceType>\n            }\n        },\n        { field: 'created', headerName: 'Created', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() },\n        { field: 'modified', headerName: 'Last Modified', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() }\n    ];\n\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setPage(0);\n        setSearch(value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const onlyPending = pendingSelection === 'Pending';\n            const response = await apiClient.get(`/mediasources?pageSize=${pageSize}&pageNumber=${page + 1}&q=${search}&onlyPendingMediaAssignment=${onlyPending}`);\n            setRowCount(response.data.total);\n            setRows(response.data.items);\n            setLoading(false);\n        })();\n    }, [page, search, pendingSelection, pageSize]);\n\n    const handlePageChange = (params) => {\n        const { page } = params;\n        setPage(page);\n    }\n\n    return <div>\n        <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n            onChange={debounce(handleOnChange, 250)}\n            defaultValue={search} className={classes.searchbar} />\n        <ToggleButtonGroup value={pendingSelection} exclusive onChange={(ev, val) => setPendingSelection(val)}>\n            <ToggleButton value=\"All\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"Pending\" >\n                Pending\n            </ToggleButton>\n        </ToggleButtonGroup>\n\n        <DataGrid\n            page={page}\n            autoHeight={true}\n            rows={rows}\n            columns={columns}\n            pageSize={pageSize}\n            paginationMode='server'\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowCount={rowCount}\n            checkboxSelection={false}\n            disableColumnMenu\n            disableColumnSelector\n            disableSelectionOnClick\n        />\n    </div>\n}","import Dashboard from './Dashboard/Dashboard';\nimport Preferences from './Preferences/Preferences';\nimport MediaDirectory from './MediaDirectory/MediaDirectory';\nimport RemoteUrlUpload from './RemoteUrlUpload/RemoteUrlUpload';\nimport { PlaylistPage } from './Playlist/playlistComponent';\nimport CreateNewRemoteUrlUpload from './RemoteUrlUpload/CreateNewRequest';\nimport CreateMovieByImdb from './CreateMovie/CreateMovieByImdb';\nimport { MediaSourceExplorerComponent } from './MediaSourceExplorer/MediaSourceExplorerComponent';\nimport { MediaSourceListComponent } from './MediaSourceList/MediaSourceListComponent';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nconst Routes = [\n    {\n        path: '/dashboard',\n        sidebarName: 'Dashboard',\n        component: Dashboard,\n        icon: DashboardIcon\n    },\n    {\n        path: '/preferences',\n        sidebarName: 'Preferences',\n        component: Preferences,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/movies',\n        sidebarName: 'Media Items',\n        component: MediaDirectory,\n        icon: MovieIcon\n    },\n    {\n        path: '/remoteuploads',\n        sidebarName: 'Remote Url Upload',\n        component: RemoteUrlUpload,\n        icon: CloudUploadIcon\n    },\n    {\n        path: '/createremoteuploads',\n        sidebarName: 'New Remote Url Upload',\n        component: CreateNewRemoteUrlUpload,\n        icon: AddIcon\n    },\n    {\n        path: '/playlist',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon\n    },\n    {\n        path: '/playlistdetails/:id',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon,\n        hide: true\n    },\n    {\n        path: '/movie/new',\n        sidebarName: 'New Movie by IMDB Id',\n        component: CreateMovieByImdb,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/explorer/:sourceid',\n        sidebarName: 'Media Source Explorer',\n        component: MediaSourceExplorerComponent,\n        icon: AccountTreeIcon,\n        hide: true\n    },\n    {\n        path: '/source',\n        sidebarName: 'Media Source',\n        component: MediaSourceListComponent,\n        icon: AccountTreeIcon\n    }\n];\n\nexport default Routes;","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { List, ListItemIcon, ListItemText, ListItem } from '@material-ui/core';\nimport Routes from '../Routes';\n\nconst SideNavBar = (props) => {\n  const activeRoute = (routeName) => {\n    return props.location?.pathname === routeName ? true : false;\n  }\n\n  return (<div>\n    <List>\n      {Routes.filter(x => !x.hide).map((prop, key) => {\n        return (\n          <ListItem component={Link} button\n            to={prop.navurl || prop.path}\n            style={{ textDecoration: 'none' }}\n            key={key}\n            selected={activeRoute(prop.path)}>\n            <ListItemIcon>\n              <prop.icon />\n            </ListItemIcon>\n            <ListItemText primary={prop.sidebarName} />\n          </ListItem >\n        );\n      })}\n    </List>\n  </div>);\n}\n\nexport default withRouter(SideNavBar);","import React from 'react';\n\nexport default function NotFound() {\n  return(\n    <h2>Not Found!!!</h2>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    }, drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n\n}));\n\nexport const ResponsiveDrawer = ({ open, handleDrawerClose }) => {\n    const theme = useTheme();\n    const hiddenDrawerVariant = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles();\n    return (\n        <Drawer variant={hiddenDrawerVariant ? \"temporary\" : \"permanent\"}\n            classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }} open={open}>\n            <div className={classes.toolbarIcon}>\n                <IconButton onClick={handleDrawerClose}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <SideNavBar></SideNavBar>\n        </Drawer>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\n\nimport NotFound from '../NotFound/NotFound';\n\nimport Routes from '../Routes';\n\nimport useToken from './useToken';\nimport { Copyright } from '../Copyright/Copyright';\nimport { ResponsiveDrawer } from './ResponsiveDrawer';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Media Catalog Admin\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <BrowserRouter>\n          <ResponsiveDrawer open={open} handleDrawerClose={handleDrawerClose} />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <Redirect to=\"/dashboard\" />\n                    )\n                  }}\n                />\n                {Routes.map((prop, key) => {\n                  return (\n                    <Route path={prop.path} key={key}>\n                      <prop.component />\n                    </Route>\n                  );\n                })}\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport default function useToken() {\n    useEffect(() => {\n        const handle = window.setInterval(() => {\n            console.log('checking token status', handle);\n            if (token && getToken() == null) {\n                internalSetToken(null);\n            }\n        }, 1000);  //check refresh token every 1 second\n        return () => clearInterval(handle); //cleanup\n    }, []);\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken?.tokenObj?.expires_at && new Date(userToken.tokenObj.expires_at) > new Date()) {\n            return userToken;\n        }\n        return null;\n    };\n\n    const [token, internalSetToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        const onlyValidToken = getToken();\n        if (onlyValidToken) {\n            internalSetToken(onlyValidToken);\n        }\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}