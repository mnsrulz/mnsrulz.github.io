{"version":3,"sources":["components/Copyright/Copyright.js","components/Login/Login.js","components/ApiClient/MediaCatalogNetlifyClient.js","components/MediaSourceList/MiniPoster.js","components/MediaCard/NewMovieCard.js","components/MediaCardList/MediaCardListComponent.js","components/MediaDirectory/MediaDirectory.js","components/RemoteUrlUpload/RemoteUrlUpload.js","components/Playlist/playlistDetails.js","components/Playlist/playlistGrid.js","components/Playlist/playlist.js","components/Playlist/playlistComponent.js","components/RemoteUrlUpload/CreateNewRequest/ChooseFilesToUpload.js","components/RemoteUrlUpload/CreateNewRequest/FinalStep.js","components/RemoteUrlUpload/CreateNewRequest.js","components/CreateMovie/Card.js","components/CreateMovie/CreateMovieByImdb.js","components/MediaSourceExplorer/MediaSourceExplorerComponent.js","components/MediaSourceList/SourceTypeComponent.js","components/ApiClient/TmdbClient.js","components/MediaSourceList/SearchMovieDialog.js","components/MediaSourceList/SimilarMovieAssign.js","components/MediaSourceList/MovieFetchComponent.js","components/MediaSourceList/MediaSourceListComponent.js","components/Routes.js","components/Dashboard/Dashboard.js","components/Preferences/Preferences.js","components/SideNavBar/SideNavBar.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/NotFound/NotFound.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","setToken","classes","responseGoogle","res","Container","component","maxWidth","CssBaseline","className","Avatar","clientId","onSuccess","onFailure","cookiePolicy","Box","mt","apiClient","_instance","axios","create","baseURL","interceptors","request","use","config","idToken","JSON","parse","localStorage","token","tokenId","headers","Authorization","AuthenticatedClient","card","position","boxShadow","borderRadius","transition","transform","bottom","title","fontFamily","fontSize","fontWeight","maxHeight","overflow","borderTopLeftRadius","borderTopRightRadius","zIndex","content","height","background","padding","tag","marginBottom","author","borderBottomLeftRadius","borderBottomRightRadius","common","white","contentoverride","titleclass","MiniPoster","posterPath","backpath","year","isTv","mode","tagline","Card","CardMedia","src","CardHeader","subheader","titleTypographyProps","noWrap","gutterBottom","subheaderTypographyProps","action","IconButton","NewMovieCard","movie","backdropPath","itemType","MediaCardListComponent","items","isLoading","movieColumns","slice","map","Grid","item","xs","sm","md","lg","id","CircularProgress","disableShrink","length","container","direction","justify","searchbar","myComponent","props","state","error","isLoaded","data","Headers","append","fetch","response","json","tempdata","console","log","this","setState","message","columns","options","filterType","download","print","React","Component","PlaylistDetails","playlistId","useState","setData","loading","setLoading","useEffect","a","get","result","PlaylistGridComponent","name","customBodyRender","value","tableMeta","rowIndex","label","viewColumns","searchable","confirmFilters","selectableRows","customFilterDialogFooter","currentFilterList","applyNewFilters","style","Button","onClick","PlaylistPage","useParams","handleSelectionChange","p","q","r","s","selectedData","i","index","onSelectionChange","zipFileUrl","defaultZipFileUrl","fetchUrl","encodeURIComponent","responseAsJson","search","filter","pagination","onRowSelectionChange","FinalStep","selectedFiles","files","path","payload","fileUrl","method","body","stringify","ok","Error","status","root","button","marginRight","actionsContainer","resetContainer","backdropIMG","numeral","require","details","backgroundSize","backgroundRepeat","flex","backgroundImage","minHeight","posterContainer","textAlign","poster","breakpoints","up","paddingBottom","metadata","additionalDetails","MovCard","test","posterIMG","production","productionCountries","production_countries","genres","genre","totalRevenue","revenue","nestedDataToString","backdrop","rating","vote","format","styleofbg","CardContent","original_title","overview","release","runtime","nestedData","nestedArray","undefined","forEach","push","join","handleChange","e","target","findMovieIdByImdbId","v","imdbMovieApiUrl","responseJson","movie_results","fetchMovieID","imdbId","movieID","url","fetchApi","TextField","placeholder","fullWidth","onChange","defaultValue","then","homepage","poster_path","production_companies","release_date","vote_average","backdrop_path","wrapper","buttonSuccess","green","buttonError","red","fabProgress","top","left","buttonProgress","marginLeft","iconButton","input","SourceTypeComponent","getRenderValue","apiKey","tmdbClient","findMovie","movieId","findImdbId","tmdbId","apiUrl","resposne","external_ids","imdb_id","dialogPaper","SearchMovieDialog","handleSelect","show","query","searchQuery","setSearchQuery","searchTv","setSearchTv","results","setResults","selectedId","setSelectedId","handleClose","setValue","Dialog","open","onClose","aria-labelledby","DialogTitle","Tabs","event","newValue","indicatorColor","textColor","Tab","icon","DialogContent","dividers","autoFocus","debounce","List","ListItem","selected","ListItemAvatar","ListItemText","primary","first_air_date","substr","DialogActions","disabled","SimilarMovieAssign","mediaItemId","checked","setChecked","x","handleToggle","currentIndex","indexOf","newChecked","splice","assignSelection","mediaSourceId","put","labelId","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","renderedTitle","cover","controls","paddingLeft","playIcon","posterMedia","paddingTop","LightTooltip","withStyles","tooltip","Tooltip","MovieFetchComponent","handleMediaAssignment","avatarUrl","setAvatarUrl","setBackdropPath","setPosterPath","setPosterUrl","setTitle","setYear","setOverview","hasResult","setHasResult","setResult","showDialog","setShowDialog","similarMediaItemShowDialog","setSimilarMediaItemShowDialog","deleteIcon","innerDeleteHandler","assigncurrentmedia","isthisitemtv","post","handleSelectSearchDialog","outputofdialog","miniPoster","chip","Chip","size","onDelete","clickable","assignedItems","payloadToSend","interactive","enterDelay","placement","arrow","dayjs","relativeTime","extend","Routes","sidebarName","fixedHeightPaper","clsx","fixedHeight","Paper","Chart","Deposits","Orders","DashboardIcon","ShoppingCartIcon","hide","setSearch","MovieIcon","RemoteUrlUpload","CloudUploadIcon","useForm","control","register","handleSubmit","errors","activeStep","setActiveStep","setZipFileUrl","setSelectedFiles","handleFileSelection","steps","getStepContent","step","type","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","square","elevation","AddIcon","SubscriptionsIcon","CreateMovieByImdb","uniqueid","now","toString","Math","random","toUpperCase","rootUrl","setRootUrl","firstuniqueid","initialData","attributes","onNodeClickCallback","ctx","isTraversed","nextData","clone","leafnode","findNodeFromName","hasErrors","utocall","children","resolvedUrl","anotherdata","link","parentNode","keyName","foundele","nodeSize","y","foreignObjectProps","InputProps","endAdornment","InputAdornment","aria-label","onNodeClick","translate","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","Fragment","Fab","renderForeignObjectNode","AccountTreeIcon","page","setPage","pageSize","rows","setRows","rowCount","setRowCount","pendingSelection","setPendingSelection","fxhandleMediaAssignment","updatedRows","matchingResult","find","field","headerName","sortable","renderCell","row","valueFormatter","fromNow","onlyPending","total","ToggleButtonGroup","exclusive","ev","val","ToggleButton","autoHeight","paginationMode","onPageChange","params","checkboxSelection","disableColumnMenu","disableColumnSelector","disableSelectionOnClick","withRouter","activeRoute","routeName","location","pathname","prop","key","to","navurl","textDecoration","Title","createData","time","amount","useTheme","preventDefault","depositContext","date","shipTo","paymentMethod","seeMore","Table","TableHead","TableRow","TableCell","TableBody","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","drawer","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","NotFound","App","handle","window","setInterval","getToken","internalSetToken","clearInterval","tokenString","getItem","userToken","tokenObj","expires_at","setItem","onlyValidToken","useToken","setOpen","AppBar","Toolbar","Drawer","Divider","exact","render","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ba270b8.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Media Catalog UI\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}  ","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Avatar, CssBaseline, Box, Container} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport {Copyright} from '../Copyright/Copyright';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n  const classes = useStyles();\n  const responseGoogle = (res) => {    \n    setToken(res);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <GoogleLogin\n          clientId=\"345350504609-1moo0gfi27h0jj2qaim5ed1iohgprs99.apps.googleusercontent.com\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>    \n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import axios from 'axios';\n\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://mediacatalog.netlify.app/.netlify/functions/server/'\n    });\n    _instance.interceptors.request.use(config => {        \n        const idToken = JSON.parse(localStorage.token).tokenId;\n        config.headers.Authorization = 'Bearer ' + idToken;\n        return config;\n    });\n    return _instance;\n}\n\nexport const apiClient = AuthenticatedClient();","import { Avatar, Box, Card, CardHeader, CardMedia, IconButton, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // width: 360,\n        // height: 275,\n        position: 'relative',\n        boxShadow: '0 8px 24px 0 rgba(0,0,0,0.12)',\n        // overflow: 'visible',\n        borderRadius: '1.5rem',\n        transition: '0.4s',\n        '&:hover': {\n            transform: 'scale(1.02)',\n            '& $shadow': {\n                bottom: '-1.5rem',\n            },\n            '& $shadow2': {\n                bottom: '-2.5rem',\n            },\n        },\n        // '&:before': {\n        //     content: '\"\"',\n        //     position: 'absolute',\n        //     zIndex: 0,\n        //     display: 'block',\n        //     width: '100%',\n        //     bottom: -1,\n        //     height: '100%',\n        //     borderRadius: '1.5rem',\n        //     backgroundColor: 'rgba(0,0,0,0.08)',\n        // },\n    },\n    title: {\n        fontFamily: \"'Sen', sans-serif\",\n        fontSize: '1rem',\n        fontWeight: 800,\n        color: '#fff',\n    },\n    main: {\n        maxHeight: 385,\n        overflow: 'hidden',\n        borderTopLeftRadius: '1.5rem',\n        borderTopRightRadius: '1.5rem',\n        zIndex: 1,\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            display: 'block',\n            width: '100%',\n            height: '100%',\n            background: 'linear-gradient(to top, #014a7d, rgba(0,0,0,0))',\n        },\n    },\n    content: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        zIndex: 1,\n        padding: '1.5rem 1.5rem 1rem',\n    }, tag: {\n        display: 'inline-block',\n        fontFamily: \"'Sen', sans-serif\",\n        backgroundColor: '#ff5dac',\n        borderRadius: '0.5rem',\n        padding: '2px 0.5rem',\n        color: '#fff',\n        marginBottom: '0.5rem',\n    }, avatar: {\n        width: 36,\n        height: 36,\n    }, author: {\n        // zIndex: 1,\n        position: 'relative',\n        borderBottomLeftRadius: '1.5rem',\n        borderBottomRightRadius: '1.5rem',\n        backgroundColor: theme.palette.common.white\n    },\n    contentoverride: {\n        overflow: 'hidden'\n    },\n    titleclass: {\n        fontSize: '0.8rem',\n        fontWeight: 500\n    }\n}));\nexport const MiniPoster = ({ posterPath, backpath, title, year, isTv, tagline, mode }) => {\n    const classes = useStyles();\n    const calculatedBackdrop = () => {\n        if (mode === 'portrait') {\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n        }\n\n        if (backpath)\n            return `https://image.tmdb.org/t/p/w780/${backpath}`;\n        else\n            return `https://image.tmdb.org/t/p/w500${posterPath}`\n    }\n    const calculatedPosterPath = () => {\n        return `https://image.tmdb.org/t/p/w92${posterPath}`\n    }\n    return (\n        <Card className={classes.card}>\n            <Box className={classes.main} position={'relative'}>\n                <CardMedia src={calculatedBackdrop()} component=\"img\" />\n                <div className={classes.content}>\n                    <div className={classes.tag}>{isTv ? 'TV' : 'Movie'}</div>\n                    <Typography variant={'h2'} className={classes.title}>\n                        {title} ({year})\n                    </Typography>\n                </div>\n            </Box>\n            <CardHeader className={classes.author} classes={{\n                content: classes.contentoverride\n            }} avatar={<Avatar src={calculatedPosterPath()} />}\n                title={title}\n                subheader={year}\n                titleTypographyProps={{ noWrap: true, gutterBottom: false }}\n                subheaderTypographyProps={{ noWrap: true }}\n                action={<IconButton>\n                    <MoreVertIcon />\n                </IconButton>\n                }\n            />\n        </Card>\n    )\n}","import { MiniPoster } from \"../MediaSourceList/MiniPoster\";\n\nexport const NewMovieCard = ({ movie }) => {\n    return <MiniPoster backpath={movie.backdropPath}\n        isTv={movie.itemType === 'tv'}\n        posterPath={movie.posterPath}\n        title={movie.title}\n        year={movie.year}\n        tagline={movie.tagline}\n        mode=\"portrait\"\n    />\n}","import React from 'react';\nimport { Grid, LinearProgress, CircularProgress } from '@material-ui/core';\nimport MovieCard from \"../MediaCard/MediaCardComponent\";\nimport { NewMovieCard } from '../MediaCard/NewMovieCard';\n\n\nexport const MediaCardListComponent = ({ items, isLoading }) => {\n    \n    // const [movies, setMovies] = React.useState(items);\n\n    const deleteHandler = (mediaId) => {\n        const moviesAfterRemove = items.filter(x=>x.id!=mediaId);\n        // setMovies(moviesAfterRemove);        \n    };\n    const movieColumns = items ? items.slice(0, 24).map((movie) => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={movie.id}>\n            <NewMovieCard movie={movie}></NewMovieCard>\n            {/* <MovieCard movie={movie} handleItemRemove={deleteHandler} /> */}\n        </Grid>\n    )) : null;\n    if(isLoading){\n        return <CircularProgress disableShrink />\n    }\n    else if (movieColumns?.length) {\n        return (\n            <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                spacing={3}>\n                {movieColumns || \"hello\"}\n            </Grid>\n        );\n    } else {\n        return <div>No items found</div>\n    }\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { debounce } from '@material-ui/core';\nimport {MediaCardListComponent} from '../MediaCardList/MediaCardListComponent';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchbar: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function MediaDirectory() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const classes = useStyles();\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const searchQuery = search;\n      setLoading(true);\n      const result = await apiClient.get(`items?q=${searchQuery}`);\n      if (search === searchQuery) {\n        setData(result.data);\n        setLoading(false);\n      }\n    })();\n  }, [search]);\n\n  return (\n    <div>\n      <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n        onChange={debounce(handleOnChange, 250)} \n        defaultValue={search} className={classes.searchbar} />\n      <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n    </div>\n  );\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        const columns = [\"ts\", \"requestId\", \"fileName\", \"sequence\", \"status\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false\n        };\n\n        const { error, isLoaded, data} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Remote Url Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}\n\nexport default myComponent;","import React, { useState, useEffect } from 'react';\nimport { MediaCardListComponent } from '../MediaCardList/MediaCardListComponent'\nimport { apiClient } from \"../ApiClient/MediaCatalogNetlifyClient\";\n\nexport const PlaylistDetails = ({ playlistId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const result = await apiClient.get(`playlists/${playlistId}/items`);\n            setData(result.data);\n            setLoading(false);\n        })();\n    }, [playlistId]);\n\n    return (\n        <div>\n            <MediaCardListComponent items={data} isLoading={loading}></MediaCardListComponent>\n        </div>\n    );\n};","import React from 'react';\nimport { Typography, Button, Link } from '@material-ui/core';\nimport MUIDataTable from \"mui-datatables\";\n\n\nconst PlaylistGridComponent = ({ data }) => {    \n    const columns = [{\n        name: \"title\",\n        options: {\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <Link href={`/playlistdetails/${data[tableMeta.rowIndex].id}`} >\n                        {value}\n                    </Link>\n                );\n            }\n        }\n    }, {\n        name: \"ts\", label: \"Created\", options: {\n            customBodyRender: (value) => {\n                return (\n                    <div title={value}>{value}</div>\n                );\n            }\n        }\n    }];\n    const options = {\n        download: false,\n        print: false,\n        viewColumns: false,\n        searchable: false,\n        filterType: 'multiselect',\n        confirmFilters: true,\n        selectableRows: false,\n        customFilterDialogFooter: (currentFilterList, applyNewFilters) => {\n            return (\n                <div style={{ marginTop: '40px' }}>\n                    <Button variant=\"contained\" onClick={applyNewFilters}>Apply Filters</Button>\n                </div>\n            );\n        }\n    };\n\n    return <MUIDataTable\n        title={\n            <Typography variant=\"h6\">\n                Playlist\n          {/* {isLoading && <CircularProgress size={24} style={{ marginLeft: 15, position: 'relative', top: 4 }} />} */}\n            </Typography>\n        }\n        data={data}\n        columns={columns}\n        options={options}\n    />;\n}\n\nexport default PlaylistGridComponent;","import React from 'react';\nimport PlaylistGrid from '../Playlist/playlistGrid';\n\nclass myComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: []\n        };\n    }\n\n    async componentDidMount() {\n\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/playlists';\n        const response = await fetch(apiUrl, { headers: headers });\n\n        const tempdata = await response.json();\n        console.log(tempdata);\n\n        this.setState({\n            isLoaded: true,\n            data: tempdata\n        });\n\n    }\n    render() {\n        \n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <PlaylistGrid data = {data}></PlaylistGrid>;\n        }\n    }\n}\n\nexport default myComponent;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PlaylistDetails } from './playlistDetails'\nimport Playlist from '../Playlist/playlist'\nexport const PlaylistPage = () => {\n    let { id } = useParams();\n    if (id) {\n        return (\n            <PlaylistDetails playlistId={id}></PlaylistDetails>\n        );\n    } else {\n        return (\n            <Playlist></Playlist>\n        );\n    }\n}","import React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nexport default class myComponent extends React.Component {\n    constructor(props) {\n        // debugger;\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            zipFileUrl: props.defaultZipFileUrl,\n            onSelectionChange: props.onSelectionChange\n        };\n\n    }\n\n    async componentDidMount() {\n        const fetchUrl = `https://mediacatalogdirectorylisting.herokuapp.com/api/zip/listFiles?zipFileUrl=${encodeURIComponent(this.state.zipFileUrl)}`;\n        const response = await fetch(fetchUrl);\n        try {\n            const responseAsJson = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: responseAsJson\n            });\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n\n    }\n\n    handleSelectionChange = (p, q, r, s) => {\n        const selectedData = q.map(i => this.state.data[i.index]);\n        this.state.onSelectionChange && this.state.onSelectionChange(selectedData);\n    }\n\n    render() {\n        const columns = [\"path\", \"uncompressedSize\"];\n        const options = {\n            filterType: 'checkbox',\n            download: false,\n            print: false,\n            search: false,\n            viewColumns: false,\n            filter: false,\n            pagination: false,\n            onRowSelectionChange: this.handleSelectionChange\n        };\n\n        const { error, isLoaded, data } = this.state;\n\n        if (error) {\n            return <div>Error: We have some errrors</div>;\n        } else if (!isLoaded) {\n            return <div>Fetching files inside zip file...</div>;\n        } else {\n            return <MUIDataTable\n                title={\"Upload Requests\"}\n                data={data}\n                columns={columns}\n                options={options}\n            />;\n        }\n    }\n}","import React from 'react';\n\nexport default class FinalStep extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            selectedFiles: props.selectedFiles,\n            zipFileUrl: props.zipFileUrl\n        };\n    }\n\n    async componentDidMount() {        \n        const files = this.state.selectedFiles.map(i => i.path);\n        const payload = {\n            fileUrl: this.state.zipFileUrl,\n            files\n        };\n        var headers = new Headers();\n        const idToken = JSON.parse(localStorage.token).tokenId;\n        headers.append('Authorization', 'Bearer ' + idToken);\n        headers.append(\"content-type\", \"application/json\");\n        const apiUrl = 'https://mediacatalog.netlify.app/.netlify/functions/server/remoteUrlUploadRequest';\n        try {\n            const response = await fetch(apiUrl, { headers: headers, method: 'POST', body: JSON.stringify(payload) });\n            if (response.ok) {\n                const tempdata = await response.json();\n\n                this.setState({\n                    isLoaded: true,\n                    data: tempdata\n                });\n            } else {\n                throw Error(`Unexpected response code receieved ${response.status}`);\n            }\n        } catch (error) {\n            this.setState({\n                error: error\n            });\n        }\n    }\n    render() {\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Submitting Request...</div>;\n        } else {\n            return <span>Success!</span>;\n        }\n    }\n}","import { React, useState } from 'react';\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport ChooseFilesToUpload from './CreateNewRequest/ChooseFilesToUpload';\nimport ChooseFilesToUploadFinalStep from './CreateNewRequest/FinalStep';\n\nimport { FormHelperText, TextField, InputLabel, Input, FormControl, Paper, Grid, Typography, Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\n\n// import FormInput from \"./../Controls/index\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Enter a zip file URL', 'Choose Files to Upload', 'Finish'];\n}\n\n\nexport default function App() {\n    const { control, register, handleSubmit, errors } = useForm();\n    const onSubmit = data => { alert('hello'); console.log(data); }\n\n    const classes = useStyles();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [zipFileUrl, setZipFileUrl] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleChange = (e) => {\n        setZipFileUrl(e.target.value);\n    };\n\n    const handleFileSelection = (e) => {\n        setSelectedFiles(e);\n    };\n\n    const steps = getSteps();\n\n    function getStepContent(step) {        \n        switch (step) {\n            case 0:\n                return <TextField name=\"fileUrl\" type=\"URL\" defaultValue={zipFileUrl} fullWidth onChange={handleChange} />;\n            case 1:\n                return <ChooseFilesToUpload defaultZipFileUrl={zipFileUrl} onSelectionChange={handleFileSelection} />;\n            case 2:\n                return <ChooseFilesToUploadFinalStep selectedFiles={selectedFiles} zipFileUrl = {zipFileUrl} />;\n            default:\n                return 'unknown step'\n        }\n    }\n\n    const handleNext = () => {        \n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                  </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )}\n            </div>\n            {/* <form onSubmit={handleSubmit(onSubmit)}>\n                <Paper style={{ padding: 16 }}>\n                    <Typography  >\n                        New Request Form\n                        </Typography>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField name=\"zipFileUrl\" error={!!errors.username} label=\"Zip File URL\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"URL\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField name=\"username\" error={!!errors.username} label=\"Username\"\n                                helperText={errors.username ? errors.username.message : ''} type=\"email\" inputRef={register} fullWidth />\n                        </Grid>\n                        <Grid container item xs={12} justify=\"flex-end\">\n                            <Button color=\"primary\" type=\"submit\" variant=\"contained\" fullWidth>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </form> */}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\n\n// import './Card.scss';\nimport { Card, CardContent, Typography, CardMedia, CardHeader, Avatar, IconButton, Grid, Divider } from '@material-ui/core';\nimport { makeStyles, rgbToHex, withStyles } from '@material-ui/core/styles';\n\nlet numeral = require('numeral');\nlet backdropIMG;\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: '20px',\n        display: 'flex',\n        background: 'rgba(0,0,0,.85)'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        flex: '1 0 auto',\n        color: 'white',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,.85) 15%,rgba(0,0,0,.2) 40%,#000 90%)',\n        minHeight: '500px'\n    },\n    posterContainer: {\n        textAlign: 'center'\n    },\n    poster: {        \n        width: '120px',\n        [theme.breakpoints.up('md')]:{\n            width: '200px'\n        }\n    },\n    tagline: {\n        display: 'block',\n        paddingBottom: '0.25em',\n        color: 'limeGreen',\n        fontSize: '1.3em'\n    },\n    metadata: {\n        display: 'block',\n        color: 'limeGreen',\n    },\n    additionalDetails: {\n        margin: \"35px 0 20px\"\n    }\n}));\n\nexport default function MovCard({ data, test }) {\n    const classes = useStyles();\n\n    let posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster,\n        production = data.production,\n        productionCountries = data.production_countries,\n        genres = data.genre,\n        totalRevenue = data.revenue,\n        productionList = nestedDataToString(production),\n        productionCountriesList = nestedDataToString(productionCountries),\n        noData = '-',\n        genresList = nestedDataToString(genres);\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop;\n    let rating = '';\n\n    // conditional statements for no data\n    if (data.vote === 'undefined' || data.vote === 0) {\n        rating = noData\n    } else {\n        rating = data.vote\n    };\n\n    if (totalRevenue === 'undefined' || totalRevenue === 0) {\n        totalRevenue = noData\n    } else {\n        totalRevenue = numeral(data.revenue).format('($0,0)');\n    };\n\n    if (data.poster == null) {\n        posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g';\n    }\n\n    const styleofbg = `url(${backdropIMG})`;\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <div className={classes.details} style={{ backgroundImage: styleofbg }}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h3\" variant=\"h3\">\n                            {data.original_title}\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" className={classes.tagline}>\n                            {data.tagline}\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            <Grid container>\n                                <Grid item xs={9}>\n                                    {data.overview}\n                                    <Grid container className={classes.additionalDetails}>\n                                        <Grid item md={3}>\n                                            Original Release: <span className={classes.metadata}>{data.release}</span>\n                                    Box Office: <span className={classes.metadata}>{totalRevenue}</span>\n                                        </Grid>\n                                        <Grid item md={3}>\n                                            Running Time: <span className={classes.metadata}>{data.runtime} mins</span>\n                                Rating: <span className={classes.metadata}>{rating}</span>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={3} className={classes.posterContainer}>\n                                    <img src={posterIMG} className={classes.poster}></img>\n                                    {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n                                </Grid>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n                </div>\n                {/* <CardMedia image={posterIMG} title={data.original_title} className={classes.poster} /> */}\n            </Card>\n        </div>\n    );\n\n\n    function nestedDataToString(nestedData) {\n        let nestedArray = [],\n            resultString;\n        if (nestedData !== undefined) {\n            nestedData.forEach(function (item) {\n                nestedArray.push(item.name);\n            });\n        }\n        resultString = nestedArray.join(', '); // array to string\n        return resultString;\n    };\n\n}\n","import React, { Component, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Card from './Card';\n\nclass myComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null,\n            imdbId: 'tt0468569'\n        };\n    }\n\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return <div id=\"createMovieContainer000001\">\n            <TextField name=\"imdbId\" label=\"IMDB Id\" placeholder=\"Enter IMDB Id\" fullWidth\n                onChange={this.fetchMovieID} defaultValue={this.state.imdbId} />            \n            <Card data={this.state} />\n        </div>\n    }\n\n\n    // the api request function\n    fetchApi(url) {\n\n        fetch(url).then((res) => res.json()).then((data) => {\n            // update state with API data\n            this.setState({\n                movieID: data.id,\n                original_title: data.original_title,\n                tagline: data.tagline,\n                overview: data.overview,\n                homepage: data.homepage,\n                poster: data.poster_path,\n                production: data.production_companies,\n                production_countries: data.production_countries,\n                genre: data.genres,\n                release: data.release_date,\n                vote: data.vote_average,\n                runtime: data.runtime,\n                revenue: data.revenue,\n                backdrop: data.backdrop_path\n            })\n        })\n    }\n\n    findMovieIdByImdbId = async (v) => {\n        const imdbMovieApiUrl = `https://api.themoviedb.org/3/find/${v}?&api_key=cfe422613b250f702980a3bbf9e90716&external_source=imdb_id`;\n        const response = await fetch(imdbMovieApiUrl);\n        const responseJson = await response.json();\n        return responseJson.movie_results && responseJson.movie_results[0] && responseJson.movie_results[0].id;\n    }\n\n    fetchMovieID = async (e) => {\n        const imdbId = e.target.value;\n        this.setState({ imdbId: imdbId });\n        const movieID = await this.findMovieIdByImdbId(imdbId);\n        if (movieID) {\n            let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n            this.fetchApi(url);\n        }\n    }\n\n    async componentDidMount() {        \n        const movieID = await this.findMovieIdByImdbId(this.state.imdbId);\n        let url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n        this.fetchApi(url)\n    }\n}\n\nexport default myComponent;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fab, Tooltip, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ErrorIcon from '@material-ui/icons/Edit';\nimport Tree from 'react-d3-tree';\nimport axios from 'axios';\nimport clone from 'clone';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonError: {\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    }, iconButton: {\n        padding: 10,\n    }, input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n}));\n\nexport const MediaSourceExplorerComponent = ({ items, isLoading }) => {\n    const classes = useStyles();\n    const uniqueid = () => { return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase(); }\n    const [rootUrl, setRootUrl] = useState('');\n\n    const handleRootUrlOnChange = (event) => {\n        const { value } = event.target;\n        setRootUrl(value);        \n    };\n    \n    const setTreeRootUrl = () => {\n        setData({\n            name: rootUrl,\n            attributes: {\n                url: rootUrl,\n                id: uniqueid()\n            }\n        })\n    };\n\n    const firstuniqueid = uniqueid();\n    const initialData = {\n        name: rootUrl,\n        attributes: {\n            url: rootUrl,\n            id: firstuniqueid\n        }\n    };\n\n\n    const [data, setData] = useState(initialData);\n\n    const renderForeignObjectNode = ({\n        nodeDatum,\n        toggleNode,\n        foreignObjectProps\n    }) => (\n        <foreignObject {...foreignObjectProps} >\n            <div className={classes.wrapper}>\n                <Tooltip title={<React.Fragment>\n                    Name: {nodeDatum.name}\n                    <br></br>\n                        Url: {nodeDatum.attributes.url}\n                </React.Fragment>}>\n                    <Fab\n                        color=\"primary\"\n                        className={nodeDatum.attributes.hasErrors && classes.buttonError}\n                        onClick={() => {\n                            if (!nodeDatum.attributes.isTraversed) {\n                                if (!nodeDatum.attributes.loading) {\n                                    nodeDatum.attributes.hasErrors = false;\n                                    nodeDatum.attributes.loading = true;\n                                    onNodeClickCallback(nodeDatum);\n                                }\n                            }\n                            toggleNode();\n                        }}\n                    >\n                        {nodeDatum.attributes.hasErrors && <ErrorIcon />}\n                    </Fab>\n                </Tooltip>\n                {nodeDatum.attributes.loading && <CircularProgress size={68} className={classes.fabProgress} />}\n            </div>\n        </foreignObject>\n    );\n\n    const onNodeClickCallback = async (ctx) => {\n        if (ctx.attributes.isTraversed) return;\n        const nextData = clone(data);\n        const leafnode = findNodeFromName(nextData, ctx.attributes.id);\n        try {\n            leafnode.attributes.hasErrors = false;\n            const utocall = `https://nurlresolver.netlify.app/.netlify/functions/server/resolve?q=${encodeURIComponent(ctx.attributes.url)}`;\n            const response = await axios.get(utocall);\n            const children = [];\n            for (const resolvedUrl of response.data) {\n                const anotherdata = {\n                    name: resolvedUrl.title, attributes: {\n                        url: resolvedUrl.link,\n                        id: uniqueid()\n                    }\n                }\n                children.push(anotherdata);\n            }\n            leafnode.attributes.isTraversed = true;\n            leafnode.children = children;\n        } catch (error) {\n            leafnode.attributes.hasErrors = true;\n            leafnode.attributes.isLoading = false;\n        }\n        setData(nextData);\n    };\n\n    function findNodeFromName(parentNode, keyName) {\n        if (parentNode.attributes.id === keyName) {\n            return parentNode;\n        } else if (parentNode.children?.length) {\n            for (const childelement of parentNode.children) {\n                const foundele = findNodeFromName(childelement, keyName);\n                if (foundele) return foundele;\n            }\n        }\n        return null;\n    }\n\n    const nodeSize = { x: 200, y: 200 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: -34, y: -34 };\n\n    return <div>\n\n        <div id=\"treeWrapper\" style={{ height: '40em' }}>\n            <TextField label=\"Root Url\" placeholder=\"Root Url\" fullWidth InputProps={{\n                endAdornment: (<InputAdornment>\n                    <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick={setTreeRootUrl}>\n                        <SearchIcon />\n                    </IconButton>\n                </InputAdornment>)\n            }}\n                onChange={handleRootUrlOnChange} />\n            <Tree data={data}\n                orientation='vertical'\n                onNodeClick={onNodeClickCallback}\n                nodeSize={nodeSize}\n                translate={{ x: 100, y: 100 }}\n                renderCustomNodeElement={(rd3tProps) =>\n                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                }\n            />\n        </div>\n    </div>\n}","import { Typography } from '@material-ui/core';\nexport default function SourceTypeComponent({ value }) {\n    const getRenderValue = () => {\n        switch (value) {\n            case 'hdhub':\n                return 'HH'                \n            case 'extramovies':\n                return 'EM'                \n            default:\n                return value                \n        }\n    }    \n    return <Typography variant=\"body2\" color=\"textSecondary\">{getRenderValue()}</Typography>\n}","import axios from 'axios';\nconst apiKey = 'cfe422613b250f702980a3bbf9e90716';\nfunction AuthenticatedClient() {\n    var _instance = axios.create({\n        baseURL: 'https://api.themoviedb.org/3'\n    });\n\n    return {\n        findMovie: (movieId) => {\n\n        },\n        findImdbId: async (tmdbId, isTv) => {\n            let apiUrl = `${isTv ? 'tv' : 'movie'}/${tmdbId}?api_key=${apiKey}&language=en-US&append_to_response=external_ids`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data.external_ids.imdb_id;\n        },\n        search: async (q, isTv) => {\n            let apiUrl = `search/${isTv ? 'tv' : 'movie'}?api_key=${apiKey}&language=en-US&&query=${encodeURIComponent(q)}`;\n            const resposne = await _instance.get(apiUrl);\n            return resposne.data;\n        }\n    }\n}\nexport const tmdbClient = AuthenticatedClient();","import { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogActions, debounce, Tabs, Tab } from '@material-ui/core';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport TvIcon from '@material-ui/icons/Tv';\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\n\nexport const SearchMovieDialog = ({ handleSelect, show, query, isTv }) => {\n    // const [open, setOpen] = useState(show);\n    const [searchQuery, setSearchQuery] = useState(query);\n    const [searchTv, setSearchTv] = useState(isTv);\n    const [results, setResults] = useState([]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    const classes = useStyles();\n    //const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => {\n        handleSelect(null);\n    };\n\n    const handleItemSelectionClose = () => {\n        handleSelect({\n            id: selectedId,\n            isTv: searchTv\n        });\n    };\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setSearchQuery(value);\n    };\n\n    useEffect(() => {\n        if (!searchQuery || !show) return;\n        (async () => {\n            console.log(searchTv);\n            const { results } = await tmdbClient.search(searchQuery, searchTv);\n            setResults(results);\n        })();\n    }, [searchQuery, show, searchTv]);\n\n    const [value, setValue] = useState(isTv ? 1 : 0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        setSearchTv(newValue === 1);\n        setSelectedId(0);\n    };\n\n    return (<div>\n        <Dialog open={show}\n            fullWidth={true}\n            classes={{ paper: classes.dialogPaper }}\n            onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {/* <DialogTitle id=\"form-dialog-title\">Search</DialogTitle> */}\n            <DialogTitle style={{ padding: 0 }}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\">\n                    <Tab icon={<MovieIcon />} label=\"MOVIES\" />\n                    <Tab icon={<TvIcon />} label=\"TV\" />\n                </Tabs>\n            </DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    defaultValue={searchQuery}\n                    fullWidth\n                    onChange={debounce(handleOnChange, 250)}\n                />\n\n                {/* <FormControlLabel control={<Checkbox defaultChecked={searchTv}\n                    onChange={handleSetTv} />} label=\"TV\" /> */}\n                {\n                    results && (<List component=\"nav\">\n                        {results.map((value) => {\n                            return (<ListItem\n                                key={value.id}\n                                button\n                                selected={selectedId === value.id}\n                                onClick={() => setSelectedId(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar src={value.poster_path && `https://image.tmdb.org/t/p/w92${value.poster_path}`}></Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={`${value.title || value.name}`}\n                                    secondary={(value.release_date || value.first_air_date)?.substr(0, 4)} />\n                            </ListItem>)\n                        })}\n                    </List>)\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                <Button onClick={handleItemSelectionClose} color=\"primary\" disabled={selectedId === 0}>\n                    Ok\n          </Button>\n            </DialogActions>\n        </Dialog>\n    </div>);\n}","import {\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemIcon, ListItemText\n} from \"@material-ui/core\"\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogPaper: {\n        minHeight: '80vh',\n        maxHeight: '80vh',\n    }\n}));\n\nexport const SimilarMovieAssign = ({ show, mediaItemId, query, handleSelect }) => {\n    const classes = useStyles();\n    const [results, setResults] = useState([]);\n    const [checked, setChecked] = useState([]);\n\n    useEffect(() => {\n        if (!query) return;\n        if (!show) return;\n        (async () => {\n            const response = await apiClient.get(`mediasources?parsedTitle=${encodeURIComponent(query)}&onlyPendingMediaAssignment=true`);\n            setResults(response.data.items);\n            setChecked(response.data.items.map(x => x.id));\n        })();\n    }, [query, show]);\n\n    const handleClose = () => {\n        handleSelect();\n    };\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const assignSelection = async () => {\n        for (const mediaSourceId of checked) {\n            await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        }\n        handleSelect(checked);\n    }\n\n    return (\n        <div>\n            <Dialog open={show}\n                fullWidth={true}\n                classes={{ paper: classes.dialogPaper }}\n                onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle>\n                    Related media items to {query}\n                </DialogTitle>\n                <DialogContent dividers>\n                    {\n                        results && (<List>\n                            {results.map((value) => {\n                                const labelId = `checkbox-list-label-${value.id}`;\n                                console.log('value is ', value);\n                                return (<ListItem key={value.id} button onClick={handleToggle(value.id)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={checked.indexOf(value.id) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={value.renderedTitle} />\n                                </ListItem>)\n                            })}\n                        </List>)\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={assignSelection} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}","import { Avatar, Box, Card, CardContent, CardHeader, CardMedia, Chip, Paper, Tooltip, Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient';\nimport { tmdbClient } from '../ApiClient/TmdbClient'\nimport { SearchMovieDialog } from './SearchMovieDialog'\nimport { MiniPoster } from './MiniPoster';\nimport { SimilarMovieAssign } from './SimilarMovieAssign';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: 320,\n        height: 162\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 0.65\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        // width: 151,\n        display: 'flex',\n        flex: 0.35\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    posterMedia: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 1)',\n        padding: 0,\n        borderRadius: '1.5rem'\n    },\n}))(Tooltip);\n\nexport const MovieFetchComponent = ({ value, isTv, mediaSourceId, mediaItemId, handleMediaAssignment\n}) => {\n    //const posterSize = 'w185';  //w92\n    const avatarSize = 'w92';  //w92\n    const posterSize = 'w185';  //w92\n    const backdropSize = 'w300';  //w92\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [backdropPath, setBackdropPath] = useState('');\n    const [posterPath, setPosterPath] = useState('');\n    const [posterUrl, setPosterUrl] = useState('');\n    const [title, setTitle] = useState(value);\n    const [year, setYear] = useState('');\n    const [overview, setOverview] = useState('');\n    const [hasResult, setHasResult] = useState(false);\n    const [result, setResult] = useState();\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [showDialog, setShowDialog] = useState(false);\n\n    const [similarMediaItemShowDialog, setSimilarMediaItemShowDialog] = useState(false);\n\n    useEffect(() => {\n        if (!value) return;\n        (async () => {\n            const { results } = await tmdbClient.search(value, isTv);\n            if (results[0]) {\n                setHasResult(true);\n                setResult(results[0]);\n                setTitle(results[0].title || results[0].name);\n                setAvatarUrl(`https://image.tmdb.org/t/p/${avatarSize}${results[0].poster_path}`);\n                setPosterUrl(`https://image.tmdb.org/t/p/${posterSize}${results[0].poster_path}`);\n\n                //https://image.tmdb.org/t/p/original/hkBaDkMWbLaf8B1lsWsKX7Ew3Xq.jpg\n\n                setBackdropPath(results[0].backdrop_path);\n                setPosterPath(results[0].poster_path);\n\n\n\n                setYear(results[0].release_date?.substr(0, 4) || results[0].first_air_date?.substr(0, 4));\n                setOverview(results[0].overview);\n            }\n            setLoading(false);\n        })();\n    }, [value]);\n\n    const deleteIcon = hasResult ? <DoneIcon /> : null\n    const innerDeleteHandler = async () => {\n        const { id } = result;\n        await assigncurrentmedia(id, isTv);\n    }\n\n    const assigncurrentmedia = async (id, isthisitemtv) => {\n        let mediaItemId;\n        try {\n            const response = await apiClient.get(`/items/byExternalId/${id}?type=tmdb`);\n            mediaItemId = response.data.id;\n        } catch (error) {\n            const imdbId = await tmdbClient.findImdbId(id, isthisitemtv);\n            const response = await apiClient.post(`items/byExternalId/${imdbId}?type=imdb`);\n            mediaItemId = response.data.id;\n        }\n        await apiClient.put(`/mediasources/${mediaSourceId}/mediaItemId/${mediaItemId}`);\n        handleMediaAssignment && handleMediaAssignment([{ mediaItemId, mediaSourceId }]);\n\n        setSimilarMediaItemShowDialog(true);\n    }\n\n    const showDialogHandler = () => {\n        setShowDialog(true);\n    }\n\n    const handleSelectSearchDialog = async (outputofdialog) => {\n        setShowDialog(false);\n        if (outputofdialog) {\n            await assigncurrentmedia(outputofdialog.id, outputofdialog.isTv);\n        }\n    }\n\n    const handleSelectAssignMovieDialog = (assignedItems) => {\n        setSimilarMediaItemShowDialog(false);\n        if (assignedItems) {\n            const payloadToSend = assignedItems.map(mediaSourceId => { return { mediaItemId, mediaSourceId } });\n            handleMediaAssignment && handleMediaAssignment(payloadToSend);\n        }\n    }\n\n    const miniPoster = <MiniPoster title={title} backpath={backdropPath} isTv={isTv} year={year} posterPath={posterPath} />\n    const chip = <Chip\n        size='medium'\n        avatar={<Avatar src={avatarUrl} />}\n        color=\"primary\" label={title || value}\n        variant=\"outlined\"\n        onClick={showDialogHandler}\n        onDelete={hasResult ? innerDeleteHandler : null}\n        deleteIcon={deleteIcon}\n        style={{ maxWidth: 240 }}\n        clickable></Chip>\n\n    if (mediaItemId) {\n        return <div>\n            <SimilarMovieAssign show={similarMediaItemShowDialog} mediaItemId={mediaItemId} query={value} handleSelect={handleSelectAssignMovieDialog} />\n            <span>{mediaItemId}</span>\n        </div>\n    } else if (loading) {\n        return <div>Loading...</div>;\n    }\n    else if (hasResult) {\n        return <div>\n            {/* <div onClick={() => setSimilarMediaItemShowDialog(true)} > Show</div> */}\n            <SearchMovieDialog show={showDialog} query={title} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            <LightTooltip interactive title={miniPoster} enterDelay={500} placement=\"right\" arrow>\n                {chip}\n            </LightTooltip></div>\n    } else {\n        return <div>\n            <SearchMovieDialog show={showDialog} query={title || value} isTv={isTv} handleSelect={handleSelectSearchDialog} />\n            {chip}\n        </div>\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColumns } from '@material-ui/data-grid';\nimport { apiClient } from '../ApiClient/MediaCatalogNetlifyClient'\nimport { debounce, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SourceType from \"./SourceTypeComponent\";\nimport { MovieFetchComponent } from \"./MovieFetchComponent\";\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst dayjs = require('dayjs');\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nexport const MediaSourceListComponent = () => {\n    const [page, setPage] = useState(0);\n    const [pageSize] = useState(20);\n    const [rows, setRows] = useState([]);\n    const [rowCount, setRowCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [pendingSelection, setPendingSelection] = useState('Pending');\n    const classes = useStyles();\n\n    const fxhandleMediaAssignment = async (result) => {\n        const updatedRows = rows.map(x => {\n            const matchingResult = result.find(y => y.mediaSourceId === x.id);\n            if (matchingResult) {\n                x.mediaItemId = matchingResult.mediaItemId;\n            }\n            return x;\n        })\n        setRows(updatedRows);\n    };\n\n    const columns: GridColumns = [\n        { field: 'renderedTitle', headerName: 'Title', width: 340, sortable: false, flex: 1 },\n        {\n            field: 'parserInfo', headerName: 'Parser Title', sortable: false, width: 280, renderCell: ({ value, row }) => {\n                return <MovieFetchComponent\n                    value={value?.title || row.renderedTitle} isTv={value?.isTv}\n                    mediaSourceId={row.id}\n                    mediaItemId={row.mediaItemId}\n                    handleMediaAssignment={fxhandleMediaAssignment}\n                />\n            }\n        },\n        {\n            field: 'crawlerType', headerName: 'Source', sortable: false, width: 80, renderCell: ({ value }) => {\n                return <SourceType value={value}></SourceType>\n            }\n        },\n        { field: 'created', headerName: 'Created', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() },\n        { field: 'modified', headerName: 'Last Modified', sortable: false, width: 120, valueFormatter: ({ value }) => dayjs(value).fromNow() }\n    ];\n\n\n    const handleOnChange = (event) => {\n        const { value } = event.target;\n        setPage(0);\n        setSearch(value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const onlyPending = pendingSelection === 'Pending';\n            const response = await apiClient.get(`/mediasources?pageSize=${pageSize}&pageNumber=${page + 1}&q=${search}&onlyPendingMediaAssignment=${onlyPending}`);\n            setRowCount(response.data.total);\n            setRows(response.data.items);\n            setLoading(false);\n        })();\n    }, [page, search, pendingSelection, pageSize]);\n\n    const handlePageChange = (params) => {\n        const { page } = params;\n        setPage(page);\n    }\n\n    return <div>\n        <TextField label=\"Search\" placeholder=\"Search\" fullWidth\n            onChange={debounce(handleOnChange, 250)}\n            defaultValue={search} className={classes.searchbar} />\n        <ToggleButtonGroup value={pendingSelection} exclusive onChange={(ev, val) => setPendingSelection(val)}>\n            <ToggleButton value=\"All\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"Pending\" >\n                Pending\n            </ToggleButton>\n        </ToggleButtonGroup>\n\n        <DataGrid\n            page={page}\n            autoHeight={true}\n            rows={rows}\n            columns={columns}\n            pageSize={pageSize}\n            paginationMode='server'\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowCount={rowCount}\n            checkboxSelection={false}\n            disableColumnMenu\n            disableColumnSelector\n            disableSelectionOnClick\n        />\n    </div>\n}","import Dashboard from './Dashboard/Dashboard';\nimport Preferences from './Preferences/Preferences';\nimport MediaDirectory from './MediaDirectory/MediaDirectory';\nimport RemoteUrlUpload from './RemoteUrlUpload/RemoteUrlUpload';\nimport { PlaylistPage } from './Playlist/playlistComponent';\nimport CreateNewRemoteUrlUpload from './RemoteUrlUpload/CreateNewRequest';\nimport CreateMovieByImdb from './CreateMovie/CreateMovieByImdb';\nimport { MediaSourceExplorerComponent } from './MediaSourceExplorer/MediaSourceExplorerComponent';\nimport { MediaSourceListComponent } from './MediaSourceList/MediaSourceListComponent';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\n\nconst Routes = [\n    {\n        path: '/dashboard',\n        sidebarName: 'Dashboard',\n        component: Dashboard,\n        icon: DashboardIcon\n    },\n    {\n        path: '/preferences',\n        sidebarName: 'Preferences',\n        component: Preferences,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/movies',\n        sidebarName: 'Media Items',\n        component: MediaDirectory,\n        icon: MovieIcon\n    },\n    {\n        path: '/remoteuploads',\n        sidebarName: 'Remote Url Upload',\n        component: RemoteUrlUpload,\n        icon: CloudUploadIcon\n    },\n    {\n        path: '/createremoteuploads',\n        sidebarName: 'New Remote Url Upload',\n        component: CreateNewRemoteUrlUpload,\n        icon: AddIcon\n    },\n    {\n        path: '/playlist',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon\n    },\n    {\n        path: '/playlistdetails/:id',\n        sidebarName: 'Playlist',\n        component: PlaylistPage,\n        icon: SubscriptionsIcon,\n        hide: true\n    },\n    {\n        path: '/movie/new',\n        sidebarName: 'New Movie by IMDB Id',\n        component: CreateMovieByImdb,\n        icon: ShoppingCartIcon,\n        hide: true\n    },\n    {\n        path: '/explorer',\n        sidebarName: 'Media Source Explorer',\n        component: MediaSourceExplorerComponent,\n        icon: AccountTreeIcon\n    },\n    {\n        path: '/source',\n        sidebarName: 'Media Source',\n        component: MediaSourceListComponent,\n        icon: AccountTreeIcon\n    }\n];\n\nexport default Routes;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../SideNavBar/SideNavBar';\nimport Chart from '../Chart';\nimport Deposits from '../Deposits';\nimport Orders from '../Orders';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    \n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          \n      \n    \n  );\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { List, ListItemIcon, ListItemText, ListItem } from '@material-ui/core';\nimport Routes from '../Routes';\n\nconst SideNavBar = (props) => {\n  const activeRoute = (routeName) => {\n    return props.location?.pathname === routeName ? true : false;\n  }\n\n  return (<div>\n    <List>\n      {Routes.filter(x => !x.hide).map((prop, key) => {\n        return (\n          <ListItem component={Link} button\n            to={prop.navurl || prop.path}\n            style={{ textDecoration: 'none' }}\n            key={key}\n            selected={activeRoute(prop.path)}>\n            <ListItemIcon>\n              <prop.icon />\n            </ListItemIcon>\n            <ListItemText primary={prop.sidebarName} />\n          </ListItem >\n        );\n      })}\n    </List>\n  </div>);\n}\n\nexport default withRouter(SideNavBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <div>Charts...</div>\n    // <React.Fragment>\n    //   <Title>Today</Title>\n    //   <ResponsiveContainer>\n    //     <LineChart\n    //       data={data}\n    //       margin={{\n    //         top: 16,\n    //         right: 16,\n    //         bottom: 0,\n    //         left: 24,\n    //       }}\n    //     >\n    //       <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n    //       <YAxis stroke={theme.palette.text.secondary}>\n    //         <Label\n    //           angle={270}\n    //           position=\"left\"\n    //           style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n    //         >\n    //           Sales ($)\n    //         </Label>\n    //       </YAxis>\n    //       <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n    //     </LineChart>\n    //   </ResponsiveContainer>\n    // </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return(\n    <h2>Not Found!!!</h2>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Preferences from '../Preferences/Preferences';\nimport { GoogleLogin } from 'react-google-login';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport SideNavBar from '../SideNavBar/SideNavBar';\n\nimport NotFound from '../NotFound/NotFound';\n\nimport Routes from '../Routes';\n\nimport useToken from './useToken';\nimport {Copyright} from '../Copyright/Copyright';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Media Catalog Admin\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <BrowserRouter>\n          <Drawer variant=\"permanent\"\n            classes={{\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }} open={open}>\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <SideNavBar></SideNavBar>\n          </Drawer>\n\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => {\n                    return (\n                      <Redirect to=\"/dashboard\" />\n                    )\n                  }}\n                />\n                {Routes.map((prop, key) => {\n                  return (\n                    <Route path={prop.path} key={key}>\n                      <prop.component />\n                    </Route>\n                  );\n                })}\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport default function useToken() {\n    useEffect(() => {\n        const handle = window.setInterval(() => {\n            console.log('checking token status', handle);\n            if (token && getToken() == null) {\n                internalSetToken(null);\n            }\n        }, 1000);  //check refresh token every 1 second\n        return () => clearInterval(handle); //cleanup\n    }, []);\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken?.tokenObj?.expires_at && new Date(userToken.tokenObj.expires_at) > new Date()) {\n            return userToken;\n        }\n        return null;\n    };\n\n    const [token, internalSetToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        const onlyValidToken = getToken();\n        if (onlyValidToken) {\n            internalSetToken(onlyValidToken);\n        }\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}